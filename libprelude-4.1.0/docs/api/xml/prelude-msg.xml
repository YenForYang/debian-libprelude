<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="libprelude-prelude-msg">
<refmeta>
<refentrytitle role="top_of_page" id="libprelude-prelude-msg.top_of_page">prelude-msg</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBPRELUDE Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>prelude-msg</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libprelude-prelude-msg.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-read">prelude_msg_read</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-forward">prelude_msg_forward</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-get">prelude_msg_get</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-recycle">prelude_msg_recycle</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-mark-end">prelude_msg_mark_end</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-dynamic-new">prelude_msg_dynamic_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-new">prelude_msg_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-set">prelude_msg_set</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-write">prelude_msg_write</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-set-tag">prelude_msg_set_tag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-set-priority">prelude_msg_set_priority</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-get-tag">prelude_msg_get_tag</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-msg-priority-t"><returnvalue>prelude_msg_priority_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-get-priority">prelude_msg_get_priority</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-get-len">prelude_msg_get_len</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-get-datalen">prelude_msg_get_datalen</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-destroy">prelude_msg_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">struct <link linkend="timeval"><returnvalue>timeval</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-msg-get-time">prelude_msg_get_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-is-empty">prelude_msg_is_empty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-is-fragment">prelude_msg_is_fragment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-msg-t"><returnvalue>prelude_msg_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-msg-ref">prelude_msg_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-set-callback">prelude_msg_set_callback</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-msg-set-data">prelude_msg_set_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const unsigned <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-msg-get-message-data">prelude_msg_get_message_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libprelude-prelude-msg.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="prelude-msg-t">prelude_msg_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="prelude-msg-priority-t">prelude_msg_priority_t</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libprelude-prelude-msg.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libprelude-prelude-msg.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="prelude-msg-read" role="function">
<title>prelude_msg_read&#160;()</title>
<indexterm zone="prelude-msg-read"><primary>prelude_msg_read</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_read (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> **msg</parameter>,
                  <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *pio</parameter>);</programlisting>
<para>Read a message on <parameter>pio</parameter>
 into <parameter>msg</parameter>
. If <parameter>msg</parameter>
 is NULL, it is
allocated. This function will never block.</para>
<refsect3 id="prelude-msg-read.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object address.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pio</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-io-t"><type>prelude_io_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-read.returns" role="returns">
<title>Returns</title>
<para> 0 if reading the message is complete, or a <link linkend="prelude-error-t"><type>prelude_error_t</type></link>
error if an error occured. Take particular attention to <link linkend="PRELUDE-ERROR-EAGAIN:CAPS"><type>PRELUDE_ERROR_EAGAIN</type></link>
and PRELUDE_ERROR_EOF.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-forward" role="function">
<title>prelude_msg_forward&#160;()</title>
<indexterm zone="prelude-msg-forward"><primary>prelude_msg_forward</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_forward (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                     <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *dst</parameter>,
                     <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *src</parameter>);</programlisting>
<para>prelude_msg_forward() read the message corresponding to the <parameter>msg</parameter>
 object
containing the message header previously gathered using <link linkend="prelude-msg-read-header"><function>prelude_msg_read_header()</function></link>
from the <parameter>src</parameter>
 object, and transfer it to <parameter>dst</parameter>
. The header is also transfered.</para>
<refsect3 id="prelude-msg-forward.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object containing a message header.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-io-t"><type>prelude_io_t</type></link> object to send message to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-io-t"><type>prelude_io_t</type></link> object to read message from.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-forward.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get" role="function">
<title>prelude_msg_get&#160;()</title>
<indexterm zone="prelude-msg-get"><primary>prelude_msg_get</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_get (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                 <parameter><link linkend="uint8-t"><type>uint8_t</type></link> *tag</parameter>,
                 <parameter><link linkend="uint32-t"><type>uint32_t</type></link> *len</parameter>,
                 <parameter><link linkend="void"><type>void</type></link> **buf</parameter>);</programlisting>
<para>prelude_msg_get() read the next data chunk contained in the message.
<parameter>tag</parameter>
 is updated to contain the kind of data the chunk contain.
<parameter>len</parameter>
 is updated to contain the len of the data chunk.
<parameter>buf</parameter>
 is updated to point on the data chunk.</para>
<refsect3 id="prelude-msg-get.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object representing the message to get data from.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tag</para></entry>
<entry role="parameter_description"><para>Pointer on a 8 bits unsigned integer to store the message tag.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>len</para></entry>
<entry role="parameter_description"><para>Pointer on a 32 bits unsigned integer to store the message len to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>Address of a pointer to store the buffer starting address.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-get.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a <link linkend="prelude-error-t"><type>prelude_error_t</type></link> value on error.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-recycle" role="function">
<title>prelude_msg_recycle&#160;()</title>
<indexterm zone="prelude-msg-recycle"><primary>prelude_msg_recycle</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_recycle (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>Recycle <parameter>msg</parameter>
 so you can write at it again, even
thought it was written.</para>
<refsect3 id="prelude-msg-recycle.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-mark-end" role="function">
<title>prelude_msg_mark_end&#160;()</title>
<indexterm zone="prelude-msg-mark-end"><primary>prelude_msg_mark_end</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_mark_end (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>Mark end of message in the <parameter>msg</parameter>
 buffer, so you can continue
adding different message in the same buffer.</para>
<refsect3 id="prelude-msg-mark-end.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-dynamic-new" role="function">
<title>prelude_msg_dynamic_new&#160;()</title>
<indexterm zone="prelude-msg-dynamic-new"><primary>prelude_msg_dynamic_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_dynamic_new (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> **ret</parameter>,
                         <parameter><link linkend="int"><type>int</type></link> (*flush_msg_cb) (prelude_msg_t **msg, void *data)</parameter>,
                         <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>Allocate a new <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object. <link linkend="prelude-msg-set"><function>prelude_msg_set()</function></link> can then be used to
add chunk of data to the message, and <link linkend="prelude-msg-mark-start"><function>prelude_msg_mark_start()</function></link> to separate
different message in the same buffer.</para>
<para>This function use memory chunk of static size to store the message in. If
the size of the data you want to store is bigger than the actual chunk size,
<parameter>flush_msg_cb</parameter>
 callback will be called for the current message to be flushed,
and the returned message will be used in order to store remaining data.</para>
<refsect3 id="prelude-msg-dynamic-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the create <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flush_msg_cb</para></entry>
<entry role="parameter_description"><para>Callback function to call when the buffer need to be flushed.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Data to pass to the <parameter>flush_msg_cb</parameter>
callback function.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-dynamic-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-new" role="function">
<title>prelude_msg_new&#160;()</title>
<indexterm zone="prelude-msg-new"><primary>prelude_msg_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_new (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> **ret</parameter>,
                 <parameter><link linkend="size-t"><type>size_t</type></link> msgcount</parameter>,
                 <parameter><link linkend="size-t"><type>size_t</type></link> msglen</parameter>,
                 <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tag</parameter>,
                 <parameter><link linkend="prelude-msg-priority-t"><type>prelude_msg_priority_t</type></link> priority</parameter>);</programlisting>
<para>Allocate a new <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object and store it into <parameter>ret</parameter>
. <link linkend="prelude-msg-set"><function>prelude_msg_set()</function></link>
can then be used to add chunk of data to the message, and <link linkend="prelude-msg-write"><function>prelude_msg_write()</function></link>
to send it.</para>
<refsect3 id="prelude-msg-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>msgcount</para></entry>
<entry role="parameter_description"><para>Number of chunk of data the created object can accept.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>msglen</para></entry>
<entry role="parameter_description"><para>Maximum number of bytes the object should handle for all the chunks.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tag</para></entry>
<entry role="parameter_description"><para>A tag identifying the kind of message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>priority</para></entry>
<entry role="parameter_description"><para>The priority of this message.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-set" role="function">
<title>prelude_msg_set&#160;()</title>
<indexterm zone="prelude-msg-set"><primary>prelude_msg_set</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_set (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                 <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tag</parameter>,
                 <parameter><link linkend="uint32-t"><type>uint32_t</type></link> len</parameter>,
                 <parameter>const <link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>prelude_msg_set() append <parameter>len</parameter>
 bytes of data from the <parameter>data</parameter>
 buffer
to the <parameter>msg</parameter>
 object representing a message. The data is tagged with <parameter>tag</parameter>
.</para>
<refsect3 id="prelude-msg-set.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object to store the data to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tag</para></entry>
<entry role="parameter_description"><para>8 bits unsigned integer describing the kind of data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>len</para></entry>
<entry role="parameter_description"><para>len of the data chunk.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Pointer to the starting address of the data.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-set.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if the remaining space is not
available. You might check the return value mostly if using a dynamic message
through <link linkend="prelude-msg-dynamic-new"><function>prelude_msg_dynamic_new()</function></link></para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-write" role="function">
<title>prelude_msg_write&#160;()</title>
<indexterm zone="prelude-msg-write"><primary>prelude_msg_write</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_write (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                   <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *dst</parameter>);</programlisting>
<para>prelude_msg_write() write the message corresponding to the <parameter>msg</parameter>

object to <parameter>dst</parameter>
. The message should have been created using the
<link linkend="prelude-msg-new"><function>prelude_msg_new()</function></link> and <link linkend="prelude-msg-set"><function>prelude_msg_set()</function></link> functions.</para>
<refsect3 id="prelude-msg-write.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object containing the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-io-t"><type>prelude_io_t</type></link> object to send the message to.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-write.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-set-tag" role="function">
<title>prelude_msg_set_tag&#160;()</title>
<indexterm zone="prelude-msg-set-tag"><primary>prelude_msg_set_tag</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_set_tag (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                     <parameter><link linkend="uint8-t"><type>uint8_t</type></link> tag</parameter>);</programlisting>
<para>Tag <parameter>msg</parameter>
.</para>
<refsect3 id="prelude-msg-set-tag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tag</para></entry>
<entry role="parameter_description"><para>Tag to associate with <parameter>msg</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-set-priority" role="function">
<title>prelude_msg_set_priority&#160;()</title>
<indexterm zone="prelude-msg-set-priority"><primary>prelude_msg_set_priority</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_set_priority (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                          <parameter><link linkend="prelude-msg-priority-t"><type>prelude_msg_priority_t</type></link> priority</parameter>);</programlisting>
<para>Associate <parameter>priority</parameter>
 with <parameter>msg</parameter>
.</para>
<refsect3 id="prelude-msg-set-priority.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>priority</para></entry>
<entry role="parameter_description"><para>Priority to associate with <parameter>msg</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-tag" role="function">
<title>prelude_msg_get_tag&#160;()</title>
<indexterm zone="prelude-msg-get-tag"><primary>prelude_msg_get_tag</primary></indexterm>
<programlisting language="C"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>
prelude_msg_get_tag (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>prelude_msg_get_tag() return the tag contained in the <parameter>msg</parameter>
 header.</para>
<refsect3 id="prelude-msg-get-tag.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-get-tag.returns" role="returns">
<title>Returns</title>
<para> A tag.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-priority" role="function">
<title>prelude_msg_get_priority&#160;()</title>
<indexterm zone="prelude-msg-get-priority"><primary>prelude_msg_get_priority</primary></indexterm>
<programlisting language="C"><link linkend="prelude-msg-priority-t"><returnvalue>prelude_msg_priority_t</returnvalue></link>
prelude_msg_get_priority (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>prelude_msg_get_priority() return the priority contained in the <parameter>msg</parameter>
 header.</para>
<refsect3 id="prelude-msg-get-priority.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-get-priority.returns" role="returns">
<title>Returns</title>
<para> A priority.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-len" role="function">
<title>prelude_msg_get_len&#160;()</title>
<indexterm zone="prelude-msg-get-len"><primary>prelude_msg_get_len</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>
prelude_msg_get_len (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>prelude_msg_get_len() return the currently used
len for the <parameter>msg</parameter>
 message.</para>
<refsect3 id="prelude-msg-get-len.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-get-len.returns" role="returns">
<title>Returns</title>
<para> Len of the message.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-datalen" role="function">
<title>prelude_msg_get_datalen&#160;()</title>
<indexterm zone="prelude-msg-get-datalen"><primary>prelude_msg_get_datalen</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>
prelude_msg_get_datalen (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>prelude_msg_get_datalen() return the len of the whole message
contained in the <parameter>msg</parameter>
 header.</para>
<refsect3 id="prelude-msg-get-datalen.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-get-datalen.returns" role="returns">
<title>Returns</title>
<para> Len of the message.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-destroy" role="function">
<title>prelude_msg_destroy&#160;()</title>
<indexterm zone="prelude-msg-destroy"><primary>prelude_msg_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_destroy (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<para>prelude_msg_destroy() destroy the <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object pointed
to by <parameter>msg</parameter>
. All the ressources for this message are freed.</para>
<refsect3 id="prelude-msg-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-time" role="function">
<title>prelude_msg_get_time&#160;()</title>
<indexterm zone="prelude-msg-get-time"><primary>prelude_msg_get_time</primary></indexterm>
<programlisting language="C">struct <link linkend="timeval"><returnvalue>timeval</returnvalue></link>&#160;*
prelude_msg_get_time (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                      <parameter><type>struct timeval</type> *tv</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-msg-is-empty" role="function">
<title>prelude_msg_is_empty&#160;()</title>
<indexterm zone="prelude-msg-is-empty"><primary>prelude_msg_is_empty</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_is_empty (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<refsect3 id="prelude-msg-is-empty.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-is-empty.returns" role="returns">
<title>Returns</title>
<para> true if <parameter>msg</parameter>
doesn't contain any data to send.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-is-fragment" role="function">
<title>prelude_msg_is_fragment&#160;()</title>
<indexterm zone="prelude-msg-is-fragment"><primary>prelude_msg_is_fragment</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_msg_is_fragment (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
<refsect3 id="prelude-msg-is-fragment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-msg-is-fragment.returns" role="returns">
<title>Returns</title>
<para> true if <parameter>msg</parameter>
only contain a fragment of message.</para>
</refsect3></refsect2>
<refsect2 id="prelude-msg-ref" role="function">
<title>prelude_msg_ref&#160;()</title>
<indexterm zone="prelude-msg-ref"><primary>prelude_msg_ref</primary></indexterm>
<programlisting language="C"><link linkend="prelude-msg-t"><returnvalue>prelude_msg_t</returnvalue></link>&#160;*
prelude_msg_ref (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-msg-set-callback" role="function">
<title>prelude_msg_set_callback&#160;()</title>
<indexterm zone="prelude-msg-set-callback"><primary>prelude_msg_set_callback</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_set_callback (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> (*flush_msg_cb) (prelude_msg_t **msg, void *data)</parameter>);</programlisting>
<para>prelude_msg_set_callback() allow to change the callback used
to flush a message created with <link linkend="prelude-msg-dynamic-new"><function>prelude_msg_dynamic_new()</function></link>.</para>
<refsect3 id="prelude-msg-set-callback.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>flush_msg_cb</para></entry>
<entry role="parameter_description"><para>Pointer on a function responssible of sending the message.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-set-data" role="function">
<title>prelude_msg_set_data&#160;()</title>
<indexterm zone="prelude-msg-set-data"><primary>prelude_msg_set_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_msg_set_data (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>,
                      <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
<para>prelude_msg_set_data() allow to change the data passed
to the message sending callback.</para>
<refsect3 id="prelude-msg-set-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>msg</para></entry>
<entry role="parameter_description"><para>Pointer on a <link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Pointer on the data to associate to this message.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-msg-get-message-data" role="function">
<title>prelude_msg_get_message_data&#160;()</title>
<indexterm zone="prelude-msg-get-message-data"><primary>prelude_msg_get_message_data</primary></indexterm>
<programlisting language="C">const unsigned <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
prelude_msg_get_message_data (<parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="libprelude-prelude-msg.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="prelude-msg-t" role="typedef">
<title>prelude_msg_t</title>
<indexterm zone="prelude-msg-t"><primary>prelude_msg_t</primary></indexterm>
<programlisting language="C">typedef struct prelude_msg prelude_msg_t;
</programlisting>
</refsect2>
<refsect2 id="prelude-msg-priority-t" role="enum">
<title>enum prelude_msg_priority_t</title>
<indexterm zone="prelude-msg-priority-t"><primary>prelude_msg_priority_t</primary></indexterm>
<refsect3 id="prelude-msg-priority-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-MSG-PRIORITY-NONE:CAPS">PRELUDE_MSG_PRIORITY_NONE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-MSG-PRIORITY-LOW:CAPS">PRELUDE_MSG_PRIORITY_LOW</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-MSG-PRIORITY-MID:CAPS">PRELUDE_MSG_PRIORITY_MID</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-MSG-PRIORITY-HIGH:CAPS">PRELUDE_MSG_PRIORITY_HIGH</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
