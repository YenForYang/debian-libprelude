<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="libprelude-prelude-connection">
<refmeta>
<refentrytitle role="top_of_page" id="libprelude-prelude-connection.top_of_page">prelude-connection</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBPRELUDE Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>prelude-connection</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libprelude-prelude-connection.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-destroy">prelude_connection_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-send">prelude_connection_send</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-recv">prelude_connection_recv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-recv-idmef">prelude_connection_recv_idmef</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-connect">prelude_connection_connect</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-forward">prelude_connection_forward</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-get-local-addr">prelude_connection_get_local_addr</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-get-local-port">prelude_connection_get_local_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-get-peer-addr">prelude_connection_get_peer_addr</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-get-peer-port">prelude_connection_get_peer_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-bool-t"><returnvalue>prelude_bool_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-is-alive">prelude_connection_is_alive</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-io-t"><returnvalue>prelude_io_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-get-fd">prelude_connection_get_fd</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-close">prelude_connection_close</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-set-fd-ref">prelude_connection_set_fd_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-set-fd-nodup">prelude_connection_set_fd_nodup</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-set-state">prelude_connection_set_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-connection-state-t"><returnvalue>prelude_connection_state_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-get-state">prelude_connection_get_state</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-set-data">prelude_connection_set_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-get-data">prelude_connection_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-get-default-socket-filename">prelude_connection_get_default_socket_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-connection-permission-t"><returnvalue>prelude_connection_permission_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-get-permission">prelude_connection_get_permission</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-get-peer-analyzerid">prelude_connection_get_peer_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-set-peer-analyzerid">prelude_connection_set_peer_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-new">prelude_connection_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-connection-t"><returnvalue>prelude_connection_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-connection-ref">prelude_connection_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-new-msgbuf">prelude_connection_new_msgbuf</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-permission-to-string">prelude_connection_permission_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-connection-permission-new-from-string">prelude_connection_permission_new_from_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libprelude-prelude-connection.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="prelude-connection-permission-t">prelude_connection_permission_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="prelude-connection-state-t">prelude_connection_state_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="prelude-connection-t">prelude_connection_t</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libprelude-prelude-connection.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libprelude-prelude-connection.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="prelude-connection-destroy" role="function">
<title>prelude_connection_destroy&#160;()</title>
<indexterm zone="prelude-connection-destroy"><primary>prelude_connection_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_destroy (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *conn</parameter>);</programlisting>
<para>Destroy the connection referenced by <parameter>conn</parameter>
.</para>
<para>In case the connection is still alive, it is closed in a blocking
manner. Use <link linkend="prelude-connection-close"><function>prelude_connection_close()</function></link> if you want to close the
connection in a non blocking manner prior <link linkend="prelude-connection-destroy"><function>prelude_connection_destroy()</function></link>.</para>
<refsect3 id="prelude-connection-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-connection-send" role="function">
<title>prelude_connection_send&#160;()</title>
<indexterm zone="prelude-connection-send"><primary>prelude_connection_send</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_send (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                         <parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-recv" role="function">
<title>prelude_connection_recv&#160;()</title>
<indexterm zone="prelude-connection-recv"><primary>prelude_connection_recv</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_recv (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                         <parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> **outmsg</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-recv-idmef" role="function">
<title>prelude_connection_recv_idmef&#160;()</title>
<indexterm zone="prelude-connection-recv-idmef"><primary>prelude_connection_recv_idmef</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_recv_idmef (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *con</parameter>,
                               <parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> **idmef</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-connect" role="function">
<title>prelude_connection_connect&#160;()</title>
<indexterm zone="prelude-connection-connect"><primary>prelude_connection_connect</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_connect (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                            <parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *profile</parameter>,
                            <parameter><link linkend="prelude-connection-permission-t"><type>prelude_connection_permission_t</type></link> permission</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-forward" role="function">
<title>prelude_connection_forward&#160;()</title>
<indexterm zone="prelude-connection-forward"><primary>prelude_connection_forward</primary></indexterm>
<programlisting language="C"><link linkend="ssize-t"><returnvalue>ssize_t</returnvalue></link>
prelude_connection_forward (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                            <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *src</parameter>,
                            <parameter><link linkend="size-t"><type>size_t</type></link> count</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-local-addr" role="function">
<title>prelude_connection_get_local_addr&#160;()</title>
<indexterm zone="prelude-connection-get-local-addr"><primary>prelude_connection_get_local_addr</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
prelude_connection_get_local_addr (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
<refsect3 id="prelude-connection-get-local-addr.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cnx</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-connection-get-local-addr.returns" role="returns">
<title>Returns</title>
<para> the local address used to connect.</para>
</refsect3></refsect2>
<refsect2 id="prelude-connection-get-local-port" role="function">
<title>prelude_connection_get_local_port&#160;()</title>
<indexterm zone="prelude-connection-get-local-port"><primary>prelude_connection_get_local_port</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_get_local_port (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
<refsect3 id="prelude-connection-get-local-port.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cnx</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-connection-get-local-port.returns" role="returns">
<title>Returns</title>
<para> the local port used to connect.</para>
</refsect3></refsect2>
<refsect2 id="prelude-connection-get-peer-addr" role="function">
<title>prelude_connection_get_peer_addr&#160;()</title>
<indexterm zone="prelude-connection-get-peer-addr"><primary>prelude_connection_get_peer_addr</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
prelude_connection_get_peer_addr (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-peer-port" role="function">
<title>prelude_connection_get_peer_port&#160;()</title>
<indexterm zone="prelude-connection-get-peer-port"><primary>prelude_connection_get_peer_port</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_get_peer_port (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-is-alive" role="function">
<title>prelude_connection_is_alive&#160;()</title>
<indexterm zone="prelude-connection-is-alive"><primary>prelude_connection_is_alive</primary></indexterm>
<programlisting language="C"><link linkend="prelude-bool-t"><returnvalue>prelude_bool_t</returnvalue></link>
prelude_connection_is_alive (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
<refsect3 id="prelude-connection-is-alive.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cnx</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-connection-is-alive.returns" role="returns">
<title>Returns</title>
<para> 0 if the connection associated with <parameter>cnx</parameter>
is alive, -1 otherwise.</para>
</refsect3></refsect2>
<refsect2 id="prelude-connection-get-fd" role="function">
<title>prelude_connection_get_fd&#160;()</title>
<indexterm zone="prelude-connection-get-fd"><primary>prelude_connection_get_fd</primary></indexterm>
<programlisting language="C"><link linkend="prelude-io-t"><returnvalue>prelude_io_t</returnvalue></link>&#160;*
prelude_connection_get_fd (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
<refsect3 id="prelude-connection-get-fd.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cnx</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-connection-get-fd.returns" role="returns">
<title>Returns</title>
<para> A pointer to the <link linkend="prelude-io-t"><type>prelude_io_t</type></link> object used for
communicating with the peer.</para>
</refsect3></refsect2>
<refsect2 id="prelude-connection-close" role="function">
<title>prelude_connection_close&#160;()</title>
<indexterm zone="prelude-connection-close"><primary>prelude_connection_close</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_close (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-set-fd-ref" role="function">
<title>prelude_connection_set_fd_ref&#160;()</title>
<indexterm zone="prelude-connection-set-fd-ref"><primary>prelude_connection_set_fd_ref</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_set_fd_ref (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                               <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *fd</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-set-fd-nodup" role="function">
<title>prelude_connection_set_fd_nodup&#160;()</title>
<indexterm zone="prelude-connection-set-fd-nodup"><primary>prelude_connection_set_fd_nodup</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_set_fd_nodup (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                                 <parameter><link linkend="prelude-io-t"><type>prelude_io_t</type></link> *fd</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-set-state" role="function">
<title>prelude_connection_set_state&#160;()</title>
<indexterm zone="prelude-connection-set-state"><primary>prelude_connection_set_state</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_set_state (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                              <parameter><link linkend="prelude-connection-state-t"><type>prelude_connection_state_t</type></link> state</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-state" role="function">
<title>prelude_connection_get_state&#160;()</title>
<indexterm zone="prelude-connection-get-state"><primary>prelude_connection_get_state</primary></indexterm>
<programlisting language="C"><link linkend="prelude-connection-state-t"><returnvalue>prelude_connection_state_t</returnvalue></link>
prelude_connection_get_state (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-set-data" role="function">
<title>prelude_connection_set_data&#160;()</title>
<indexterm zone="prelude-connection-set-data"><primary>prelude_connection_set_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_set_data (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                             <parameter><link linkend="void"><type>void</type></link> *data</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-data" role="function">
<title>prelude_connection_get_data&#160;()</title>
<indexterm zone="prelude-connection-get-data"><primary>prelude_connection_get_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
prelude_connection_get_data (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-default-socket-filename" role="function">
<title>prelude_connection_get_default_socket_filename&#160;()</title>
<indexterm zone="prelude-connection-get-default-socket-filename"><primary>prelude_connection_get_default_socket_filename</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
prelude_connection_get_default_socket_filename
                               (<parameter><type>void</type></parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-permission" role="function">
<title>prelude_connection_get_permission&#160;()</title>
<indexterm zone="prelude-connection-get-permission"><primary>prelude_connection_get_permission</primary></indexterm>
<programlisting language="C"><link linkend="prelude-connection-permission-t"><returnvalue>prelude_connection_permission_t</returnvalue></link>
prelude_connection_get_permission (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *conn</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-get-peer-analyzerid" role="function">
<title>prelude_connection_get_peer_analyzerid&#160;()</title>
<indexterm zone="prelude-connection-get-peer-analyzerid"><primary>prelude_connection_get_peer_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>
prelude_connection_get_peer_analyzerid
                               (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-set-peer-analyzerid" role="function">
<title>prelude_connection_set_peer_analyzerid&#160;()</title>
<indexterm zone="prelude-connection-set-peer-analyzerid"><primary>prelude_connection_set_peer_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_connection_set_peer_analyzerid
                               (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *cnx</parameter>,
                                <parameter><link linkend="uint64-t"><type>uint64_t</type></link> analyzerid</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-new" role="function">
<title>prelude_connection_new&#160;()</title>
<indexterm zone="prelude-connection-new"><primary>prelude_connection_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_new (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> **ret</parameter>,
                        <parameter>const <link linkend="char"><type>char</type></link> *addr</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-ref" role="function">
<title>prelude_connection_ref&#160;()</title>
<indexterm zone="prelude-connection-ref"><primary>prelude_connection_ref</primary></indexterm>
<programlisting language="C"><link linkend="prelude-connection-t"><returnvalue>prelude_connection_t</returnvalue></link>&#160;*
prelude_connection_ref (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *conn</parameter>);</programlisting>
<para>Increases <parameter>conn</parameter>
 reference count.</para>
<para>prelude_connection_destroy() will decrease the refcount until it
reaches 0, at which point <parameter>conn</parameter>
 will be destroyed.</para>
<refsect3 id="prelude-connection-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>conn</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> object to reference.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-connection-ref.returns" role="returns">
<title>Returns</title>
<para> <parameter>conn</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="prelude-connection-new-msgbuf" role="function">
<title>prelude_connection_new_msgbuf&#160;()</title>
<indexterm zone="prelude-connection-new-msgbuf"><primary>prelude_connection_new_msgbuf</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_new_msgbuf (<parameter><link linkend="prelude-connection-t"><type>prelude_connection_t</type></link> *connection</parameter>,
                               <parameter><link linkend="prelude-msgbuf-t"><type>prelude_msgbuf_t</type></link> **msgbuf</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-permission-to-string" role="function">
<title>prelude_connection_permission_to_string&#160;()</title>
<indexterm zone="prelude-connection-permission-to-string"><primary>prelude_connection_permission_to_string</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_permission_to_string
                               (<parameter><link linkend="prelude-connection-permission-t"><type>prelude_connection_permission_t</type></link> perm</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *out</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-connection-permission-new-from-string" role="function">
<title>prelude_connection_permission_new_from_string&#160;()</title>
<indexterm zone="prelude-connection-permission-new-from-string"><primary>prelude_connection_permission_new_from_string</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_connection_permission_new_from_string
                               (<parameter><link linkend="prelude-connection-permission-t"><type>prelude_connection_permission_t</type></link> *out</parameter>,
                                <parameter>const <link linkend="char"><type>char</type></link> *buf</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="libprelude-prelude-connection.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="prelude-connection-permission-t" role="enum">
<title>enum prelude_connection_permission_t</title>
<indexterm zone="prelude-connection-permission-t"><primary>prelude_connection_permission_t</primary></indexterm>
<refsect3 id="prelude-connection-permission-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-CONNECTION-PERMISSION-IDMEF-READ:CAPS">PRELUDE_CONNECTION_PERMISSION_IDMEF_READ</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-CONNECTION-PERMISSION-ADMIN-READ:CAPS">PRELUDE_CONNECTION_PERMISSION_ADMIN_READ</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-CONNECTION-PERMISSION-IDMEF-WRITE:CAPS">PRELUDE_CONNECTION_PERMISSION_IDMEF_WRITE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-CONNECTION-PERMISSION-ADMIN-WRITE:CAPS">PRELUDE_CONNECTION_PERMISSION_ADMIN_WRITE</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-connection-state-t" role="enum">
<title>enum prelude_connection_state_t</title>
<indexterm zone="prelude-connection-state-t"><primary>prelude_connection_state_t</primary></indexterm>
<refsect3 id="prelude-connection-state-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="PRELUDE-CONNECTION-STATE-ESTABLISHED:CAPS">PRELUDE_CONNECTION_STATE_ESTABLISHED</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-connection-t" role="typedef">
<title>prelude_connection_t</title>
<indexterm zone="prelude-connection-t"><primary>prelude_connection_t</primary></indexterm>
<programlisting language="C">typedef struct prelude_connection prelude_connection_t;
</programlisting>
</refsect2>

</refsect1>

</refentry>
