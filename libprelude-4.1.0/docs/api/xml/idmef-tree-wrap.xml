<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="libprelude-idmef-tree-wrap">
<refmeta>
<refentrytitle role="top_of_page" id="libprelude-idmef-tree-wrap.top_of_page">idmef-tree-wrap</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBPRELUDE Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>idmef-tree-wrap</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libprelude-idmef-tree-wrap.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-get-data">idmef_message_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-get-number">idmef_message_get_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-get-string">idmef_message_get_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-get-value">idmef_message_get_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-data">idmef_message_set_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-number">idmef_message_set_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-string">idmef_message_set_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-value">idmef_message_set_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-additional-data-type-t"><returnvalue>idmef_additional_data_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-type-to-numeric">idmef_additional_data_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-additional-data-type-to-string">idmef_additional_data_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-new">idmef_additional_data_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-copy">idmef_additional_data_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-clone">idmef_additional_data_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-additional-data-ref">idmef_additional_data_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-destroy">idmef_additional_data_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-additional-data-type-t"><returnvalue>idmef_additional_data_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-get-type">idmef_additional_data_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-set-type">idmef_additional_data_set_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-new-type">idmef_additional_data_new_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-additional-data-get-meaning">idmef_additional_data_get_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-set-meaning">idmef_additional_data_set_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-new-meaning">idmef_additional_data_new_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-data-t"><returnvalue>idmef_data_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-additional-data-get-data">idmef_additional_data_get_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-set-data">idmef_additional_data_set_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-new-data">idmef_additional_data_new_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-reference-origin-t"><returnvalue>idmef_reference_origin_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-origin-to-numeric">idmef_reference_origin_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-reference-origin-to-string">idmef_reference_origin_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-new">idmef_reference_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-copy">idmef_reference_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-clone">idmef_reference_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-reference-t"><returnvalue>idmef_reference_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-reference-ref">idmef_reference_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-destroy">idmef_reference_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-reference-origin-t"><returnvalue>idmef_reference_origin_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-get-origin">idmef_reference_get_origin</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-set-origin">idmef_reference_set_origin</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-new-origin">idmef_reference_new_origin</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-reference-get-name">idmef_reference_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-set-name">idmef_reference_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-new-name">idmef_reference_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-reference-get-url">idmef_reference_get_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-set-url">idmef_reference_set_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-new-url">idmef_reference_new_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-reference-get-meaning">idmef_reference_get_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-set-meaning">idmef_reference_set_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-new-meaning">idmef_reference_new_meaning</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-new">idmef_classification_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-copy">idmef_classification_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-clone">idmef_classification_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-classification-t"><returnvalue>idmef_classification_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-classification-ref">idmef_classification_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-destroy">idmef_classification_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-classification-get-ident">idmef_classification_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-set-ident">idmef_classification_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-new-ident">idmef_classification_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-classification-get-text">idmef_classification_get_text</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-set-text">idmef_classification_set_text</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-new-text">idmef_classification_new_text</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-reference-t"><returnvalue>idmef_reference_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-classification-get-next-reference">idmef_classification_get_next_reference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-set-reference">idmef_classification_set_reference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-new-reference">idmef_classification_new_reference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-id-type-t"><returnvalue>idmef_user_id_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-type-to-numeric">idmef_user_id_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-type-to-string">idmef_user_id_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new">idmef_user_id_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-copy">idmef_user_id_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-clone">idmef_user_id_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-ref">idmef_user_id_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-destroy">idmef_user_id_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-get-ident">idmef_user_id_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-set-ident">idmef_user_id_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new-ident">idmef_user_id_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-id-type-t"><returnvalue>idmef_user_id_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-get-type">idmef_user_id_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-set-type">idmef_user_id_set_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new-type">idmef_user_id_new_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-get-tty">idmef_user_id_get_tty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-set-tty">idmef_user_id_set_tty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new-tty">idmef_user_id_new_tty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-get-name">idmef_user_id_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-set-name">idmef_user_id_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new-name">idmef_user_id_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-unset-number">idmef_user_id_unset_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-id-get-number">idmef_user_id_get_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-set-number">idmef_user_id_set_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-new-number">idmef_user_id_new_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-category-t"><returnvalue>idmef_user_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-category-to-numeric">idmef_user_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-category-to-string">idmef_user_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-new">idmef_user_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-copy">idmef_user_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-clone">idmef_user_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-ref">idmef_user_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-destroy">idmef_user_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-get-ident">idmef_user_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-set-ident">idmef_user_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-new-ident">idmef_user_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-category-t"><returnvalue>idmef_user_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-get-category">idmef_user_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-set-category">idmef_user_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-new-category">idmef_user_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-user-get-next-user-id">idmef_user_get_next_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-set-user-id">idmef_user_set_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-new-user-id">idmef_user_new_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-address-category-t"><returnvalue>idmef_address_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-category-to-numeric">idmef_address_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-category-to-string">idmef_address_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new">idmef_address_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-copy">idmef_address_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-clone">idmef_address_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-address-t"><returnvalue>idmef_address_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-ref">idmef_address_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-destroy">idmef_address_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-get-ident">idmef_address_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-ident">idmef_address_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-ident">idmef_address_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-address-category-t"><returnvalue>idmef_address_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-get-category">idmef_address_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-category">idmef_address_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-category">idmef_address_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-get-vlan-name">idmef_address_get_vlan_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-vlan-name">idmef_address_set_vlan_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-vlan-name">idmef_address_new_vlan_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-unset-vlan-num">idmef_address_unset_vlan_num</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int32-t"><returnvalue>int32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-get-vlan-num">idmef_address_get_vlan_num</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-vlan-num">idmef_address_set_vlan_num</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-vlan-num">idmef_address_new_vlan_num</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-get-address">idmef_address_get_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-address">idmef_address_set_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-address">idmef_address_new_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-address-get-netmask">idmef_address_get_netmask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-set-netmask">idmef_address_set_netmask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-new-netmask">idmef_address_new_netmask</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new">idmef_process_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-copy">idmef_process_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-clone">idmef_process_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-ref">idmef_process_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-destroy">idmef_process_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-ident">idmef_process_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-ident">idmef_process_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-ident">idmef_process_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-name">idmef_process_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-name">idmef_process_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-name">idmef_process_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-unset-pid">idmef_process_unset_pid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-pid">idmef_process_get_pid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-pid">idmef_process_set_pid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-pid">idmef_process_new_pid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-path">idmef_process_get_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-path">idmef_process_set_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-path">idmef_process_new_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-next-arg">idmef_process_get_next_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-arg">idmef_process_set_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-arg">idmef_process_new_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-process-get-next-env">idmef_process_get_next_env</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-set-env">idmef_process_set_env</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-new-env">idmef_process_new_env</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-new">idmef_web_service_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-copy">idmef_web_service_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-clone">idmef_web_service_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-web-service-t"><returnvalue>idmef_web_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-web-service-ref">idmef_web_service_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-destroy">idmef_web_service_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-web-service-get-url">idmef_web_service_get_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-set-url">idmef_web_service_set_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-new-url">idmef_web_service_new_url</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-web-service-get-cgi">idmef_web_service_get_cgi</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-set-cgi">idmef_web_service_set_cgi</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-new-cgi">idmef_web_service_new_cgi</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-web-service-get-http-method">idmef_web_service_get_http_method</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-set-http-method">idmef_web_service_set_http_method</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-new-http-method">idmef_web_service_new_http_method</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-web-service-get-next-arg">idmef_web_service_get_next_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-set-arg">idmef_web_service_set_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-new-arg">idmef_web_service_new_arg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new">idmef_snmp_service_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-copy">idmef_snmp_service_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-clone">idmef_snmp_service_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-snmp-service-t"><returnvalue>idmef_snmp_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-ref">idmef_snmp_service_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-destroy">idmef_snmp_service_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-oid">idmef_snmp_service_get_oid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-oid">idmef_snmp_service_set_oid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-oid">idmef_snmp_service_new_oid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-unset-message-processing-model">idmef_snmp_service_unset_message_processing_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-message-processing-model">idmef_snmp_service_get_message_processing_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-message-processing-model">idmef_snmp_service_set_message_processing_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-message-processing-model">idmef_snmp_service_new_message_processing_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-unset-security-model">idmef_snmp_service_unset_security_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-security-model">idmef_snmp_service_get_security_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-security-model">idmef_snmp_service_set_security_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-security-model">idmef_snmp_service_new_security_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-security-name">idmef_snmp_service_get_security_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-security-name">idmef_snmp_service_set_security_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-security-name">idmef_snmp_service_new_security_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-unset-security-level">idmef_snmp_service_unset_security_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-security-level">idmef_snmp_service_get_security_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-security-level">idmef_snmp_service_set_security_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-security-level">idmef_snmp_service_new_security_level</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-context-name">idmef_snmp_service_get_context_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-context-name">idmef_snmp_service_set_context_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-context-name">idmef_snmp_service_new_context_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-context-engine-id">idmef_snmp_service_get_context_engine_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-context-engine-id">idmef_snmp_service_set_context_engine_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-context-engine-id">idmef_snmp_service_new_context_engine_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-snmp-service-get-command">idmef_snmp_service_get_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-set-command">idmef_snmp_service_set_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-new-command">idmef_snmp_service_new_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-service-type-t"><returnvalue>idmef_service_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-type-to-numeric">idmef_service_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-type-to-string">idmef_service_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new">idmef_service_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-copy">idmef_service_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-clone">idmef_service_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-ref">idmef_service_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-destroy">idmef_service_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-ident">idmef_service_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-ident">idmef_service_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-ident">idmef_service_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-unset-ip-version">idmef_service_unset_ip_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-ip-version">idmef_service_get_ip_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-ip-version">idmef_service_set_ip_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-ip-version">idmef_service_new_ip_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-unset-iana-protocol-number">idmef_service_unset_iana_protocol_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-iana-protocol-number">idmef_service_get_iana_protocol_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-iana-protocol-number">idmef_service_set_iana_protocol_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-iana-protocol-number">idmef_service_new_iana_protocol_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-iana-protocol-name">idmef_service_get_iana_protocol_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-iana-protocol-name">idmef_service_set_iana_protocol_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-iana-protocol-name">idmef_service_new_iana_protocol_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-name">idmef_service_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-name">idmef_service_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-name">idmef_service_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-unset-port">idmef_service_unset_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint16-t"><returnvalue>uint16_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-port">idmef_service_get_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-port">idmef_service_set_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-port">idmef_service_new_port</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-portlist">idmef_service_get_portlist</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-portlist">idmef_service_set_portlist</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-portlist">idmef_service_new_portlist</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-protocol">idmef_service_get_protocol</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-protocol">idmef_service_set_protocol</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-protocol">idmef_service_new_protocol</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-service-type-t"><returnvalue>idmef_service_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-get-type">idmef_service_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-web-service-t"><returnvalue>idmef_web_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-web-service">idmef_service_get_web_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-web-service">idmef_service_set_web_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-web-service">idmef_service_new_web_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-snmp-service-t"><returnvalue>idmef_snmp_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-service-get-snmp-service">idmef_service_get_snmp_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-set-snmp-service">idmef_service_set_snmp_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-new-snmp-service">idmef_service_new_snmp_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-category-t"><returnvalue>idmef_node_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-category-to-numeric">idmef_node_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-category-to-string">idmef_node_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new">idmef_node_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-copy">idmef_node_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-clone">idmef_node_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-ref">idmef_node_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-destroy">idmef_node_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-get-ident">idmef_node_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-set-ident">idmef_node_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new-ident">idmef_node_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-category-t"><returnvalue>idmef_node_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-get-category">idmef_node_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-set-category">idmef_node_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new-category">idmef_node_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-get-location">idmef_node_get_location</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-set-location">idmef_node_set_location</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new-location">idmef_node_new_location</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-get-name">idmef_node_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-set-name">idmef_node_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new-name">idmef_node_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-address-t"><returnvalue>idmef_address_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-node-get-next-address">idmef_node_get_next_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-set-address">idmef_node_set_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-new-address">idmef_node_new_address</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-source-spoofed-t"><returnvalue>idmef_source_spoofed_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-spoofed-to-numeric">idmef_source_spoofed_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-spoofed-to-string">idmef_source_spoofed_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new">idmef_source_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-copy">idmef_source_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-clone">idmef_source_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-source-t"><returnvalue>idmef_source_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-ref">idmef_source_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-destroy">idmef_source_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-ident">idmef_source_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-ident">idmef_source_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-ident">idmef_source_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-source-spoofed-t"><returnvalue>idmef_source_spoofed_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-get-spoofed">idmef_source_get_spoofed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-spoofed">idmef_source_set_spoofed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-spoofed">idmef_source_new_spoofed</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-interface">idmef_source_get_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-interface">idmef_source_set_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-interface">idmef_source_new_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-node">idmef_source_get_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-node">idmef_source_set_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-node">idmef_source_new_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-user">idmef_source_get_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-user">idmef_source_set_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-user">idmef_source_new_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-process">idmef_source_get_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-process">idmef_source_set_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-process">idmef_source_new_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-source-get-service">idmef_source_get_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-set-service">idmef_source_set_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-new-service">idmef_source_new_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-new">idmef_file_access_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-copy">idmef_file_access_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-clone">idmef_file_access_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-access-t"><returnvalue>idmef_file_access_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-access-ref">idmef_file_access_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-destroy">idmef_file_access_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-access-get-user-id">idmef_file_access_get_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-set-user-id">idmef_file_access_set_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-new-user-id">idmef_file_access_new_user_id</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-access-get-next-permission">idmef_file_access_get_next_permission</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-set-permission">idmef_file_access_set_permission</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-new-permission">idmef_file_access_new_permission</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new">idmef_inode_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-copy">idmef_inode_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-clone">idmef_inode_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-inode-t"><returnvalue>idmef_inode_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-ref">idmef_inode_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-destroy">idmef_inode_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-change-time">idmef_inode_get_change_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-change-time">idmef_inode_set_change_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-change-time">idmef_inode_new_change_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-unset-number">idmef_inode_unset_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-number">idmef_inode_get_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-number">idmef_inode_set_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-number">idmef_inode_new_number</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-unset-major-device">idmef_inode_unset_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-major-device">idmef_inode_get_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-major-device">idmef_inode_set_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-major-device">idmef_inode_new_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-unset-minor-device">idmef_inode_unset_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-minor-device">idmef_inode_get_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-minor-device">idmef_inode_set_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-minor-device">idmef_inode_new_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-unset-c-major-device">idmef_inode_unset_c_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-c-major-device">idmef_inode_get_c_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-c-major-device">idmef_inode_set_c_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-c-major-device">idmef_inode_new_c_major_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-unset-c-minor-device">idmef_inode_unset_c_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-inode-get-c-minor-device">idmef_inode_get_c_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-set-c-minor-device">idmef_inode_set_c_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-new-c-minor-device">idmef_inode_new_c_minor_device</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-checksum-algorithm-t"><returnvalue>idmef_checksum_algorithm_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-algorithm-to-numeric">idmef_checksum_algorithm_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-checksum-algorithm-to-string">idmef_checksum_algorithm_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-new">idmef_checksum_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-copy">idmef_checksum_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-clone">idmef_checksum_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-checksum-t"><returnvalue>idmef_checksum_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-checksum-ref">idmef_checksum_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-destroy">idmef_checksum_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-checksum-get-value">idmef_checksum_get_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-set-value">idmef_checksum_set_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-new-value">idmef_checksum_new_value</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-checksum-get-key">idmef_checksum_get_key</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-set-key">idmef_checksum_set_key</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-new-key">idmef_checksum_new_key</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-checksum-algorithm-t"><returnvalue>idmef_checksum_algorithm_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-get-algorithm">idmef_checksum_get_algorithm</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-set-algorithm">idmef_checksum_set_algorithm</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-new-algorithm">idmef_checksum_new_algorithm</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-category-t"><returnvalue>idmef_file_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-category-to-numeric">idmef_file_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-category-to-string">idmef_file_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-fstype-t"><returnvalue>idmef_file_fstype_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-fstype-to-numeric">idmef_file_fstype_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-fstype-to-string">idmef_file_fstype_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new">idmef_file_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-copy">idmef_file_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-clone">idmef_file_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-ref">idmef_file_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-destroy">idmef_file_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-ident">idmef_file_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-ident">idmef_file_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-ident">idmef_file_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-name">idmef_file_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-name">idmef_file_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-name">idmef_file_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-path">idmef_file_get_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-path">idmef_file_set_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-path">idmef_file_new_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-create-time">idmef_file_get_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-create-time">idmef_file_set_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-create-time">idmef_file_new_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-modify-time">idmef_file_get_modify_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-modify-time">idmef_file_set_modify_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-modify-time">idmef_file_new_modify_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-access-time">idmef_file_get_access_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-access-time">idmef_file_set_access_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-access-time">idmef_file_new_access_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-unset-data-size">idmef_file_unset_data_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-data-size">idmef_file_get_data_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-data-size">idmef_file_set_data_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-data-size">idmef_file_new_data_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-unset-disk-size">idmef_file_unset_disk_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-disk-size">idmef_file_get_disk_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-disk-size">idmef_file_set_disk_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-disk-size">idmef_file_new_disk_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-access-t"><returnvalue>idmef_file_access_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-next-file-access">idmef_file_get_next_file_access</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-file-access">idmef_file_set_file_access</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-file-access">idmef_file_new_file_access</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-linkage-t"><returnvalue>idmef_linkage_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-next-linkage">idmef_file_get_next_linkage</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-linkage">idmef_file_set_linkage</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-linkage">idmef_file_new_linkage</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-inode-t"><returnvalue>idmef_inode_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-inode">idmef_file_get_inode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-inode">idmef_file_set_inode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-inode">idmef_file_new_inode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-checksum-t"><returnvalue>idmef_checksum_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-next-checksum">idmef_file_get_next_checksum</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-checksum">idmef_file_set_checksum</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-checksum">idmef_file_new_checksum</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-category-t"><returnvalue>idmef_file_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-get-category">idmef_file_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-category">idmef_file_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-category">idmef_file_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-unset-fstype">idmef_file_unset_fstype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-fstype-t"><returnvalue>idmef_file_fstype_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-fstype">idmef_file_get_fstype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-fstype">idmef_file_set_fstype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-fstype">idmef_file_new_fstype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-file-get-file-type">idmef_file_get_file_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-set-file-type">idmef_file_set_file_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-new-file-type">idmef_file_new_file_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-linkage-category-t"><returnvalue>idmef_linkage_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-category-to-numeric">idmef_linkage_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-linkage-category-to-string">idmef_linkage_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-new">idmef_linkage_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-copy">idmef_linkage_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-clone">idmef_linkage_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-linkage-t"><returnvalue>idmef_linkage_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-linkage-ref">idmef_linkage_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-destroy">idmef_linkage_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-linkage-category-t"><returnvalue>idmef_linkage_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-get-category">idmef_linkage_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-set-category">idmef_linkage_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-new-category">idmef_linkage_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-linkage-get-name">idmef_linkage_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-set-name">idmef_linkage_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-new-name">idmef_linkage_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-linkage-get-path">idmef_linkage_get_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-set-path">idmef_linkage_set_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-new-path">idmef_linkage_new_path</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-linkage-get-file">idmef_linkage_get_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-set-file">idmef_linkage_set_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-new-file">idmef_linkage_new_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-target-decoy-t"><returnvalue>idmef_target_decoy_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-decoy-to-numeric">idmef_target_decoy_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-decoy-to-string">idmef_target_decoy_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new">idmef_target_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-copy">idmef_target_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-clone">idmef_target_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-target-t"><returnvalue>idmef_target_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-ref">idmef_target_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-destroy">idmef_target_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-ident">idmef_target_get_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-ident">idmef_target_set_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-ident">idmef_target_new_ident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-target-decoy-t"><returnvalue>idmef_target_decoy_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-get-decoy">idmef_target_get_decoy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-decoy">idmef_target_set_decoy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-decoy">idmef_target_new_decoy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-interface">idmef_target_get_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-interface">idmef_target_set_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-interface">idmef_target_new_interface</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-node">idmef_target_get_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-node">idmef_target_set_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-node">idmef_target_new_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-user">idmef_target_get_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-user">idmef_target_set_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-user">idmef_target_new_user</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-process">idmef_target_get_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-process">idmef_target_set_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-process">idmef_target_new_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-service">idmef_target_get_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-service">idmef_target_set_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-service">idmef_target_new_service</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-target-get-next-file">idmef_target_get_next_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-set-file">idmef_target_set_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-new-file">idmef_target_new_file</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new">idmef_analyzer_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-copy">idmef_analyzer_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-clone">idmef_analyzer_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-ref">idmef_analyzer_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-destroy">idmef_analyzer_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-analyzerid">idmef_analyzer_get_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-analyzerid">idmef_analyzer_set_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-analyzerid">idmef_analyzer_new_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-name">idmef_analyzer_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-name">idmef_analyzer_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-name">idmef_analyzer_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-manufacturer">idmef_analyzer_get_manufacturer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-manufacturer">idmef_analyzer_set_manufacturer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-manufacturer">idmef_analyzer_new_manufacturer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-model">idmef_analyzer_get_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-model">idmef_analyzer_set_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-model">idmef_analyzer_new_model</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-version">idmef_analyzer_get_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-version">idmef_analyzer_set_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-version">idmef_analyzer_new_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-class">idmef_analyzer_get_class</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-class">idmef_analyzer_set_class</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-class">idmef_analyzer_new_class</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-ostype">idmef_analyzer_get_ostype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-ostype">idmef_analyzer_set_ostype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-ostype">idmef_analyzer_new_ostype</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-osversion">idmef_analyzer_get_osversion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-osversion">idmef_analyzer_set_osversion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-osversion">idmef_analyzer_new_osversion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-node">idmef_analyzer_get_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-node">idmef_analyzer_set_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-node">idmef_analyzer_new_node</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-analyzer-get-process">idmef_analyzer_get_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-set-process">idmef_analyzer_set_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-new-process">idmef_analyzer_new_process</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-new">idmef_alertident_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-copy">idmef_alertident_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-clone">idmef_alertident_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alertident-ref">idmef_alertident_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-destroy">idmef_alertident_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alertident-get-alertident">idmef_alertident_get_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-set-alertident">idmef_alertident_set_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-new-alertident">idmef_alertident_new_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alertident-get-analyzerid">idmef_alertident_get_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-set-analyzerid">idmef_alertident_set_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-new-analyzerid">idmef_alertident_new_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-severity-t"><returnvalue>idmef_impact_severity_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-severity-to-numeric">idmef_impact_severity_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-severity-to-string">idmef_impact_severity_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-completion-t"><returnvalue>idmef_impact_completion_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-completion-to-numeric">idmef_impact_completion_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-completion-to-string">idmef_impact_completion_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-type-t"><returnvalue>idmef_impact_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-type-to-numeric">idmef_impact_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-type-to-string">idmef_impact_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-new">idmef_impact_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-copy">idmef_impact_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-clone">idmef_impact_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-t"><returnvalue>idmef_impact_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-ref">idmef_impact_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-destroy">idmef_impact_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-unset-severity">idmef_impact_unset_severity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-severity-t"><returnvalue>idmef_impact_severity_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-get-severity">idmef_impact_get_severity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-set-severity">idmef_impact_set_severity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-new-severity">idmef_impact_new_severity</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-unset-completion">idmef_impact_unset_completion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-completion-t"><returnvalue>idmef_impact_completion_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-get-completion">idmef_impact_get_completion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-set-completion">idmef_impact_set_completion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-new-completion">idmef_impact_new_completion</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-type-t"><returnvalue>idmef_impact_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-get-type">idmef_impact_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-set-type">idmef_impact_set_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-new-type">idmef_impact_new_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-impact-get-description">idmef_impact_get_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-set-description">idmef_impact_set_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-new-description">idmef_impact_new_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-action-category-t"><returnvalue>idmef_action_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-category-to-numeric">idmef_action_category_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-action-category-to-string">idmef_action_category_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-new">idmef_action_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-copy">idmef_action_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-clone">idmef_action_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-action-t"><returnvalue>idmef_action_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-action-ref">idmef_action_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-destroy">idmef_action_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-action-category-t"><returnvalue>idmef_action_category_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-get-category">idmef_action_get_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-set-category">idmef_action_set_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-new-category">idmef_action_new_category</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-action-get-description">idmef_action_get_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-set-description">idmef_action_set_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-new-description">idmef_action_new_description</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-confidence-rating-t"><returnvalue>idmef_confidence_rating_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-rating-to-numeric">idmef_confidence_rating_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-confidence-rating-to-string">idmef_confidence_rating_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-new">idmef_confidence_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-copy">idmef_confidence_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-clone">idmef_confidence_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-confidence-t"><returnvalue>idmef_confidence_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-confidence-ref">idmef_confidence_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-destroy">idmef_confidence_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-confidence-rating-t"><returnvalue>idmef_confidence_rating_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-get-rating">idmef_confidence_get_rating</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-set-rating">idmef_confidence_set_rating</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-new-rating">idmef_confidence_new_rating</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="float"><returnvalue>float</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-get-confidence">idmef_confidence_get_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-set-confidence">idmef_confidence_set_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-new-confidence">idmef_confidence_new_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-new">idmef_assessment_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-copy">idmef_assessment_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-clone">idmef_assessment_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-assessment-t"><returnvalue>idmef_assessment_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-assessment-ref">idmef_assessment_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-destroy">idmef_assessment_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-impact-t"><returnvalue>idmef_impact_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-assessment-get-impact">idmef_assessment_get_impact</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-set-impact">idmef_assessment_set_impact</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-new-impact">idmef_assessment_new_impact</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-action-t"><returnvalue>idmef_action_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-assessment-get-next-action">idmef_assessment_get_next_action</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-set-action">idmef_assessment_set_action</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-new-action">idmef_assessment_new_action</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-confidence-t"><returnvalue>idmef_confidence_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-assessment-get-confidence">idmef_assessment_get_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-set-confidence">idmef_assessment_set_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-new-confidence">idmef_assessment_new_confidence</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-new">idmef_tool_alert_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-copy">idmef_tool_alert_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-clone">idmef_tool_alert_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-tool-alert-t"><returnvalue>idmef_tool_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-tool-alert-ref">idmef_tool_alert_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-destroy">idmef_tool_alert_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-tool-alert-get-name">idmef_tool_alert_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-set-name">idmef_tool_alert_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-new-name">idmef_tool_alert_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-tool-alert-get-command">idmef_tool_alert_get_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-set-command">idmef_tool_alert_set_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-new-command">idmef_tool_alert_new_command</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-tool-alert-get-next-alertident">idmef_tool_alert_get_next_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-set-alertident">idmef_tool_alert_set_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-new-alertident">idmef_tool_alert_new_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-new">idmef_correlation_alert_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-copy">idmef_correlation_alert_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-clone">idmef_correlation_alert_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-correlation-alert-t"><returnvalue>idmef_correlation_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-ref">idmef_correlation_alert_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-destroy">idmef_correlation_alert_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-get-name">idmef_correlation_alert_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-set-name">idmef_correlation_alert_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-new-name">idmef_correlation_alert_new_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-get-next-alertident">idmef_correlation_alert_get_next_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-set-alertident">idmef_correlation_alert_set_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-new-alertident">idmef_correlation_alert_new_alertident</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-new">idmef_overflow_alert_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-copy">idmef_overflow_alert_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-clone">idmef_overflow_alert_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-overflow-alert-t"><returnvalue>idmef_overflow_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-ref">idmef_overflow_alert_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-destroy">idmef_overflow_alert_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-get-program">idmef_overflow_alert_get_program</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-set-program">idmef_overflow_alert_set_program</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-new-program">idmef_overflow_alert_new_program</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-unset-size">idmef_overflow_alert_unset_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-get-size">idmef_overflow_alert_get_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-set-size">idmef_overflow_alert_set_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-new-size">idmef_overflow_alert_new_size</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-data-t"><returnvalue>idmef_data_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-get-buffer">idmef_overflow_alert_get_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-set-buffer">idmef_overflow_alert_set_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-new-buffer">idmef_overflow_alert_new_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alert-type-t"><returnvalue>idmef_alert_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-type-to-numeric">idmef_alert_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-type-to-string">idmef_alert_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new">idmef_alert_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-copy">idmef_alert_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-clone">idmef_alert_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alert-t"><returnvalue>idmef_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-ref">idmef_alert_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-destroy">idmef_alert_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-messageid">idmef_alert_get_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-messageid">idmef_alert_set_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-messageid">idmef_alert_new_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-next-analyzer">idmef_alert_get_next_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-analyzer">idmef_alert_set_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-analyzer">idmef_alert_new_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-create-time">idmef_alert_get_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-create-time">idmef_alert_set_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-create-time">idmef_alert_new_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-classification-t"><returnvalue>idmef_classification_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-classification">idmef_alert_get_classification</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-classification">idmef_alert_set_classification</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-classification">idmef_alert_new_classification</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-detect-time">idmef_alert_get_detect_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-detect-time">idmef_alert_set_detect_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-detect-time">idmef_alert_new_detect_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-analyzer-time">idmef_alert_get_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-analyzer-time">idmef_alert_set_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-analyzer-time">idmef_alert_new_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-source-t"><returnvalue>idmef_source_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-next-source">idmef_alert_get_next_source</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-source">idmef_alert_set_source</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-source">idmef_alert_new_source</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-target-t"><returnvalue>idmef_target_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-next-target">idmef_alert_get_next_target</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-target">idmef_alert_set_target</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-target">idmef_alert_new_target</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-assessment-t"><returnvalue>idmef_assessment_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-assessment">idmef_alert_get_assessment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-assessment">idmef_alert_set_assessment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-assessment">idmef_alert_new_assessment</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-next-additional-data">idmef_alert_get_next_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-additional-data">idmef_alert_set_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-additional-data">idmef_alert_new_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alert-type-t"><returnvalue>idmef_alert_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-get-type">idmef_alert_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-tool-alert-t"><returnvalue>idmef_tool_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-tool-alert">idmef_alert_get_tool_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-tool-alert">idmef_alert_set_tool_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-tool-alert">idmef_alert_new_tool_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-correlation-alert-t"><returnvalue>idmef_correlation_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-correlation-alert">idmef_alert_get_correlation_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-correlation-alert">idmef_alert_set_correlation_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-correlation-alert">idmef_alert_new_correlation_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-overflow-alert-t"><returnvalue>idmef_overflow_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-alert-get-overflow-alert">idmef_alert_get_overflow_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-set-overflow-alert">idmef_alert_set_overflow_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-new-overflow-alert">idmef_alert_new_overflow_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new">idmef_heartbeat_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-copy">idmef_heartbeat_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-clone">idmef_heartbeat_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-heartbeat-t"><returnvalue>idmef_heartbeat_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-ref">idmef_heartbeat_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-destroy">idmef_heartbeat_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-messageid">idmef_heartbeat_get_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-messageid">idmef_heartbeat_set_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-messageid">idmef_heartbeat_new_messageid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-next-analyzer">idmef_heartbeat_get_next_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-analyzer">idmef_heartbeat_set_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-analyzer">idmef_heartbeat_new_analyzer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-create-time">idmef_heartbeat_get_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-create-time">idmef_heartbeat_set_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-create-time">idmef_heartbeat_new_create_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-analyzer-time">idmef_heartbeat_get_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-analyzer-time">idmef_heartbeat_set_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-analyzer-time">idmef_heartbeat_new_analyzer_time</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-unset-heartbeat-interval">idmef_heartbeat_unset_heartbeat_interval</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-heartbeat-interval">idmef_heartbeat_get_heartbeat_interval</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-heartbeat-interval">idmef_heartbeat_set_heartbeat_interval</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-heartbeat-interval">idmef_heartbeat_new_heartbeat_interval</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-heartbeat-get-next-additional-data">idmef_heartbeat_get_next_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-set-additional-data">idmef_heartbeat_set_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-new-additional-data">idmef_heartbeat_new_additional_data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-message-type-t"><returnvalue>idmef_message_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-type-to-numeric">idmef_message_type_to_numeric</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-type-to-string">idmef_message_type_to_string</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-new">idmef_message_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-copy">idmef_message_copy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-clone">idmef_message_clone</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-message-t"><returnvalue>idmef_message_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-ref">idmef_message_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-destroy">idmef_message_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-get-version">idmef_message_get_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-version">idmef_message_set_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-new-version">idmef_message_new_version</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-message-type-t"><returnvalue>idmef_message_type_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-get-type">idmef_message_get_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-alert-t"><returnvalue>idmef_alert_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-get-alert">idmef_message_get_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-alert">idmef_message_set_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-new-alert">idmef_message_new_alert</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="idmef-heartbeat-t"><returnvalue>idmef_heartbeat_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-get-heartbeat">idmef_message_get_heartbeat</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-heartbeat">idmef_message_set_heartbeat</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-new-heartbeat">idmef_message_new_heartbeat</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-set-pmsg">idmef_message_set_pmsg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-msg-t"><returnvalue>prelude_msg_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="idmef-message-get-pmsg">idmef_message_get_pmsg</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-action-compare">idmef_action_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-additional-data-compare">idmef_additional_data_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-address-compare">idmef_address_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alert-compare">idmef_alert_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-alertident-compare">idmef_alertident_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-analyzer-compare">idmef_analyzer_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-assessment-compare">idmef_assessment_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-checksum-compare">idmef_checksum_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-classification-compare">idmef_classification_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-confidence-compare">idmef_confidence_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-correlation-alert-compare">idmef_correlation_alert_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-data-compare">idmef_data_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-access-compare">idmef_file_access_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-file-compare">idmef_file_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-heartbeat-compare">idmef_heartbeat_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-impact-compare">idmef_impact_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-inode-compare">idmef_inode_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-linkage-compare">idmef_linkage_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-message-compare">idmef_message_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-node-compare">idmef_node_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-overflow-alert-compare">idmef_overflow_alert_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-process-compare">idmef_process_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-reference-compare">idmef_reference_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-service-compare">idmef_service_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-snmp-service-compare">idmef_snmp_service_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-source-compare">idmef_source_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-target-compare">idmef_target_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-time-compare">idmef_time_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-tool-alert-compare">idmef_tool_alert_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-compare">idmef_user_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-user-id-compare">idmef_user_id_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="idmef-web-service-compare">idmef_web_service_compare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libprelude-idmef-tree-wrap.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-LIST-APPEND:CAPS">IDMEF_LIST_APPEND</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-LIST-PREPEND:CAPS">IDMEF_LIST_PREPEND</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-additional-data-type-t">idmef_additional_data_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-additional-data-t">idmef_additional_data_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-reference-origin-t">idmef_reference_origin_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-reference-t">idmef_reference_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-classification-t">idmef_classification_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-user-id-type-t">idmef_user_id_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-user-id-t">idmef_user_id_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-user-category-t">idmef_user_category_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-user-t">idmef_user_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-address-category-t">idmef_address_category_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-address-t">idmef_address_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-process-t">idmef_process_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-web-service-t">idmef_web_service_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-snmp-service-t">idmef_snmp_service_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-service-type-t">idmef_service_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-service-t">idmef_service_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-node-category-t">idmef_node_category_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-node-t">idmef_node_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-source-spoofed-t">idmef_source_spoofed_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-source-t">idmef_source_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-file-access-t">idmef_file_access_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-inode-t">idmef_inode_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-linkage-t">idmef_linkage_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-checksum-algorithm-t">idmef_checksum_algorithm_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-checksum-t">idmef_checksum_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-file-category-t">idmef_file_category_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-file-fstype-t">idmef_file_fstype_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-file-t">idmef_file_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-linkage-category-t">idmef_linkage_category_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-target-decoy-t">idmef_target_decoy_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-target-t">idmef_target_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-analyzer-t">idmef_analyzer_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-alertident-t">idmef_alertident_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-impact-severity-t">idmef_impact_severity_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-impact-completion-t">idmef_impact_completion_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-impact-type-t">idmef_impact_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-impact-t">idmef_impact_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-action-category-t">idmef_action_category_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-action-t">idmef_action_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-confidence-rating-t">idmef_confidence_rating_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-confidence-t">idmef_confidence_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-assessment-t">idmef_assessment_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-tool-alert-t">idmef_tool_alert_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-correlation-alert-t">idmef_correlation_alert_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-overflow-alert-t">idmef_overflow_alert_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-alert-type-t">idmef_alert_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-alert-t">idmef_alert_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-heartbeat-t">idmef_heartbeat_t</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="idmef-message-type-t">idmef_message_type_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="idmef-message-t">idmef_message_t</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ADDITIONAL-DATA-TYPE:CAPS">IDMEF_CLASS_ID_ADDITIONAL_DATA_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ADDITIONAL-DATA:CAPS">IDMEF_CLASS_ID_ADDITIONAL_DATA</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-REFERENCE-ORIGIN:CAPS">IDMEF_CLASS_ID_REFERENCE_ORIGIN</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-REFERENCE:CAPS">IDMEF_CLASS_ID_REFERENCE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CLASSIFICATION:CAPS">IDMEF_CLASS_ID_CLASSIFICATION</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-USER-ID-TYPE:CAPS">IDMEF_CLASS_ID_USER_ID_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-USER-ID:CAPS">IDMEF_CLASS_ID_USER_ID</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-USER-CATEGORY:CAPS">IDMEF_CLASS_ID_USER_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-USER:CAPS">IDMEF_CLASS_ID_USER</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ADDRESS-CATEGORY:CAPS">IDMEF_CLASS_ID_ADDRESS_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ADDRESS:CAPS">IDMEF_CLASS_ID_ADDRESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-PROCESS:CAPS">IDMEF_CLASS_ID_PROCESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-WEB-SERVICE:CAPS">IDMEF_CLASS_ID_WEB_SERVICE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-SNMP-SERVICE:CAPS">IDMEF_CLASS_ID_SNMP_SERVICE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-SERVICE-TYPE:CAPS">IDMEF_CLASS_ID_SERVICE_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-SERVICE:CAPS">IDMEF_CLASS_ID_SERVICE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-NODE-CATEGORY:CAPS">IDMEF_CLASS_ID_NODE_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-NODE:CAPS">IDMEF_CLASS_ID_NODE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-SOURCE-SPOOFED:CAPS">IDMEF_CLASS_ID_SOURCE_SPOOFED</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-SOURCE:CAPS">IDMEF_CLASS_ID_SOURCE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-FILE-ACCESS:CAPS">IDMEF_CLASS_ID_FILE_ACCESS</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-INODE:CAPS">IDMEF_CLASS_ID_INODE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CHECKSUM-ALGORITHM:CAPS">IDMEF_CLASS_ID_CHECKSUM_ALGORITHM</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CHECKSUM:CAPS">IDMEF_CLASS_ID_CHECKSUM</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-FILE-CATEGORY:CAPS">IDMEF_CLASS_ID_FILE_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-FILE-FSTYPE:CAPS">IDMEF_CLASS_ID_FILE_FSTYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-FILE:CAPS">IDMEF_CLASS_ID_FILE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-LINKAGE-CATEGORY:CAPS">IDMEF_CLASS_ID_LINKAGE_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-LINKAGE:CAPS">IDMEF_CLASS_ID_LINKAGE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-TARGET-DECOY:CAPS">IDMEF_CLASS_ID_TARGET_DECOY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-TARGET:CAPS">IDMEF_CLASS_ID_TARGET</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ANALYZER:CAPS">IDMEF_CLASS_ID_ANALYZER</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ALERTIDENT:CAPS">IDMEF_CLASS_ID_ALERTIDENT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-IMPACT-SEVERITY:CAPS">IDMEF_CLASS_ID_IMPACT_SEVERITY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-IMPACT-COMPLETION:CAPS">IDMEF_CLASS_ID_IMPACT_COMPLETION</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-IMPACT-TYPE:CAPS">IDMEF_CLASS_ID_IMPACT_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-IMPACT:CAPS">IDMEF_CLASS_ID_IMPACT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ACTION-CATEGORY:CAPS">IDMEF_CLASS_ID_ACTION_CATEGORY</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ACTION:CAPS">IDMEF_CLASS_ID_ACTION</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CONFIDENCE-RATING:CAPS">IDMEF_CLASS_ID_CONFIDENCE_RATING</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CONFIDENCE:CAPS">IDMEF_CLASS_ID_CONFIDENCE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ASSESSMENT:CAPS">IDMEF_CLASS_ID_ASSESSMENT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-TOOL-ALERT:CAPS">IDMEF_CLASS_ID_TOOL_ALERT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-CORRELATION-ALERT:CAPS">IDMEF_CLASS_ID_CORRELATION_ALERT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-OVERFLOW-ALERT:CAPS">IDMEF_CLASS_ID_OVERFLOW_ALERT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ALERT-TYPE:CAPS">IDMEF_CLASS_ID_ALERT_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-ALERT:CAPS">IDMEF_CLASS_ID_ALERT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-HEARTBEAT:CAPS">IDMEF_CLASS_ID_HEARTBEAT</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-MESSAGE-TYPE:CAPS">IDMEF_CLASS_ID_MESSAGE_TYPE</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="IDMEF-CLASS-ID-MESSAGE:CAPS">IDMEF_CLASS_ID_MESSAGE</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libprelude-idmef-tree-wrap.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libprelude-idmef-tree-wrap.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="idmef-message-get-data" role="function">
<title>idmef_message_get_data&#160;()</title>
<indexterm zone="idmef-message-get-data"><primary>idmef_message_get_data</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_get_data (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                        <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                        <parameter>unsigned <link linkend="char"><type>char</type></link> **data</parameter>,
                        <parameter><link linkend="size-t"><type>size_t</type></link> *size</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-message-get-number" role="function">
<title>idmef_message_get_number&#160;()</title>
<indexterm zone="idmef-message-get-number"><primary>idmef_message_get_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_get_number (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                          <parameter><link linkend="double"><type>double</type></link> *result</parameter>);</programlisting>
<para>Retrieve the number stored within <parameter>path</parameter>
 of <parameter>message</parameter>
 and store it
in the user provided <parameter>result</parameter>
.</para>
<refsect3 id="idmef-message-get-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to retrieve the number from within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>Pointer where the result should be stored.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-number.returns" role="returns">
<title>Returns</title>
<para> A positive value in case <parameter>path</parameter>
was successfully retrieved
0 if the path is empty, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-string" role="function">
<title>idmef_message_get_string&#160;()</title>
<indexterm zone="idmef-message-get-string"><primary>idmef_message_get_string</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_get_string (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                          <parameter><link linkend="char"><type>char</type></link> **result</parameter>);</programlisting>
<para>Retrieve the string stored within <parameter>path</parameter>
 of <parameter>message</parameter>
 and store it
in the user provided <parameter>result</parameter>
.</para>
<para>The caller is responssible for freeing <parameter>result</parameter>
.</para>
<refsect3 id="idmef-message-get-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to retrieve the string from within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>result</para></entry>
<entry role="parameter_description"><para>Pointer where the result should be stored.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-string.returns" role="returns">
<title>Returns</title>
<para> A positive value in case <parameter>path</parameter>
was successfully retrieved
0 if the path is empty, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-value" role="function">
<title>idmef_message_get_value&#160;()</title>
<indexterm zone="idmef-message-get-value"><primary>idmef_message_get_value</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_get_value (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                         <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                         <parameter><link linkend="idmef-value-t"><type>idmef_value_t</type></link> **value</parameter>);</programlisting>
<para>Retrieve the value stored within <parameter>path</parameter>
 of <parameter>message</parameter>
 and store it
in the user provided <parameter>value</parameter>
.</para>
<refsect3 id="idmef-message-get-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to retrieve the value from within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>Pointer where the result should be stored.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-value.returns" role="returns">
<title>Returns</title>
<para> A positive value in case <parameter>path</parameter>
was successfully retrieved
0 if the path is empty, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-data" role="function">
<title>idmef_message_set_data&#160;()</title>
<indexterm zone="idmef-message-set-data"><primary>idmef_message_set_data</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_set_data (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                        <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                        <parameter>const unsigned <link linkend="char"><type>char</type></link> *data</parameter>,
                        <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>This function will set the <parameter>path</parameter>
 member within <parameter>message</parameter>
 to the
provided <parameter>data</parameter>
 of size <parameter>size</parameter>
.</para>
<refsect3 id="idmef-message-set-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to be set within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>Pointer to data to associate <parameter>message</parameter>
[<parameter>path</parameter>
] with.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>Size of the data pointed to by <parameter>data</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-set-data.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-number" role="function">
<title>idmef_message_set_number&#160;()</title>
<indexterm zone="idmef-message-set-number"><primary>idmef_message_set_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_set_number (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                          <parameter><link linkend="double"><type>double</type></link> number</parameter>);</programlisting>
<para>This function will set the <parameter>path</parameter>
 member within <parameter>message</parameter>
 to the
provided <parameter>value</parameter>
, which will be converted to the <parameter>path</parameter>
 value type.</para>
<para>Example:
idmef_message_set_number(message, "alert.assessment.confidence.confidence", 0.123456);
idmef_message_set_number(message, "alert.source(0).service.port", 1024);</para>
<refsect3 id="idmef-message-set-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to be set within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>number</para></entry>
<entry role="parameter_description"><para>Value to associate <parameter>message</parameter>
[<parameter>path</parameter>
] with.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-set-number.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-string" role="function">
<title>idmef_message_set_string&#160;()</title>
<indexterm zone="idmef-message-set-string"><primary>idmef_message_set_string</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_set_string (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                          <parameter>const <link linkend="char"><type>char</type></link> *value</parameter>);</programlisting>
<para>This function will set the <parameter>path</parameter>
 member within <parameter>message</parameter>
 to the
provided <parameter>value</parameter>
, which will be converted to the corresponding
<parameter>path</parameter>
 value type.</para>
<para>Example:
idmef_message_set_string(message, "alert.classification.text", "MyText");
idmef_message_set_string(message, "alert.source(0).service.port", "1024");</para>
<refsect3 id="idmef-message-set-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to be set within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>Value to associate <parameter>message</parameter>
[<parameter>path</parameter>
] with.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-set-string.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-value" role="function">
<title>idmef_message_set_value&#160;()</title>
<indexterm zone="idmef-message-set-value"><primary>idmef_message_set_value</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_set_value (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                         <parameter>const <link linkend="char"><type>char</type></link> *path</parameter>,
                         <parameter><link linkend="idmef-value-t"><type>idmef_value_t</type></link> *value</parameter>);</programlisting>
<para>This function will set the <parameter>path</parameter>
 member within <parameter>message</parameter>
 to the
provided <parameter>value</parameter>
.</para>
<refsect3 id="idmef-message-set-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>Path to be set within <parameter>message</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>Value to associate <parameter>message</parameter>
[<parameter>path</parameter>
] with.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-set-value.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-type-to-numeric" role="function">
<title>idmef_additional_data_type_to_numeric&#160;()</title>
<indexterm zone="idmef-additional-data-type-to-numeric"><primary>idmef_additional_data_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-additional-data-type-t"><returnvalue>idmef_additional_data_type_t</returnvalue></link>
idmef_additional_data_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-additional-data-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-type-to-string" role="function">
<title>idmef_additional_data_type_to_string&#160;()</title>
<indexterm zone="idmef-additional-data-type-to-string"><primary>idmef_additional_data_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_additional_data_type_to_string (<parameter><link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> value.</para>
<refsect3 id="idmef-additional-data-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-new" role="function">
<title>idmef_additional_data_new&#160;()</title>
<indexterm zone="idmef-additional-data-new"><primary>idmef_additional_data_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_new (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-additional-data-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-copy" role="function">
<title>idmef_additional_data_copy&#160;()</title>
<indexterm zone="idmef-additional-data-copy"><primary>idmef_additional_data_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_copy (<parameter>const <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *src</parameter>,
                            <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-additional-data-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-clone" role="function">
<title>idmef_additional_data_clone&#160;()</title>
<indexterm zone="idmef-additional-data-clone"><primary>idmef_additional_data_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_clone (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *src</parameter>,
                             <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-additional-data-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-ref" role="function">
<title>idmef_additional_data_ref&#160;()</title>
<indexterm zone="idmef-additional-data-ref"><primary>idmef_additional_data_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
idmef_additional_data_ref (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *additional_data</parameter>);</programlisting>
<para>Increase <parameter>additional_data</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-additional-data-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>additional_data</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>additional_data</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-destroy" role="function">
<title>idmef_additional_data_destroy&#160;()</title>
<indexterm zone="idmef-additional-data-destroy"><primary>idmef_additional_data_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_additional_data_destroy (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-additional-data-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-get-type" role="function">
<title>idmef_additional_data_get_type&#160;()</title>
<indexterm zone="idmef-additional-data-get-type"><primary>idmef_additional_data_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-additional-data-type-t"><returnvalue>idmef_additional_data_type_t</returnvalue></link>
idmef_additional_data_get_type (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>);</programlisting>
<para>Get type children of the <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-additional-data-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_additional_data_type_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-set-type" role="function">
<title>idmef_additional_data_set_type&#160;()</title>
<indexterm zone="idmef-additional-data-set-type"><primary>idmef_additional_data_set_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_additional_data_set_type (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> type</parameter>);</programlisting>
<para>Set <parameter>type</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>type</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>type</parameter>
 object.</para>
<refsect3 id="idmef-additional-data-set-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-new-type" role="function">
<title>idmef_additional_data_new_type&#160;()</title>
<indexterm zone="idmef-additional-data-new-type"><primary>idmef_additional_data_new_type</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_new_type (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new type object, children of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-additional-data-new-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-additional-data-type-t"><type>idmef_additional_data_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-new-type.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-get-meaning" role="function">
<title>idmef_additional_data_get_meaning&#160;()</title>
<indexterm zone="idmef-additional-data-get-meaning"><primary>idmef_additional_data_get_meaning</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_additional_data_get_meaning (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>);</programlisting>
<para>Get meaning children of the <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-additional-data-get-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-get-meaning.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-set-meaning" role="function">
<title>idmef_additional_data_set_meaning&#160;()</title>
<indexterm zone="idmef-additional-data-set-meaning"><primary>idmef_additional_data_set_meaning</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_additional_data_set_meaning (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *meaning</parameter>);</programlisting>
<para>Set <parameter>meaning</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>meaning</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>meaning</parameter>
 object.</para>
<refsect3 id="idmef-additional-data-set-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>meaning</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-new-meaning" role="function">
<title>idmef_additional_data_new_meaning&#160;()</title>
<indexterm zone="idmef-additional-data-new-meaning"><primary>idmef_additional_data_new_meaning</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_new_meaning (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new meaning object, children of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-additional-data-new-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-new-meaning.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-get-data" role="function">
<title>idmef_additional_data_get_data&#160;()</title>
<indexterm zone="idmef-additional-data-get-data"><primary>idmef_additional_data_get_data</primary></indexterm>
<programlisting language="C"><link linkend="idmef-data-t"><returnvalue>idmef_data_t</returnvalue></link>&#160;*
idmef_additional_data_get_data (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>);</programlisting>
<para>Get data children of the <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-additional-data-get-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-get-data.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_data_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-set-data" role="function">
<title>idmef_additional_data_set_data&#160;()</title>
<indexterm zone="idmef-additional-data-set-data"><primary>idmef_additional_data_set_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_additional_data_set_data (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-data-t"><type>idmef_data_t</type></link> *data</parameter>);</programlisting>
<para>Set <parameter>data</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>data</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>data</parameter>
 object.</para>
<refsect3 id="idmef-additional-data-set-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-new-data" role="function">
<title>idmef_additional_data_new_data&#160;()</title>
<indexterm zone="idmef-additional-data-new-data"><primary>idmef_additional_data_new_data</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_new_data (<parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-data-t"><type>idmef_data_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new data object, children of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-additional-data-new-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-new-data.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-origin-to-numeric" role="function">
<title>idmef_reference_origin_to_numeric&#160;()</title>
<indexterm zone="idmef-reference-origin-to-numeric"><primary>idmef_reference_origin_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-reference-origin-t"><returnvalue>idmef_reference_origin_t</returnvalue></link>
idmef_reference_origin_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-reference-origin-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-origin-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-origin-to-string" role="function">
<title>idmef_reference_origin_to_string&#160;()</title>
<indexterm zone="idmef-reference-origin-to-string"><primary>idmef_reference_origin_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_reference_origin_to_string (<parameter><link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> value.</para>
<refsect3 id="idmef-reference-origin-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-origin-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-new" role="function">
<title>idmef_reference_new&#160;()</title>
<indexterm zone="idmef-reference-new"><primary>idmef_reference_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_new (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-reference-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-copy" role="function">
<title>idmef_reference_copy&#160;()</title>
<indexterm zone="idmef-reference-copy"><primary>idmef_reference_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_copy (<parameter>const <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *src</parameter>,
                      <parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-reference-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-clone" role="function">
<title>idmef_reference_clone&#160;()</title>
<indexterm zone="idmef-reference-clone"><primary>idmef_reference_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_clone (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-reference-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-ref" role="function">
<title>idmef_reference_ref&#160;()</title>
<indexterm zone="idmef-reference-ref"><primary>idmef_reference_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-reference-t"><returnvalue>idmef_reference_t</returnvalue></link>&#160;*
idmef_reference_ref (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *reference</parameter>);</programlisting>
<para>Increase <parameter>reference</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-reference-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>reference</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>reference</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-destroy" role="function">
<title>idmef_reference_destroy&#160;()</title>
<indexterm zone="idmef-reference-destroy"><primary>idmef_reference_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_reference_destroy (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-reference-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-get-origin" role="function">
<title>idmef_reference_get_origin&#160;()</title>
<indexterm zone="idmef-reference-get-origin"><primary>idmef_reference_get_origin</primary></indexterm>
<programlisting language="C"><link linkend="idmef-reference-origin-t"><returnvalue>idmef_reference_origin_t</returnvalue></link>
idmef_reference_get_origin (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>);</programlisting>
<para>Get origin children of the <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-reference-get-origin.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-get-origin.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_reference_origin_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-set-origin" role="function">
<title>idmef_reference_set_origin&#160;()</title>
<indexterm zone="idmef-reference-set-origin"><primary>idmef_reference_set_origin</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_reference_set_origin (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> origin</parameter>);</programlisting>
<para>Set <parameter>origin</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>origin</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>origin</parameter>
 object.</para>
<refsect3 id="idmef-reference-set-origin.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>origin</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-new-origin" role="function">
<title>idmef_reference_new_origin&#160;()</title>
<indexterm zone="idmef-reference-new-origin"><primary>idmef_reference_new_origin</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_new_origin (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new origin object, children of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-reference-new-origin.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-reference-origin-t"><type>idmef_reference_origin_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-new-origin.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-get-name" role="function">
<title>idmef_reference_get_name&#160;()</title>
<indexterm zone="idmef-reference-get-name"><primary>idmef_reference_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_reference_get_name (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-reference-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-set-name" role="function">
<title>idmef_reference_set_name&#160;()</title>
<indexterm zone="idmef-reference-set-name"><primary>idmef_reference_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_reference_set_name (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-reference-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-new-name" role="function">
<title>idmef_reference_new_name&#160;()</title>
<indexterm zone="idmef-reference-new-name"><primary>idmef_reference_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_new_name (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-reference-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-get-url" role="function">
<title>idmef_reference_get_url&#160;()</title>
<indexterm zone="idmef-reference-get-url"><primary>idmef_reference_get_url</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_reference_get_url (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>);</programlisting>
<para>Get url children of the <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-reference-get-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-get-url.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-set-url" role="function">
<title>idmef_reference_set_url&#160;()</title>
<indexterm zone="idmef-reference-set-url"><primary>idmef_reference_set_url</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_reference_set_url (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *url</parameter>);</programlisting>
<para>Set <parameter>url</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>url</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>url</parameter>
 object.</para>
<refsect3 id="idmef-reference-set-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>url</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-new-url" role="function">
<title>idmef_reference_new_url&#160;()</title>
<indexterm zone="idmef-reference-new-url"><primary>idmef_reference_new_url</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_new_url (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new url object, children of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-reference-new-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-new-url.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-get-meaning" role="function">
<title>idmef_reference_get_meaning&#160;()</title>
<indexterm zone="idmef-reference-get-meaning"><primary>idmef_reference_get_meaning</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_reference_get_meaning (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>);</programlisting>
<para>Get meaning children of the <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-reference-get-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-get-meaning.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-set-meaning" role="function">
<title>idmef_reference_set_meaning&#160;()</title>
<indexterm zone="idmef-reference-set-meaning"><primary>idmef_reference_set_meaning</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_reference_set_meaning (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *meaning</parameter>);</programlisting>
<para>Set <parameter>meaning</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>meaning</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>meaning</parameter>
 object.</para>
<refsect3 id="idmef-reference-set-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>meaning</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-new-meaning" role="function">
<title>idmef_reference_new_meaning&#160;()</title>
<indexterm zone="idmef-reference-new-meaning"><primary>idmef_reference_new_meaning</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_new_meaning (<parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new meaning object, children of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-reference-new-meaning.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-new-meaning.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-new" role="function">
<title>idmef_classification_new&#160;()</title>
<indexterm zone="idmef-classification-new"><primary>idmef_classification_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_new (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para>
<refsect3 id="idmef-classification-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-copy" role="function">
<title>idmef_classification_copy&#160;()</title>
<indexterm zone="idmef-classification-copy"><primary>idmef_classification_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_copy (<parameter>const <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *src</parameter>,
                           <parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-classification-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-clone" role="function">
<title>idmef_classification_clone&#160;()</title>
<indexterm zone="idmef-classification-clone"><primary>idmef_classification_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_clone (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *src</parameter>,
                            <parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-classification-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-ref" role="function">
<title>idmef_classification_ref&#160;()</title>
<indexterm zone="idmef-classification-ref"><primary>idmef_classification_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-classification-t"><returnvalue>idmef_classification_t</returnvalue></link>&#160;*
idmef_classification_ref (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *classification</parameter>);</programlisting>
<para>Increase <parameter>classification</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-classification-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>classification</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>classification</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-destroy" role="function">
<title>idmef_classification_destroy&#160;()</title>
<indexterm zone="idmef-classification-destroy"><primary>idmef_classification_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_classification_destroy (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-classification-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-classification-get-ident" role="function">
<title>idmef_classification_get_ident&#160;()</title>
<indexterm zone="idmef-classification-get-ident"><primary>idmef_classification_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_classification_get_ident (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para>
<refsect3 id="idmef-classification-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-set-ident" role="function">
<title>idmef_classification_set_ident&#160;()</title>
<indexterm zone="idmef-classification-set-ident"><primary>idmef_classification_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_classification_set_ident (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-classification-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-classification-new-ident" role="function">
<title>idmef_classification_new_ident&#160;()</title>
<indexterm zone="idmef-classification-new-ident"><primary>idmef_classification_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_new_ident (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-classification-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-get-text" role="function">
<title>idmef_classification_get_text&#160;()</title>
<indexterm zone="idmef-classification-get-text"><primary>idmef_classification_get_text</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_classification_get_text (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>);</programlisting>
<para>Get text children of the <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para>
<refsect3 id="idmef-classification-get-text.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-get-text.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-set-text" role="function">
<title>idmef_classification_set_text&#160;()</title>
<indexterm zone="idmef-classification-set-text"><primary>idmef_classification_set_text</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_classification_set_text (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *text</parameter>);</programlisting>
<para>Set <parameter>text</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>text</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>text</parameter>
 object.</para>
<refsect3 id="idmef-classification-set-text.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>text</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-classification-new-text" role="function">
<title>idmef_classification_new_text&#160;()</title>
<indexterm zone="idmef-classification-new-text"><primary>idmef_classification_new_text</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_new_text (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new text object, children of <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-classification-new-text.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-new-text.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-get-next-reference" role="function">
<title>idmef_classification_get_next_reference&#160;()</title>
<indexterm zone="idmef-classification-get-next-reference"><primary>idmef_classification_get_next_reference</primary></indexterm>
<programlisting language="C"><link linkend="idmef-reference-t"><returnvalue>idmef_reference_t</returnvalue></link>&#160;*
idmef_classification_get_next_reference
                               (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *classification</parameter>,
                                <parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *reference_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_reference_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<refsect3 id="idmef-classification-get-next-reference.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>classification</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>reference_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-get-next-reference.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-set-reference" role="function">
<title>idmef_classification_set_reference&#160;()</title>
<indexterm zone="idmef-classification-set-reference"><primary>idmef_classification_set_reference</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_classification_set_reference (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                                    <parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *object</parameter>,
                                    <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-classification-set-reference.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-classification-new-reference" role="function">
<title>idmef_classification_new_reference&#160;()</title>
<indexterm zone="idmef-classification-new-reference"><primary>idmef_classification_new_reference</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_new_reference (<parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *ptr</parameter>,
                                    <parameter><link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> **ret</parameter>,
                                    <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object. The created <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-classification-new-reference.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-new-reference.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-type-to-numeric" role="function">
<title>idmef_user_id_type_to_numeric&#160;()</title>
<indexterm zone="idmef-user-id-type-to-numeric"><primary>idmef_user_id_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-id-type-t"><returnvalue>idmef_user_id_type_t</returnvalue></link>
idmef_user_id_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-user-id-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-type-to-string" role="function">
<title>idmef_user_id_type_to_string&#160;()</title>
<indexterm zone="idmef-user-id-type-to-string"><primary>idmef_user_id_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_user_id_type_to_string (<parameter><link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> value.</para>
<refsect3 id="idmef-user-id-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new" role="function">
<title>idmef_user_id_new&#160;()</title>
<indexterm zone="idmef-user-id-new"><primary>idmef_user_id_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-copy" role="function">
<title>idmef_user_id_copy&#160;()</title>
<indexterm zone="idmef-user-id-copy"><primary>idmef_user_id_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_copy (<parameter>const <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-user-id-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-clone" role="function">
<title>idmef_user_id_clone&#160;()</title>
<indexterm zone="idmef-user-id-clone"><primary>idmef_user_id_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_clone (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-user-id-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-ref" role="function">
<title>idmef_user_id_ref&#160;()</title>
<indexterm zone="idmef-user-id-ref"><primary>idmef_user_id_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
idmef_user_id_ref (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *user_id</parameter>);</programlisting>
<para>Increase <parameter>user_id</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-user-id-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user_id</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>user_id</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-destroy" role="function">
<title>idmef_user_id_destroy&#160;()</title>
<indexterm zone="idmef-user-id-destroy"><primary>idmef_user_id_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_destroy (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-user-id-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-get-ident" role="function">
<title>idmef_user_id_get_ident&#160;()</title>
<indexterm zone="idmef-user-id-get-ident"><primary>idmef_user_id_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_user_id_get_ident (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-set-ident" role="function">
<title>idmef_user_id_set_ident&#160;()</title>
<indexterm zone="idmef-user-id-set-ident"><primary>idmef_user_id_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_set_ident (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-user-id-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new-ident" role="function">
<title>idmef_user_id_new_ident&#160;()</title>
<indexterm zone="idmef-user-id-new-ident"><primary>idmef_user_id_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new_ident (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-id-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-get-type" role="function">
<title>idmef_user_id_get_type&#160;()</title>
<indexterm zone="idmef-user-id-get-type"><primary>idmef_user_id_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-id-type-t"><returnvalue>idmef_user_id_type_t</returnvalue></link>
idmef_user_id_get_type (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Get type children of the <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_user_id_type_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-set-type" role="function">
<title>idmef_user_id_set_type&#160;()</title>
<indexterm zone="idmef-user-id-set-type"><primary>idmef_user_id_set_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_set_type (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> type</parameter>);</programlisting>
<para>Set <parameter>type</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>type</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>type</parameter>
 object.</para>
<refsect3 id="idmef-user-id-set-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new-type" role="function">
<title>idmef_user_id_new_type&#160;()</title>
<indexterm zone="idmef-user-id-new-type"><primary>idmef_user_id_new_type</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new_type (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new type object, children of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-id-new-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-id-type-t"><type>idmef_user_id_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new-type.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-get-tty" role="function">
<title>idmef_user_id_get_tty&#160;()</title>
<indexterm zone="idmef-user-id-get-tty"><primary>idmef_user_id_get_tty</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_user_id_get_tty (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Get tty children of the <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-get-tty.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-get-tty.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-set-tty" role="function">
<title>idmef_user_id_set_tty&#160;()</title>
<indexterm zone="idmef-user-id-set-tty"><primary>idmef_user_id_set_tty</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_set_tty (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *tty</parameter>);</programlisting>
<para>Set <parameter>tty</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>tty</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>tty</parameter>
 object.</para>
<refsect3 id="idmef-user-id-set-tty.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tty</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new-tty" role="function">
<title>idmef_user_id_new_tty&#160;()</title>
<indexterm zone="idmef-user-id-new-tty"><primary>idmef_user_id_new_tty</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new_tty (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new tty object, children of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-id-new-tty.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new-tty.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-get-name" role="function">
<title>idmef_user_id_get_name&#160;()</title>
<indexterm zone="idmef-user-id-get-name"><primary>idmef_user_id_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_user_id_get_name (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-set-name" role="function">
<title>idmef_user_id_set_name&#160;()</title>
<indexterm zone="idmef-user-id-set-name"><primary>idmef_user_id_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_set_name (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-user-id-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new-name" role="function">
<title>idmef_user_id_new_name&#160;()</title>
<indexterm zone="idmef-user-id-new-name"><primary>idmef_user_id_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new_name (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-id-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-unset-number" role="function">
<title>idmef_user_id_unset_number&#160;()</title>
<indexterm zone="idmef-user-id-unset-number"><primary>idmef_user_id_unset_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_unset_number (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-user-id-get-number" role="function">
<title>idmef_user_id_get_number&#160;()</title>
<indexterm zone="idmef-user-id-get-number"><primary>idmef_user_id_get_number</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_user_id_get_number (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>);</programlisting>
<para>Get number children of the <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-id-get-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-get-number.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-set-number" role="function">
<title>idmef_user_id_set_number&#160;()</title>
<indexterm zone="idmef-user-id-set-number"><primary>idmef_user_id_set_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_id_set_number (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint32-t"><type>uint32_t</type></link> number</parameter>);</programlisting>
<para>Set <parameter>number</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>number</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>number</parameter>
 object.</para>
<refsect3 id="idmef-user-id-set-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>number</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-new-number" role="function">
<title>idmef_user_id_new_number&#160;()</title>
<indexterm zone="idmef-user-id-new-number"><primary>idmef_user_id_new_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_new_number (<parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new number object, children of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-id-new-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-new-number.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-category-to-numeric" role="function">
<title>idmef_user_category_to_numeric&#160;()</title>
<indexterm zone="idmef-user-category-to-numeric"><primary>idmef_user_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-category-t"><returnvalue>idmef_user_category_t</returnvalue></link>
idmef_user_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-user-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-category-to-string" role="function">
<title>idmef_user_category_to_string&#160;()</title>
<indexterm zone="idmef-user-category-to-string"><primary>idmef_user_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_user_category_to_string (<parameter><link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> value.</para>
<refsect3 id="idmef-user-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-new" role="function">
<title>idmef_user_new&#160;()</title>
<indexterm zone="idmef-user-new"><primary>idmef_user_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_new (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para>
<refsect3 id="idmef-user-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-copy" role="function">
<title>idmef_user_copy&#160;()</title>
<indexterm zone="idmef-user-copy"><primary>idmef_user_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_copy (<parameter>const <link linkend="idmef-user-t"><type>idmef_user_t</type></link> *src</parameter>,
                 <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-user-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-clone" role="function">
<title>idmef_user_clone&#160;()</title>
<indexterm zone="idmef-user-clone"><primary>idmef_user_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_clone (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *src</parameter>,
                  <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-user-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-ref" role="function">
<title>idmef_user_ref&#160;()</title>
<indexterm zone="idmef-user-ref"><primary>idmef_user_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
idmef_user_ref (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *user</parameter>);</programlisting>
<para>Increase <parameter>user</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-user-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>user</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-destroy" role="function">
<title>idmef_user_destroy&#160;()</title>
<indexterm zone="idmef-user-destroy"><primary>idmef_user_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_destroy (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-user-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-get-ident" role="function">
<title>idmef_user_get_ident&#160;()</title>
<indexterm zone="idmef-user-get-ident"><primary>idmef_user_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_user_get_ident (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para>
<refsect3 id="idmef-user-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-set-ident" role="function">
<title>idmef_user_set_ident&#160;()</title>
<indexterm zone="idmef-user-set-ident"><primary>idmef_user_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_set_ident (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-user-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-new-ident" role="function">
<title>idmef_user_new_ident&#160;()</title>
<indexterm zone="idmef-user-new-ident"><primary>idmef_user_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_new_ident (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-user-t"><type>idmef_user_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-get-category" role="function">
<title>idmef_user_get_category&#160;()</title>
<indexterm zone="idmef-user-get-category"><primary>idmef_user_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-category-t"><returnvalue>idmef_user_category_t</returnvalue></link>
idmef_user_get_category (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para>
<refsect3 id="idmef-user-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_user_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-set-category" role="function">
<title>idmef_user_set_category&#160;()</title>
<indexterm zone="idmef-user-set-category"><primary>idmef_user_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_set_category (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-user-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-new-category" role="function">
<title>idmef_user_new_category&#160;()</title>
<indexterm zone="idmef-user-new-category"><primary>idmef_user_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_new_category (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-user-t"><type>idmef_user_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-user-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-category-t"><type>idmef_user_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-get-next-user-id" role="function">
<title>idmef_user_get_next_user_id&#160;()</title>
<indexterm zone="idmef-user-get-next-user-id"><primary>idmef_user_get_next_user_id</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
idmef_user_get_next_user_id (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *user</parameter>,
                             <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *user_id_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_user_id_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<refsect3 id="idmef-user-get-next-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>user</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_id_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-get-next-user-id.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-set-user-id" role="function">
<title>idmef_user_set_user_id&#160;()</title>
<indexterm zone="idmef-user-set-user-id"><primary>idmef_user_set_user_id</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_user_set_user_id (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *object</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-user-set-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-new-user-id" role="function">
<title>idmef_user_new_user_id&#160;()</title>
<indexterm zone="idmef-user-new-user-id"><primary>idmef_user_new_user_id</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_new_user_id (<parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> **ret</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object. The created <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-user-new-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-new-user-id.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-category-to-numeric" role="function">
<title>idmef_address_category_to_numeric&#160;()</title>
<indexterm zone="idmef-address-category-to-numeric"><primary>idmef_address_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-address-category-t"><returnvalue>idmef_address_category_t</returnvalue></link>
idmef_address_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-address-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-category-to-string" role="function">
<title>idmef_address_category_to_string&#160;()</title>
<indexterm zone="idmef-address-category-to-string"><primary>idmef_address_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_address_category_to_string (<parameter><link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> value.</para>
<refsect3 id="idmef-address-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-new" role="function">
<title>idmef_address_new&#160;()</title>
<indexterm zone="idmef-address-new"><primary>idmef_address_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-copy" role="function">
<title>idmef_address_copy&#160;()</title>
<indexterm zone="idmef-address-copy"><primary>idmef_address_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_copy (<parameter>const <link linkend="idmef-address-t"><type>idmef_address_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-address-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-clone" role="function">
<title>idmef_address_clone&#160;()</title>
<indexterm zone="idmef-address-clone"><primary>idmef_address_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_clone (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-address-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-ref" role="function">
<title>idmef_address_ref&#160;()</title>
<indexterm zone="idmef-address-ref"><primary>idmef_address_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-address-t"><returnvalue>idmef_address_t</returnvalue></link>&#160;*
idmef_address_ref (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *address</parameter>);</programlisting>
<para>Increase <parameter>address</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-address-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>address</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>address</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-destroy" role="function">
<title>idmef_address_destroy&#160;()</title>
<indexterm zone="idmef-address-destroy"><primary>idmef_address_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_destroy (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-address-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-get-ident" role="function">
<title>idmef_address_get_ident&#160;()</title>
<indexterm zone="idmef-address-get-ident"><primary>idmef_address_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_address_get_ident (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-ident" role="function">
<title>idmef_address_set_ident&#160;()</title>
<indexterm zone="idmef-address-set-ident"><primary>idmef_address_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_ident (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-address-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-ident" role="function">
<title>idmef_address_new_ident&#160;()</title>
<indexterm zone="idmef-address-new-ident"><primary>idmef_address_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_ident (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-get-category" role="function">
<title>idmef_address_get_category&#160;()</title>
<indexterm zone="idmef-address-get-category"><primary>idmef_address_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-address-category-t"><returnvalue>idmef_address_category_t</returnvalue></link>
idmef_address_get_category (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_address_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-category" role="function">
<title>idmef_address_set_category&#160;()</title>
<indexterm zone="idmef-address-set-category"><primary>idmef_address_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_category (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-address-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-category" role="function">
<title>idmef_address_new_category&#160;()</title>
<indexterm zone="idmef-address-new-category"><primary>idmef_address_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_category (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-address-category-t"><type>idmef_address_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-get-vlan-name" role="function">
<title>idmef_address_get_vlan_name&#160;()</title>
<indexterm zone="idmef-address-get-vlan-name"><primary>idmef_address_get_vlan_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_address_get_vlan_name (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get vlan_name children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-vlan-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-vlan-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-vlan-name" role="function">
<title>idmef_address_set_vlan_name&#160;()</title>
<indexterm zone="idmef-address-set-vlan-name"><primary>idmef_address_set_vlan_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_vlan_name (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *vlan_name</parameter>);</programlisting>
<para>Set <parameter>vlan_name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>vlan_name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>vlan_name</parameter>
 object.</para>
<refsect3 id="idmef-address-set-vlan-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>vlan_name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-vlan-name" role="function">
<title>idmef_address_new_vlan_name&#160;()</title>
<indexterm zone="idmef-address-new-vlan-name"><primary>idmef_address_new_vlan_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_vlan_name (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new vlan_name object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-vlan-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-vlan-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-unset-vlan-num" role="function">
<title>idmef_address_unset_vlan_num&#160;()</title>
<indexterm zone="idmef-address-unset-vlan-num"><primary>idmef_address_unset_vlan_num</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_unset_vlan_num (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-address-get-vlan-num" role="function">
<title>idmef_address_get_vlan_num&#160;()</title>
<indexterm zone="idmef-address-get-vlan-num"><primary>idmef_address_get_vlan_num</primary></indexterm>
<programlisting language="C"><link linkend="int32-t"><returnvalue>int32_t</returnvalue></link>&#160;*
idmef_address_get_vlan_num (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get vlan_num children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-vlan-num.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-vlan-num.returns" role="returns">
<title>Returns</title>
<para> a pointer to a int32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-vlan-num" role="function">
<title>idmef_address_set_vlan_num&#160;()</title>
<indexterm zone="idmef-address-set-vlan-num"><primary>idmef_address_set_vlan_num</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_vlan_num (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="int32-t"><type>int32_t</type></link> vlan_num</parameter>);</programlisting>
<para>Set <parameter>vlan_num</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>vlan_num</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>vlan_num</parameter>
 object.</para>
<refsect3 id="idmef-address-set-vlan-num.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>vlan_num</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="int32-t"><type>int32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-vlan-num" role="function">
<title>idmef_address_new_vlan_num&#160;()</title>
<indexterm zone="idmef-address-new-vlan-num"><primary>idmef_address_new_vlan_num</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_vlan_num (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="int32-t"><type>int32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new vlan_num object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="int32-t"><type>int32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-vlan-num.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="int32-t"><type>int32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-vlan-num.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-get-address" role="function">
<title>idmef_address_get_address&#160;()</title>
<indexterm zone="idmef-address-get-address"><primary>idmef_address_get_address</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_address_get_address (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get address children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-address.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-address" role="function">
<title>idmef_address_set_address&#160;()</title>
<indexterm zone="idmef-address-set-address"><primary>idmef_address_set_address</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_address (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *address</parameter>);</programlisting>
<para>Set <parameter>address</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>address</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>address</parameter>
 object.</para>
<refsect3 id="idmef-address-set-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>address</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-address" role="function">
<title>idmef_address_new_address&#160;()</title>
<indexterm zone="idmef-address-new-address"><primary>idmef_address_new_address</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_address (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new address object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-address.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-get-netmask" role="function">
<title>idmef_address_get_netmask&#160;()</title>
<indexterm zone="idmef-address-get-netmask"><primary>idmef_address_get_netmask</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_address_get_netmask (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>);</programlisting>
<para>Get netmask children of the <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-address-get-netmask.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-get-netmask.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-set-netmask" role="function">
<title>idmef_address_set_netmask&#160;()</title>
<indexterm zone="idmef-address-set-netmask"><primary>idmef_address_set_netmask</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_address_set_netmask (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *netmask</parameter>);</programlisting>
<para>Set <parameter>netmask</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>netmask</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>netmask</parameter>
 object.</para>
<refsect3 id="idmef-address-set-netmask.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>netmask</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-new-netmask" role="function">
<title>idmef_address_new_netmask&#160;()</title>
<indexterm zone="idmef-address-new-netmask"><primary>idmef_address_new_netmask</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_new_netmask (<parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new netmask object, children of <link linkend="idmef-address-t"><type>idmef_address_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-address-new-netmask.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-new-netmask.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-new" role="function">
<title>idmef_process_new&#160;()</title>
<indexterm zone="idmef-process-new"><primary>idmef_process_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para>
<refsect3 id="idmef-process-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-copy" role="function">
<title>idmef_process_copy&#160;()</title>
<indexterm zone="idmef-process-copy"><primary>idmef_process_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_copy (<parameter>const <link linkend="idmef-process-t"><type>idmef_process_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-process-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-clone" role="function">
<title>idmef_process_clone&#160;()</title>
<indexterm zone="idmef-process-clone"><primary>idmef_process_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_clone (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-process-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-ref" role="function">
<title>idmef_process_ref&#160;()</title>
<indexterm zone="idmef-process-ref"><primary>idmef_process_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
idmef_process_ref (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>);</programlisting>
<para>Increase <parameter>process</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-process-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>process</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-destroy" role="function">
<title>idmef_process_destroy&#160;()</title>
<indexterm zone="idmef-process-destroy"><primary>idmef_process_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_destroy (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-process-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-get-ident" role="function">
<title>idmef_process_get_ident&#160;()</title>
<indexterm zone="idmef-process-get-ident"><primary>idmef_process_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_process_get_ident (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para>
<refsect3 id="idmef-process-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-ident" role="function">
<title>idmef_process_set_ident&#160;()</title>
<indexterm zone="idmef-process-set-ident"><primary>idmef_process_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_ident (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-process-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-ident" role="function">
<title>idmef_process_new_ident&#160;()</title>
<indexterm zone="idmef-process-new-ident"><primary>idmef_process_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_ident (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-process-t"><type>idmef_process_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-process-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-get-name" role="function">
<title>idmef_process_get_name&#160;()</title>
<indexterm zone="idmef-process-get-name"><primary>idmef_process_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_process_get_name (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para>
<refsect3 id="idmef-process-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-name" role="function">
<title>idmef_process_set_name&#160;()</title>
<indexterm zone="idmef-process-set-name"><primary>idmef_process_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_name (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-process-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-name" role="function">
<title>idmef_process_new_name&#160;()</title>
<indexterm zone="idmef-process-new-name"><primary>idmef_process_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_name (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-process-t"><type>idmef_process_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-process-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-unset-pid" role="function">
<title>idmef_process_unset_pid&#160;()</title>
<indexterm zone="idmef-process-unset-pid"><primary>idmef_process_unset_pid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_unset_pid (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-process-get-pid" role="function">
<title>idmef_process_get_pid&#160;()</title>
<indexterm zone="idmef-process-get-pid"><primary>idmef_process_get_pid</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_process_get_pid (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
<para>Get pid children of the <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para>
<refsect3 id="idmef-process-get-pid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-pid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-pid" role="function">
<title>idmef_process_set_pid&#160;()</title>
<indexterm zone="idmef-process-set-pid"><primary>idmef_process_set_pid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_pid (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> pid</parameter>);</programlisting>
<para>Set <parameter>pid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>pid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>pid</parameter>
 object.</para>
<refsect3 id="idmef-process-set-pid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-pid" role="function">
<title>idmef_process_new_pid&#160;()</title>
<indexterm zone="idmef-process-new-pid"><primary>idmef_process_new_pid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_pid (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new pid object, children of <link linkend="idmef-process-t"><type>idmef_process_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-process-new-pid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-pid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-get-path" role="function">
<title>idmef_process_get_path&#160;()</title>
<indexterm zone="idmef-process-get-path"><primary>idmef_process_get_path</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_process_get_path (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>);</programlisting>
<para>Get path children of the <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para>
<refsect3 id="idmef-process-get-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-path.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-path" role="function">
<title>idmef_process_set_path&#160;()</title>
<indexterm zone="idmef-process-set-path"><primary>idmef_process_set_path</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_path (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *path</parameter>);</programlisting>
<para>Set <parameter>path</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>path</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>path</parameter>
 object.</para>
<refsect3 id="idmef-process-set-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-path" role="function">
<title>idmef_process_new_path&#160;()</title>
<indexterm zone="idmef-process-new-path"><primary>idmef_process_new_path</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_path (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new path object, children of <link linkend="idmef-process-t"><type>idmef_process_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-process-new-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-path.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-get-next-arg" role="function">
<title>idmef_process_get_next_arg&#160;()</title>
<indexterm zone="idmef-process-get-next-arg"><primary>idmef_process_get_next_arg</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_process_get_next_arg (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *prelude_string_cur</parameter>);</programlisting>
<para>Get the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the prelude_string_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<refsect3 id="idmef-process-get-next-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prelude_string_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-next-arg.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-arg" role="function">
<title>idmef_process_set_arg&#160;()</title>
<indexterm zone="idmef-process-set-arg"><primary>idmef_process_set_arg</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_arg (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *object</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-process-set-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-arg" role="function">
<title>idmef_process_new_arg&#160;()</title>
<indexterm zone="idmef-process-new-arg"><primary>idmef_process_new_arg</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_arg (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="prelude-string-t"><type>prelude_string_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object. The created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-process-new-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-arg.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-get-next-env" role="function">
<title>idmef_process_get_next_env&#160;()</title>
<indexterm zone="idmef-process-get-next-env"><primary>idmef_process_get_next_env</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_process_get_next_env (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *prelude_string_cur</parameter>);</programlisting>
<para>Get the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the prelude_string_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<refsect3 id="idmef-process-get-next-env.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prelude_string_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-get-next-env.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-set-env" role="function">
<title>idmef_process_set_env&#160;()</title>
<indexterm zone="idmef-process-set-env"><primary>idmef_process_set_env</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_process_set_env (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *object</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-process-set-env.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-process-new-env" role="function">
<title>idmef_process_new_env&#160;()</title>
<indexterm zone="idmef-process-new-env"><primary>idmef_process_new_env</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_new_env (<parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="prelude-string-t"><type>prelude_string_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object. The created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-process-new-env.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-new-env.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-new" role="function">
<title>idmef_web_service_new&#160;()</title>
<indexterm zone="idmef-web-service-new"><primary>idmef_web_service_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_new (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para>
<refsect3 id="idmef-web-service-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-copy" role="function">
<title>idmef_web_service_copy&#160;()</title>
<indexterm zone="idmef-web-service-copy"><primary>idmef_web_service_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_copy (<parameter>const <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-web-service-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-clone" role="function">
<title>idmef_web_service_clone&#160;()</title>
<indexterm zone="idmef-web-service-clone"><primary>idmef_web_service_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_clone (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *src</parameter>,
                         <parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-web-service-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-ref" role="function">
<title>idmef_web_service_ref&#160;()</title>
<indexterm zone="idmef-web-service-ref"><primary>idmef_web_service_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-web-service-t"><returnvalue>idmef_web_service_t</returnvalue></link>&#160;*
idmef_web_service_ref (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *web_service</parameter>);</programlisting>
<para>Increase <parameter>web_service</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-web-service-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>web_service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>web_service</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-destroy" role="function">
<title>idmef_web_service_destroy&#160;()</title>
<indexterm zone="idmef-web-service-destroy"><primary>idmef_web_service_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_web_service_destroy (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-web-service-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-get-url" role="function">
<title>idmef_web_service_get_url&#160;()</title>
<indexterm zone="idmef-web-service-get-url"><primary>idmef_web_service_get_url</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_web_service_get_url (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get url children of the <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para>
<refsect3 id="idmef-web-service-get-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-get-url.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-set-url" role="function">
<title>idmef_web_service_set_url&#160;()</title>
<indexterm zone="idmef-web-service-set-url"><primary>idmef_web_service_set_url</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_web_service_set_url (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *url</parameter>);</programlisting>
<para>Set <parameter>url</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>url</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>url</parameter>
 object.</para>
<refsect3 id="idmef-web-service-set-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>url</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-new-url" role="function">
<title>idmef_web_service_new_url&#160;()</title>
<indexterm zone="idmef-web-service-new-url"><primary>idmef_web_service_new_url</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_new_url (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new url object, children of <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-web-service-new-url.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-new-url.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-get-cgi" role="function">
<title>idmef_web_service_get_cgi&#160;()</title>
<indexterm zone="idmef-web-service-get-cgi"><primary>idmef_web_service_get_cgi</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_web_service_get_cgi (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get cgi children of the <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para>
<refsect3 id="idmef-web-service-get-cgi.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-get-cgi.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-set-cgi" role="function">
<title>idmef_web_service_set_cgi&#160;()</title>
<indexterm zone="idmef-web-service-set-cgi"><primary>idmef_web_service_set_cgi</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_web_service_set_cgi (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *cgi</parameter>);</programlisting>
<para>Set <parameter>cgi</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>cgi</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>cgi</parameter>
 object.</para>
<refsect3 id="idmef-web-service-set-cgi.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cgi</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-new-cgi" role="function">
<title>idmef_web_service_new_cgi&#160;()</title>
<indexterm zone="idmef-web-service-new-cgi"><primary>idmef_web_service_new_cgi</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_new_cgi (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new cgi object, children of <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-web-service-new-cgi.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-new-cgi.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-get-http-method" role="function">
<title>idmef_web_service_get_http_method&#160;()</title>
<indexterm zone="idmef-web-service-get-http-method"><primary>idmef_web_service_get_http_method</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_web_service_get_http_method (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get http_method children of the <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para>
<refsect3 id="idmef-web-service-get-http-method.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-get-http-method.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-set-http-method" role="function">
<title>idmef_web_service_set_http_method&#160;()</title>
<indexterm zone="idmef-web-service-set-http-method"><primary>idmef_web_service_set_http_method</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_web_service_set_http_method (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *http_method</parameter>);</programlisting>
<para>Set <parameter>http_method</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>http_method</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>http_method</parameter>
 object.</para>
<refsect3 id="idmef-web-service-set-http-method.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>http_method</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-new-http-method" role="function">
<title>idmef_web_service_new_http_method&#160;()</title>
<indexterm zone="idmef-web-service-new-http-method"><primary>idmef_web_service_new_http_method</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_new_http_method (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new http_method object, children of <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-web-service-new-http-method.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-new-http-method.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-get-next-arg" role="function">
<title>idmef_web_service_get_next_arg&#160;()</title>
<indexterm zone="idmef-web-service-get-next-arg"><primary>idmef_web_service_get_next_arg</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_web_service_get_next_arg (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *web_service</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *prelude_string_cur</parameter>);</programlisting>
<para>Get the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the prelude_string_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<refsect3 id="idmef-web-service-get-next-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>web_service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prelude_string_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-get-next-arg.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-set-arg" role="function">
<title>idmef_web_service_set_arg&#160;()</title>
<indexterm zone="idmef-web-service-set-arg"><primary>idmef_web_service_set_arg</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_web_service_set_arg (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *object</parameter>,
                           <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-web-service-set-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-new-arg" role="function">
<title>idmef_web_service_new_arg&#160;()</title>
<indexterm zone="idmef-web-service-new-arg"><primary>idmef_web_service_new_arg</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_new_arg (<parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>,
                           <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="prelude-string-t"><type>prelude_string_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object. The created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-web-service-new-arg.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-new-arg.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new" role="function">
<title>idmef_snmp_service_new&#160;()</title>
<indexterm zone="idmef-snmp-service-new"><primary>idmef_snmp_service_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-copy" role="function">
<title>idmef_snmp_service_copy&#160;()</title>
<indexterm zone="idmef-snmp-service-copy"><primary>idmef_snmp_service_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_copy (<parameter>const <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *src</parameter>,
                         <parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-snmp-service-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-clone" role="function">
<title>idmef_snmp_service_clone&#160;()</title>
<indexterm zone="idmef-snmp-service-clone"><primary>idmef_snmp_service_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_clone (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *src</parameter>,
                          <parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-snmp-service-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-ref" role="function">
<title>idmef_snmp_service_ref&#160;()</title>
<indexterm zone="idmef-snmp-service-ref"><primary>idmef_snmp_service_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-snmp-service-t"><returnvalue>idmef_snmp_service_t</returnvalue></link>&#160;*
idmef_snmp_service_ref (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *snmp_service</parameter>);</programlisting>
<para>Increase <parameter>snmp_service</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-snmp-service-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>snmp_service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>snmp_service</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-destroy" role="function">
<title>idmef_snmp_service_destroy&#160;()</title>
<indexterm zone="idmef-snmp-service-destroy"><primary>idmef_snmp_service_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_destroy (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-snmp-service-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-get-oid" role="function">
<title>idmef_snmp_service_get_oid&#160;()</title>
<indexterm zone="idmef-snmp-service-get-oid"><primary>idmef_snmp_service_get_oid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_snmp_service_get_oid (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get oid children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-oid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-oid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-oid" role="function">
<title>idmef_snmp_service_set_oid&#160;()</title>
<indexterm zone="idmef-snmp-service-set-oid"><primary>idmef_snmp_service_set_oid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_oid (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *oid</parameter>);</programlisting>
<para>Set <parameter>oid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>oid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>oid</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-oid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>oid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-oid" role="function">
<title>idmef_snmp_service_new_oid&#160;()</title>
<indexterm zone="idmef-snmp-service-new-oid"><primary>idmef_snmp_service_new_oid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_oid (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new oid object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-oid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-oid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-unset-message-processing-model" role="function">
<title>idmef_snmp_service_unset_message_processing_model&#160;()</title>
<indexterm zone="idmef-snmp-service-unset-message-processing-model"><primary>idmef_snmp_service_unset_message_processing_model</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_unset_message_processing_model
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-snmp-service-get-message-processing-model" role="function">
<title>idmef_snmp_service_get_message_processing_model&#160;()</title>
<indexterm zone="idmef-snmp-service-get-message-processing-model"><primary>idmef_snmp_service_get_message_processing_model</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_snmp_service_get_message_processing_model
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get message_processing_model children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-message-processing-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-message-processing-model.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-message-processing-model" role="function">
<title>idmef_snmp_service_set_message_processing_model&#160;()</title>
<indexterm zone="idmef-snmp-service-set-message-processing-model"><primary>idmef_snmp_service_set_message_processing_model</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_message_processing_model
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> message_processing_model</parameter>);</programlisting>
<para>Set <parameter>message_processing_model</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>message_processing_model</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>message_processing_model</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-message-processing-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>message_processing_model</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-message-processing-model" role="function">
<title>idmef_snmp_service_new_message_processing_model&#160;()</title>
<indexterm zone="idmef-snmp-service-new-message-processing-model"><primary>idmef_snmp_service_new_message_processing_model</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_message_processing_model
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new message_processing_model object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-message-processing-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-message-processing-model.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-unset-security-model" role="function">
<title>idmef_snmp_service_unset_security_model&#160;()</title>
<indexterm zone="idmef-snmp-service-unset-security-model"><primary>idmef_snmp_service_unset_security_model</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_unset_security_model
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-snmp-service-get-security-model" role="function">
<title>idmef_snmp_service_get_security_model&#160;()</title>
<indexterm zone="idmef-snmp-service-get-security-model"><primary>idmef_snmp_service_get_security_model</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_snmp_service_get_security_model (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get security_model children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-security-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-security-model.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-security-model" role="function">
<title>idmef_snmp_service_set_security_model&#160;()</title>
<indexterm zone="idmef-snmp-service-set-security-model"><primary>idmef_snmp_service_set_security_model</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_security_model (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> security_model</parameter>);</programlisting>
<para>Set <parameter>security_model</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>security_model</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>security_model</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-security-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>security_model</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-security-model" role="function">
<title>idmef_snmp_service_new_security_model&#160;()</title>
<indexterm zone="idmef-snmp-service-new-security-model"><primary>idmef_snmp_service_new_security_model</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_security_model (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new security_model object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-security-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-security-model.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-get-security-name" role="function">
<title>idmef_snmp_service_get_security_name&#160;()</title>
<indexterm zone="idmef-snmp-service-get-security-name"><primary>idmef_snmp_service_get_security_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_snmp_service_get_security_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get security_name children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-security-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-security-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-security-name" role="function">
<title>idmef_snmp_service_set_security_name&#160;()</title>
<indexterm zone="idmef-snmp-service-set-security-name"><primary>idmef_snmp_service_set_security_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_security_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *security_name</parameter>);</programlisting>
<para>Set <parameter>security_name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>security_name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>security_name</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-security-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>security_name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-security-name" role="function">
<title>idmef_snmp_service_new_security_name&#160;()</title>
<indexterm zone="idmef-snmp-service-new-security-name"><primary>idmef_snmp_service_new_security_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_security_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new security_name object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-security-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-security-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-unset-security-level" role="function">
<title>idmef_snmp_service_unset_security_level&#160;()</title>
<indexterm zone="idmef-snmp-service-unset-security-level"><primary>idmef_snmp_service_unset_security_level</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_unset_security_level
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-snmp-service-get-security-level" role="function">
<title>idmef_snmp_service_get_security_level&#160;()</title>
<indexterm zone="idmef-snmp-service-get-security-level"><primary>idmef_snmp_service_get_security_level</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_snmp_service_get_security_level (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get security_level children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-security-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-security-level.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-security-level" role="function">
<title>idmef_snmp_service_set_security_level&#160;()</title>
<indexterm zone="idmef-snmp-service-set-security-level"><primary>idmef_snmp_service_set_security_level</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_security_level (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> security_level</parameter>);</programlisting>
<para>Set <parameter>security_level</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>security_level</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>security_level</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-security-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>security_level</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-security-level" role="function">
<title>idmef_snmp_service_new_security_level&#160;()</title>
<indexterm zone="idmef-snmp-service-new-security-level"><primary>idmef_snmp_service_new_security_level</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_security_level (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                       <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new security_level object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-security-level.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-security-level.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-get-context-name" role="function">
<title>idmef_snmp_service_get_context_name&#160;()</title>
<indexterm zone="idmef-snmp-service-get-context-name"><primary>idmef_snmp_service_get_context_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_snmp_service_get_context_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get context_name children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-context-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-context-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-context-name" role="function">
<title>idmef_snmp_service_set_context_name&#160;()</title>
<indexterm zone="idmef-snmp-service-set-context-name"><primary>idmef_snmp_service_set_context_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_context_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *context_name</parameter>);</programlisting>
<para>Set <parameter>context_name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>context_name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>context_name</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-context-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context_name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-context-name" role="function">
<title>idmef_snmp_service_new_context_name&#160;()</title>
<indexterm zone="idmef-snmp-service-new-context-name"><primary>idmef_snmp_service_new_context_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_context_name (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new context_name object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-context-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-context-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-get-context-engine-id" role="function">
<title>idmef_snmp_service_get_context_engine_id&#160;()</title>
<indexterm zone="idmef-snmp-service-get-context-engine-id"><primary>idmef_snmp_service_get_context_engine_id</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_snmp_service_get_context_engine_id
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get context_engine_id children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-context-engine-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-context-engine-id.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-context-engine-id" role="function">
<title>idmef_snmp_service_set_context_engine_id&#160;()</title>
<indexterm zone="idmef-snmp-service-set-context-engine-id"><primary>idmef_snmp_service_set_context_engine_id</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_context_engine_id
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *context_engine_id</parameter>);</programlisting>
<para>Set <parameter>context_engine_id</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>context_engine_id</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>context_engine_id</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-context-engine-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>context_engine_id</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-context-engine-id" role="function">
<title>idmef_snmp_service_new_context_engine_id&#160;()</title>
<indexterm zone="idmef-snmp-service-new-context-engine-id"><primary>idmef_snmp_service_new_context_engine_id</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_context_engine_id
                               (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new context_engine_id object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-context-engine-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-context-engine-id.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-get-command" role="function">
<title>idmef_snmp_service_get_command&#160;()</title>
<indexterm zone="idmef-snmp-service-get-command"><primary>idmef_snmp_service_get_command</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_snmp_service_get_command (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get command children of the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para>
<refsect3 id="idmef-snmp-service-get-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-get-command.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-set-command" role="function">
<title>idmef_snmp_service_set_command&#160;()</title>
<indexterm zone="idmef-snmp-service-set-command"><primary>idmef_snmp_service_set_command</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_snmp_service_set_command (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *command</parameter>);</programlisting>
<para>Set <parameter>command</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>command</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>command</parameter>
 object.</para>
<refsect3 id="idmef-snmp-service-set-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>command</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-new-command" role="function">
<title>idmef_snmp_service_new_command&#160;()</title>
<indexterm zone="idmef-snmp-service-new-command"><primary>idmef_snmp_service_new_command</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_new_command (<parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new command object, children of <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-snmp-service-new-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-new-command.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-type-to-numeric" role="function">
<title>idmef_service_type_to_numeric&#160;()</title>
<indexterm zone="idmef-service-type-to-numeric"><primary>idmef_service_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-service-type-t"><returnvalue>idmef_service_type_t</returnvalue></link>
idmef_service_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-service-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-service-type-t"><type>idmef_service_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-type-to-string" role="function">
<title>idmef_service_type_to_string&#160;()</title>
<indexterm zone="idmef-service-type-to-string"><primary>idmef_service_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_service_type_to_string (<parameter><link linkend="idmef-service-type-t"><type>idmef_service_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-service-type-t"><type>idmef_service_type_t</type></link> value.</para>
<refsect3 id="idmef-service-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-service-type-t"><type>idmef_service_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-new" role="function">
<title>idmef_service_new&#160;()</title>
<indexterm zone="idmef-service-new"><primary>idmef_service_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-copy" role="function">
<title>idmef_service_copy&#160;()</title>
<indexterm zone="idmef-service-copy"><primary>idmef_service_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_copy (<parameter>const <link linkend="idmef-service-t"><type>idmef_service_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-service-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-clone" role="function">
<title>idmef_service_clone&#160;()</title>
<indexterm zone="idmef-service-clone"><primary>idmef_service_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_clone (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-service-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-ref" role="function">
<title>idmef_service_ref&#160;()</title>
<indexterm zone="idmef-service-ref"><primary>idmef_service_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
idmef_service_ref (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *service</parameter>);</programlisting>
<para>Increase <parameter>service</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-service-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>service</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-destroy" role="function">
<title>idmef_service_destroy&#160;()</title>
<indexterm zone="idmef-service-destroy"><primary>idmef_service_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_destroy (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-service-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-ident" role="function">
<title>idmef_service_get_ident&#160;()</title>
<indexterm zone="idmef-service-get-ident"><primary>idmef_service_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_service_get_ident (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-ident" role="function">
<title>idmef_service_set_ident&#160;()</title>
<indexterm zone="idmef-service-set-ident"><primary>idmef_service_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_ident (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-service-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-ident" role="function">
<title>idmef_service_new_ident&#160;()</title>
<indexterm zone="idmef-service-new-ident"><primary>idmef_service_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_ident (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-unset-ip-version" role="function">
<title>idmef_service_unset_ip_version&#160;()</title>
<indexterm zone="idmef-service-unset-ip-version"><primary>idmef_service_unset_ip_version</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_unset_ip_version (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-service-get-ip-version" role="function">
<title>idmef_service_get_ip_version&#160;()</title>
<indexterm zone="idmef-service-get-ip-version"><primary>idmef_service_get_ip_version</primary></indexterm>
<programlisting language="C"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>&#160;*
idmef_service_get_ip_version (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ip_version children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-ip-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-ip-version.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint8_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-ip-version" role="function">
<title>idmef_service_set_ip_version&#160;()</title>
<indexterm zone="idmef-service-set-ip-version"><primary>idmef_service_set_ip_version</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_ip_version (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint8-t"><type>uint8_t</type></link> ip_version</parameter>);</programlisting>
<para>Set <parameter>ip_version</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ip_version</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ip_version</parameter>
 object.</para>
<refsect3 id="idmef-service-set-ip-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ip_version</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint8-t"><type>uint8_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-ip-version" role="function">
<title>idmef_service_new_ip_version&#160;()</title>
<indexterm zone="idmef-service-new-ip-version"><primary>idmef_service_new_ip_version</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_ip_version (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint8-t"><type>uint8_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ip_version object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint8-t"><type>uint8_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-ip-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint8-t"><type>uint8_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-ip-version.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-unset-iana-protocol-number" role="function">
<title>idmef_service_unset_iana_protocol_number&#160;()</title>
<indexterm zone="idmef-service-unset-iana-protocol-number"><primary>idmef_service_unset_iana_protocol_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_unset_iana_protocol_number
                               (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-service-get-iana-protocol-number" role="function">
<title>idmef_service_get_iana_protocol_number&#160;()</title>
<indexterm zone="idmef-service-get-iana-protocol-number"><primary>idmef_service_get_iana_protocol_number</primary></indexterm>
<programlisting language="C"><link linkend="uint8-t"><returnvalue>uint8_t</returnvalue></link>&#160;*
idmef_service_get_iana_protocol_number
                               (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get iana_protocol_number children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-iana-protocol-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-iana-protocol-number.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint8_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-iana-protocol-number" role="function">
<title>idmef_service_set_iana_protocol_number&#160;()</title>
<indexterm zone="idmef-service-set-iana-protocol-number"><primary>idmef_service_set_iana_protocol_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_iana_protocol_number
                               (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint8-t"><type>uint8_t</type></link> iana_protocol_number</parameter>);</programlisting>
<para>Set <parameter>iana_protocol_number</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>iana_protocol_number</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>iana_protocol_number</parameter>
 object.</para>
<refsect3 id="idmef-service-set-iana-protocol-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>iana_protocol_number</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint8-t"><type>uint8_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-iana-protocol-number" role="function">
<title>idmef_service_new_iana_protocol_number&#160;()</title>
<indexterm zone="idmef-service-new-iana-protocol-number"><primary>idmef_service_new_iana_protocol_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_iana_protocol_number
                               (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint8-t"><type>uint8_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new iana_protocol_number object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint8-t"><type>uint8_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-iana-protocol-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint8-t"><type>uint8_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-iana-protocol-number.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-iana-protocol-name" role="function">
<title>idmef_service_get_iana_protocol_name&#160;()</title>
<indexterm zone="idmef-service-get-iana-protocol-name"><primary>idmef_service_get_iana_protocol_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_service_get_iana_protocol_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get iana_protocol_name children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-iana-protocol-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-iana-protocol-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-iana-protocol-name" role="function">
<title>idmef_service_set_iana_protocol_name&#160;()</title>
<indexterm zone="idmef-service-set-iana-protocol-name"><primary>idmef_service_set_iana_protocol_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_iana_protocol_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *iana_protocol_name</parameter>);</programlisting>
<para>Set <parameter>iana_protocol_name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>iana_protocol_name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>iana_protocol_name</parameter>
 object.</para>
<refsect3 id="idmef-service-set-iana-protocol-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>iana_protocol_name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-iana-protocol-name" role="function">
<title>idmef_service_new_iana_protocol_name&#160;()</title>
<indexterm zone="idmef-service-new-iana-protocol-name"><primary>idmef_service_new_iana_protocol_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_iana_protocol_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new iana_protocol_name object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-iana-protocol-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-iana-protocol-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-name" role="function">
<title>idmef_service_get_name&#160;()</title>
<indexterm zone="idmef-service-get-name"><primary>idmef_service_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_service_get_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-name" role="function">
<title>idmef_service_set_name&#160;()</title>
<indexterm zone="idmef-service-set-name"><primary>idmef_service_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-service-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-name" role="function">
<title>idmef_service_new_name&#160;()</title>
<indexterm zone="idmef-service-new-name"><primary>idmef_service_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_name (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-unset-port" role="function">
<title>idmef_service_unset_port&#160;()</title>
<indexterm zone="idmef-service-unset-port"><primary>idmef_service_unset_port</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_unset_port (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-service-get-port" role="function">
<title>idmef_service_get_port&#160;()</title>
<indexterm zone="idmef-service-get-port"><primary>idmef_service_get_port</primary></indexterm>
<programlisting language="C"><link linkend="uint16-t"><returnvalue>uint16_t</returnvalue></link>&#160;*
idmef_service_get_port (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get port children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-port.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-port.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint16_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-port" role="function">
<title>idmef_service_set_port&#160;()</title>
<indexterm zone="idmef-service-set-port"><primary>idmef_service_set_port</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_port (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="uint16-t"><type>uint16_t</type></link> port</parameter>);</programlisting>
<para>Set <parameter>port</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>port</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>port</parameter>
 object.</para>
<refsect3 id="idmef-service-set-port.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>port</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint16-t"><type>uint16_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-port" role="function">
<title>idmef_service_new_port&#160;()</title>
<indexterm zone="idmef-service-new-port"><primary>idmef_service_new_port</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_port (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="uint16-t"><type>uint16_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new port object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint16-t"><type>uint16_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-port.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint16-t"><type>uint16_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-port.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-portlist" role="function">
<title>idmef_service_get_portlist&#160;()</title>
<indexterm zone="idmef-service-get-portlist"><primary>idmef_service_get_portlist</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_service_get_portlist (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get portlist children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-portlist.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-portlist.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-portlist" role="function">
<title>idmef_service_set_portlist&#160;()</title>
<indexterm zone="idmef-service-set-portlist"><primary>idmef_service_set_portlist</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_portlist (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *portlist</parameter>);</programlisting>
<para>Set <parameter>portlist</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>portlist</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>portlist</parameter>
 object.</para>
<refsect3 id="idmef-service-set-portlist.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>portlist</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-portlist" role="function">
<title>idmef_service_new_portlist&#160;()</title>
<indexterm zone="idmef-service-new-portlist"><primary>idmef_service_new_portlist</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_portlist (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new portlist object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-portlist.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-portlist.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-protocol" role="function">
<title>idmef_service_get_protocol&#160;()</title>
<indexterm zone="idmef-service-get-protocol"><primary>idmef_service_get_protocol</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_service_get_protocol (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Get protocol children of the <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para>
<refsect3 id="idmef-service-get-protocol.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-protocol.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-protocol" role="function">
<title>idmef_service_set_protocol&#160;()</title>
<indexterm zone="idmef-service-set-protocol"><primary>idmef_service_set_protocol</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_protocol (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *protocol</parameter>);</programlisting>
<para>Set <parameter>protocol</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>protocol</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>protocol</parameter>
 object.</para>
<refsect3 id="idmef-service-set-protocol.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>protocol</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-protocol" role="function">
<title>idmef_service_new_protocol&#160;()</title>
<indexterm zone="idmef-service-new-protocol"><primary>idmef_service_new_protocol</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_protocol (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new protocol object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-protocol.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-protocol.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-type" role="function">
<title>idmef_service_get_type&#160;()</title>
<indexterm zone="idmef-service-get-type"><primary>idmef_service_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-service-type-t"><returnvalue>idmef_service_type_t</returnvalue></link>
idmef_service_get_type (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the type children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-service-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-service-type-t"><type>idmef_service_type_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-web-service" role="function">
<title>idmef_service_get_web_service&#160;()</title>
<indexterm zone="idmef-service-get-web-service"><primary>idmef_service_get_web_service</primary></indexterm>
<programlisting language="C"><link linkend="idmef-web-service-t"><returnvalue>idmef_web_service_t</returnvalue></link>&#160;*
idmef_service_get_web_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the web_service children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-service-get-web-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-web-service.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-web-service" role="function">
<title>idmef_service_set_web_service&#160;()</title>
<indexterm zone="idmef-service-set-web-service"><primary>idmef_service_set_web_service</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_web_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *web_service</parameter>);</programlisting>
<para>Set <parameter>web_service</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>web_service</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>web_service</parameter>
 object.</para>
<refsect3 id="idmef-service-set-web-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>web_service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-web-service" role="function">
<title>idmef_service_new_web_service&#160;()</title>
<indexterm zone="idmef-service-new-web-service"><primary>idmef_service_new_web_service</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_web_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_web_service_t object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-web-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-web-service.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-get-snmp-service" role="function">
<title>idmef_service_get_snmp_service&#160;()</title>
<indexterm zone="idmef-service-get-snmp-service"><primary>idmef_service_get_snmp_service</primary></indexterm>
<programlisting language="C"><link linkend="idmef-snmp-service-t"><returnvalue>idmef_snmp_service_t</returnvalue></link>&#160;*
idmef_service_get_snmp_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the snmp_service children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-service-get-snmp-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-get-snmp-service.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-set-snmp-service" role="function">
<title>idmef_service_set_snmp_service&#160;()</title>
<indexterm zone="idmef-service-set-snmp-service"><primary>idmef_service_set_snmp_service</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_service_set_snmp_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *snmp_service</parameter>);</programlisting>
<para>Set <parameter>snmp_service</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>snmp_service</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>snmp_service</parameter>
 object.</para>
<refsect3 id="idmef-service-set-snmp-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>snmp_service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-new-snmp-service" role="function">
<title>idmef_service_new_snmp_service&#160;()</title>
<indexterm zone="idmef-service-new-snmp-service"><primary>idmef_service_new_snmp_service</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_new_snmp_service (<parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_snmp_service_t object, children of <link linkend="idmef-service-t"><type>idmef_service_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-service-new-snmp-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-new-snmp-service.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-category-to-numeric" role="function">
<title>idmef_node_category_to_numeric&#160;()</title>
<indexterm zone="idmef-node-category-to-numeric"><primary>idmef_node_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-category-t"><returnvalue>idmef_node_category_t</returnvalue></link>
idmef_node_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-node-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-category-to-string" role="function">
<title>idmef_node_category_to_string&#160;()</title>
<indexterm zone="idmef-node-category-to-string"><primary>idmef_node_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_node_category_to_string (<parameter><link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> value.</para>
<refsect3 id="idmef-node-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-new" role="function">
<title>idmef_node_new&#160;()</title>
<indexterm zone="idmef-node-new"><primary>idmef_node_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para>
<refsect3 id="idmef-node-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-copy" role="function">
<title>idmef_node_copy&#160;()</title>
<indexterm zone="idmef-node-copy"><primary>idmef_node_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_copy (<parameter>const <link linkend="idmef-node-t"><type>idmef_node_t</type></link> *src</parameter>,
                 <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-node-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-clone" role="function">
<title>idmef_node_clone&#160;()</title>
<indexterm zone="idmef-node-clone"><primary>idmef_node_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_clone (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *src</parameter>,
                  <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-node-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-ref" role="function">
<title>idmef_node_ref&#160;()</title>
<indexterm zone="idmef-node-ref"><primary>idmef_node_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
idmef_node_ref (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *node</parameter>);</programlisting>
<para>Increase <parameter>node</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-node-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>node</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-destroy" role="function">
<title>idmef_node_destroy&#160;()</title>
<indexterm zone="idmef-node-destroy"><primary>idmef_node_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_destroy (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-node-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-get-ident" role="function">
<title>idmef_node_get_ident&#160;()</title>
<indexterm zone="idmef-node-get-ident"><primary>idmef_node_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_node_get_ident (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para>
<refsect3 id="idmef-node-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-set-ident" role="function">
<title>idmef_node_set_ident&#160;()</title>
<indexterm zone="idmef-node-set-ident"><primary>idmef_node_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_set_ident (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-node-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-new-ident" role="function">
<title>idmef_node_new_ident&#160;()</title>
<indexterm zone="idmef-node-new-ident"><primary>idmef_node_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new_ident (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-node-t"><type>idmef_node_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-node-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-get-category" role="function">
<title>idmef_node_get_category&#160;()</title>
<indexterm zone="idmef-node-get-category"><primary>idmef_node_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-category-t"><returnvalue>idmef_node_category_t</returnvalue></link>
idmef_node_get_category (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para>
<refsect3 id="idmef-node-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_node_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-set-category" role="function">
<title>idmef_node_set_category&#160;()</title>
<indexterm zone="idmef-node-set-category"><primary>idmef_node_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_set_category (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-node-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-new-category" role="function">
<title>idmef_node_new_category&#160;()</title>
<indexterm zone="idmef-node-new-category"><primary>idmef_node_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new_category (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-node-t"><type>idmef_node_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-node-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-node-category-t"><type>idmef_node_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-get-location" role="function">
<title>idmef_node_get_location&#160;()</title>
<indexterm zone="idmef-node-get-location"><primary>idmef_node_get_location</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_node_get_location (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>);</programlisting>
<para>Get location children of the <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para>
<refsect3 id="idmef-node-get-location.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-get-location.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-set-location" role="function">
<title>idmef_node_set_location&#160;()</title>
<indexterm zone="idmef-node-set-location"><primary>idmef_node_set_location</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_set_location (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *location</parameter>);</programlisting>
<para>Set <parameter>location</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>location</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>location</parameter>
 object.</para>
<refsect3 id="idmef-node-set-location.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>location</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-new-location" role="function">
<title>idmef_node_new_location&#160;()</title>
<indexterm zone="idmef-node-new-location"><primary>idmef_node_new_location</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new_location (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new location object, children of <link linkend="idmef-node-t"><type>idmef_node_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-node-new-location.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new-location.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-get-name" role="function">
<title>idmef_node_get_name&#160;()</title>
<indexterm zone="idmef-node-get-name"><primary>idmef_node_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_node_get_name (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para>
<refsect3 id="idmef-node-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-set-name" role="function">
<title>idmef_node_set_name&#160;()</title>
<indexterm zone="idmef-node-set-name"><primary>idmef_node_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_set_name (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-node-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-new-name" role="function">
<title>idmef_node_new_name&#160;()</title>
<indexterm zone="idmef-node-new-name"><primary>idmef_node_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new_name (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-node-t"><type>idmef_node_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-node-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-get-next-address" role="function">
<title>idmef_node_get_next_address&#160;()</title>
<indexterm zone="idmef-node-get-next-address"><primary>idmef_node_get_next_address</primary></indexterm>
<programlisting language="C"><link linkend="idmef-address-t"><returnvalue>idmef_address_t</returnvalue></link>&#160;*
idmef_node_get_next_address (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *node</parameter>,
                             <parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *address_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_address_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<refsect3 id="idmef-node-get-next-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>address_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-get-next-address.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-address-t"><type>idmef_address_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-set-address" role="function">
<title>idmef_node_set_address&#160;()</title>
<indexterm zone="idmef-node-set-address"><primary>idmef_node_set_address</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_node_set_address (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> *object</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-node-set-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-new-address" role="function">
<title>idmef_node_new_address&#160;()</title>
<indexterm zone="idmef-node-new-address"><primary>idmef_node_new_address</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_new_address (<parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-address-t"><type>idmef_address_t</type></link> **ret</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-address-t"><type>idmef_address_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object. The created <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-node-new-address.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-address-t"><type>idmef_address_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-new-address.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-spoofed-to-numeric" role="function">
<title>idmef_source_spoofed_to_numeric&#160;()</title>
<indexterm zone="idmef-source-spoofed-to-numeric"><primary>idmef_source_spoofed_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-source-spoofed-t"><returnvalue>idmef_source_spoofed_t</returnvalue></link>
idmef_source_spoofed_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-source-spoofed-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-spoofed-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-spoofed-to-string" role="function">
<title>idmef_source_spoofed_to_string&#160;()</title>
<indexterm zone="idmef-source-spoofed-to-string"><primary>idmef_source_spoofed_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_source_spoofed_to_string (<parameter><link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> value.</para>
<refsect3 id="idmef-source-spoofed-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-spoofed-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-new" role="function">
<title>idmef_source_new&#160;()</title>
<indexterm zone="idmef-source-new"><primary>idmef_source_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-copy" role="function">
<title>idmef_source_copy&#160;()</title>
<indexterm zone="idmef-source-copy"><primary>idmef_source_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_copy (<parameter>const <link linkend="idmef-source-t"><type>idmef_source_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-source-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-clone" role="function">
<title>idmef_source_clone&#160;()</title>
<indexterm zone="idmef-source-clone"><primary>idmef_source_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_clone (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-source-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-ref" role="function">
<title>idmef_source_ref&#160;()</title>
<indexterm zone="idmef-source-ref"><primary>idmef_source_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-source-t"><returnvalue>idmef_source_t</returnvalue></link>&#160;*
idmef_source_ref (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *source</parameter>);</programlisting>
<para>Increase <parameter>source</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-source-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>source</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>source</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-destroy" role="function">
<title>idmef_source_destroy&#160;()</title>
<indexterm zone="idmef-source-destroy"><primary>idmef_source_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_destroy (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-source-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-ident" role="function">
<title>idmef_source_get_ident&#160;()</title>
<indexterm zone="idmef-source-get-ident"><primary>idmef_source_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_source_get_ident (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-ident" role="function">
<title>idmef_source_set_ident&#160;()</title>
<indexterm zone="idmef-source-set-ident"><primary>idmef_source_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_ident (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-source-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-ident" role="function">
<title>idmef_source_new_ident&#160;()</title>
<indexterm zone="idmef-source-new-ident"><primary>idmef_source_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_ident (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-spoofed" role="function">
<title>idmef_source_get_spoofed&#160;()</title>
<indexterm zone="idmef-source-get-spoofed"><primary>idmef_source_get_spoofed</primary></indexterm>
<programlisting language="C"><link linkend="idmef-source-spoofed-t"><returnvalue>idmef_source_spoofed_t</returnvalue></link>
idmef_source_get_spoofed (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get spoofed children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-spoofed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-spoofed.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_source_spoofed_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-spoofed" role="function">
<title>idmef_source_set_spoofed&#160;()</title>
<indexterm zone="idmef-source-set-spoofed"><primary>idmef_source_set_spoofed</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_spoofed (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> spoofed</parameter>);</programlisting>
<para>Set <parameter>spoofed</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>spoofed</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>spoofed</parameter>
 object.</para>
<refsect3 id="idmef-source-set-spoofed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>spoofed</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-spoofed" role="function">
<title>idmef_source_new_spoofed&#160;()</title>
<indexterm zone="idmef-source-new-spoofed"><primary>idmef_source_new_spoofed</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_spoofed (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new spoofed object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-spoofed.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-source-spoofed-t"><type>idmef_source_spoofed_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-spoofed.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-interface" role="function">
<title>idmef_source_get_interface&#160;()</title>
<indexterm zone="idmef-source-get-interface"><primary>idmef_source_get_interface</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_source_get_interface (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get interface children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-interface.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-interface" role="function">
<title>idmef_source_set_interface&#160;()</title>
<indexterm zone="idmef-source-set-interface"><primary>idmef_source_set_interface</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_interface (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *interface</parameter>);</programlisting>
<para>Set <parameter>interface</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>interface</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>interface</parameter>
 object.</para>
<refsect3 id="idmef-source-set-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-interface" role="function">
<title>idmef_source_new_interface&#160;()</title>
<indexterm zone="idmef-source-new-interface"><primary>idmef_source_new_interface</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_interface (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new interface object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-interface.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-node" role="function">
<title>idmef_source_get_node&#160;()</title>
<indexterm zone="idmef-source-get-node"><primary>idmef_source_get_node</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
idmef_source_get_node (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get node children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-node.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_node_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-node" role="function">
<title>idmef_source_set_node&#160;()</title>
<indexterm zone="idmef-source-set-node"><primary>idmef_source_set_node</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_node (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *node</parameter>);</programlisting>
<para>Set <parameter>node</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>node</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>node</parameter>
 object.</para>
<refsect3 id="idmef-source-set-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-node" role="function">
<title>idmef_source_new_node&#160;()</title>
<indexterm zone="idmef-source-new-node"><primary>idmef_source_new_node</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_node (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new node object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-node.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-user" role="function">
<title>idmef_source_get_user&#160;()</title>
<indexterm zone="idmef-source-get-user"><primary>idmef_source_get_user</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
idmef_source_get_user (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get user children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-user.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_user_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-user" role="function">
<title>idmef_source_set_user&#160;()</title>
<indexterm zone="idmef-source-set-user"><primary>idmef_source_set_user</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_user (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *user</parameter>);</programlisting>
<para>Set <parameter>user</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>user</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>user</parameter>
 object.</para>
<refsect3 id="idmef-source-set-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-user" role="function">
<title>idmef_source_new_user&#160;()</title>
<indexterm zone="idmef-source-new-user"><primary>idmef_source_new_user</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_user (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new user object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-user.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-process" role="function">
<title>idmef_source_get_process&#160;()</title>
<indexterm zone="idmef-source-get-process"><primary>idmef_source_get_process</primary></indexterm>
<programlisting language="C"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
idmef_source_get_process (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get process children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-process.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_process_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-process" role="function">
<title>idmef_source_set_process&#160;()</title>
<indexterm zone="idmef-source-set-process"><primary>idmef_source_set_process</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_process (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>);</programlisting>
<para>Set <parameter>process</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>process</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>process</parameter>
 object.</para>
<refsect3 id="idmef-source-set-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-process" role="function">
<title>idmef_source_new_process&#160;()</title>
<indexterm zone="idmef-source-new-process"><primary>idmef_source_new_process</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_process (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new process object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-process.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-get-service" role="function">
<title>idmef_source_get_service&#160;()</title>
<indexterm zone="idmef-source-get-service"><primary>idmef_source_get_service</primary></indexterm>
<programlisting language="C"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
idmef_source_get_service (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>);</programlisting>
<para>Get service children of the <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-source-get-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-get-service.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_service_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-set-service" role="function">
<title>idmef_source_set_service&#160;()</title>
<indexterm zone="idmef-source-set-service"><primary>idmef_source_set_service</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_source_set_service (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *service</parameter>);</programlisting>
<para>Set <parameter>service</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>service</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>service</parameter>
 object.</para>
<refsect3 id="idmef-source-set-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-new-service" role="function">
<title>idmef_source_new_service&#160;()</title>
<indexterm zone="idmef-source-new-service"><primary>idmef_source_new_service</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_new_service (<parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new service object, children of <link linkend="idmef-source-t"><type>idmef_source_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-source-new-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-new-service.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-new" role="function">
<title>idmef_file_access_new&#160;()</title>
<indexterm zone="idmef-file-access-new"><primary>idmef_file_access_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_new (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para>
<refsect3 id="idmef-file-access-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-copy" role="function">
<title>idmef_file_access_copy&#160;()</title>
<indexterm zone="idmef-file-access-copy"><primary>idmef_file_access_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_copy (<parameter>const <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-file-access-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-clone" role="function">
<title>idmef_file_access_clone&#160;()</title>
<indexterm zone="idmef-file-access-clone"><primary>idmef_file_access_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_clone (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *src</parameter>,
                         <parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-file-access-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-ref" role="function">
<title>idmef_file_access_ref&#160;()</title>
<indexterm zone="idmef-file-access-ref"><primary>idmef_file_access_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-access-t"><returnvalue>idmef_file_access_t</returnvalue></link>&#160;*
idmef_file_access_ref (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *file_access</parameter>);</programlisting>
<para>Increase <parameter>file_access</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-file-access-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file_access</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>file_access</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-destroy" role="function">
<title>idmef_file_access_destroy&#160;()</title>
<indexterm zone="idmef-file-access-destroy"><primary>idmef_file_access_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_access_destroy (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-file-access-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-get-user-id" role="function">
<title>idmef_file_access_get_user_id&#160;()</title>
<indexterm zone="idmef-file-access-get-user-id"><primary>idmef_file_access_get_user_id</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-id-t"><returnvalue>idmef_user_id_t</returnvalue></link>&#160;*
idmef_file_access_get_user_id (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>);</programlisting>
<para>Get user_id children of the <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para>
<refsect3 id="idmef-file-access-get-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-get-user-id.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_user_id_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-set-user-id" role="function">
<title>idmef_file_access_set_user_id&#160;()</title>
<indexterm zone="idmef-file-access-set-user-id"><primary>idmef_file_access_set_user_id</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_access_set_user_id (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *user_id</parameter>);</programlisting>
<para>Set <parameter>user_id</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>user_id</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>user_id</parameter>
 object.</para>
<refsect3 id="idmef-file-access-set-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user_id</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-new-user-id" role="function">
<title>idmef_file_access_new_user_id&#160;()</title>
<indexterm zone="idmef-file-access-new-user-id"><primary>idmef_file_access_new_user_id</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_new_user_id (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new user_id object, children of <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-access-new-user-id.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-new-user-id.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-get-next-permission" role="function">
<title>idmef_file_access_get_next_permission&#160;()</title>
<indexterm zone="idmef-file-access-get-next-permission"><primary>idmef_file_access_get_next_permission</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_file_access_get_next_permission (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *file_access</parameter>,
                                       <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *prelude_string_cur</parameter>);</programlisting>
<para>Get the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the prelude_string_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<refsect3 id="idmef-file-access-get-next-permission.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file_access</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prelude_string_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-get-next-permission.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="prelude-string-t"><type>prelude_string_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-set-permission" role="function">
<title>idmef_file_access_set_permission&#160;()</title>
<indexterm zone="idmef-file-access-set-permission"><primary>idmef_file_access_set_permission</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_access_set_permission (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *object</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-access-set-permission.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-access-new-permission" role="function">
<title>idmef_file_access_new_permission&#160;()</title>
<indexterm zone="idmef-file-access-new-permission"><primary>idmef_file_access_new_permission</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_new_permission (<parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>,
                                  <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="prelude-string-t"><type>prelude_string_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object. The created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-access-new-permission.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-new-permission.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new" role="function">
<title>idmef_inode_new&#160;()</title>
<indexterm zone="idmef-inode-new"><primary>idmef_inode_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-copy" role="function">
<title>idmef_inode_copy&#160;()</title>
<indexterm zone="idmef-inode-copy"><primary>idmef_inode_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_copy (<parameter>const <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *src</parameter>,
                  <parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-inode-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-clone" role="function">
<title>idmef_inode_clone&#160;()</title>
<indexterm zone="idmef-inode-clone"><primary>idmef_inode_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_clone (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-inode-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-ref" role="function">
<title>idmef_inode_ref&#160;()</title>
<indexterm zone="idmef-inode-ref"><primary>idmef_inode_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-inode-t"><returnvalue>idmef_inode_t</returnvalue></link>&#160;*
idmef_inode_ref (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *inode</parameter>);</programlisting>
<para>Increase <parameter>inode</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-inode-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>inode</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>inode</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-destroy" role="function">
<title>idmef_inode_destroy&#160;()</title>
<indexterm zone="idmef-inode-destroy"><primary>idmef_inode_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_destroy (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-inode-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-get-change-time" role="function">
<title>idmef_inode_get_change_time&#160;()</title>
<indexterm zone="idmef-inode-get-change-time"><primary>idmef_inode_get_change_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_inode_get_change_time (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get change_time children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-change-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-change-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-change-time" role="function">
<title>idmef_inode_set_change_time&#160;()</title>
<indexterm zone="idmef-inode-set-change-time"><primary>idmef_inode_set_change_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_change_time (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *change_time</parameter>);</programlisting>
<para>Set <parameter>change_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>change_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>change_time</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-change-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>change_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-change-time" role="function">
<title>idmef_inode_new_change_time&#160;()</title>
<indexterm zone="idmef-inode-new-change-time"><primary>idmef_inode_new_change_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_change_time (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new change_time object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-change-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-change-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-unset-number" role="function">
<title>idmef_inode_unset_number&#160;()</title>
<indexterm zone="idmef-inode-unset-number"><primary>idmef_inode_unset_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_unset_number (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-inode-get-number" role="function">
<title>idmef_inode_get_number&#160;()</title>
<indexterm zone="idmef-inode-get-number"><primary>idmef_inode_get_number</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_inode_get_number (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get number children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-number.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-number" role="function">
<title>idmef_inode_set_number&#160;()</title>
<indexterm zone="idmef-inode-set-number"><primary>idmef_inode_set_number</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_number (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="uint32-t"><type>uint32_t</type></link> number</parameter>);</programlisting>
<para>Set <parameter>number</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>number</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>number</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>number</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-number" role="function">
<title>idmef_inode_new_number&#160;()</title>
<indexterm zone="idmef-inode-new-number"><primary>idmef_inode_new_number</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_number (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new number object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-number.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-number.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-unset-major-device" role="function">
<title>idmef_inode_unset_major_device&#160;()</title>
<indexterm zone="idmef-inode-unset-major-device"><primary>idmef_inode_unset_major_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_unset_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-inode-get-major-device" role="function">
<title>idmef_inode_get_major_device&#160;()</title>
<indexterm zone="idmef-inode-get-major-device"><primary>idmef_inode_get_major_device</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_inode_get_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get major_device children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-major-device.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-major-device" role="function">
<title>idmef_inode_set_major_device&#160;()</title>
<indexterm zone="idmef-inode-set-major-device"><primary>idmef_inode_set_major_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint32-t"><type>uint32_t</type></link> major_device</parameter>);</programlisting>
<para>Set <parameter>major_device</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>major_device</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>major_device</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>major_device</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-major-device" role="function">
<title>idmef_inode_new_major_device&#160;()</title>
<indexterm zone="idmef-inode-new-major-device"><primary>idmef_inode_new_major_device</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new major_device object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-major-device.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-unset-minor-device" role="function">
<title>idmef_inode_unset_minor_device&#160;()</title>
<indexterm zone="idmef-inode-unset-minor-device"><primary>idmef_inode_unset_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_unset_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-inode-get-minor-device" role="function">
<title>idmef_inode_get_minor_device&#160;()</title>
<indexterm zone="idmef-inode-get-minor-device"><primary>idmef_inode_get_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_inode_get_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get minor_device children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-minor-device.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-minor-device" role="function">
<title>idmef_inode_set_minor_device&#160;()</title>
<indexterm zone="idmef-inode-set-minor-device"><primary>idmef_inode_set_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint32-t"><type>uint32_t</type></link> minor_device</parameter>);</programlisting>
<para>Set <parameter>minor_device</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>minor_device</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>minor_device</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>minor_device</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-minor-device" role="function">
<title>idmef_inode_new_minor_device&#160;()</title>
<indexterm zone="idmef-inode-new-minor-device"><primary>idmef_inode_new_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new minor_device object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-minor-device.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-unset-c-major-device" role="function">
<title>idmef_inode_unset_c_major_device&#160;()</title>
<indexterm zone="idmef-inode-unset-c-major-device"><primary>idmef_inode_unset_c_major_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_unset_c_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-inode-get-c-major-device" role="function">
<title>idmef_inode_get_c_major_device&#160;()</title>
<indexterm zone="idmef-inode-get-c-major-device"><primary>idmef_inode_get_c_major_device</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_inode_get_c_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get c_major_device children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-c-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-c-major-device.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-c-major-device" role="function">
<title>idmef_inode_set_c_major_device&#160;()</title>
<indexterm zone="idmef-inode-set-c-major-device"><primary>idmef_inode_set_c_major_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_c_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> c_major_device</parameter>);</programlisting>
<para>Set <parameter>c_major_device</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>c_major_device</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>c_major_device</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-c-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>c_major_device</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-c-major-device" role="function">
<title>idmef_inode_new_c_major_device&#160;()</title>
<indexterm zone="idmef-inode-new-c-major-device"><primary>idmef_inode_new_c_major_device</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_c_major_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new c_major_device object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-c-major-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-c-major-device.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-unset-c-minor-device" role="function">
<title>idmef_inode_unset_c_minor_device&#160;()</title>
<indexterm zone="idmef-inode-unset-c-minor-device"><primary>idmef_inode_unset_c_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_unset_c_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-inode-get-c-minor-device" role="function">
<title>idmef_inode_get_c_minor_device&#160;()</title>
<indexterm zone="idmef-inode-get-c-minor-device"><primary>idmef_inode_get_c_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_inode_get_c_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>);</programlisting>
<para>Get c_minor_device children of the <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para>
<refsect3 id="idmef-inode-get-c-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-get-c-minor-device.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-set-c-minor-device" role="function">
<title>idmef_inode_set_c_minor_device&#160;()</title>
<indexterm zone="idmef-inode-set-c-minor-device"><primary>idmef_inode_set_c_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_inode_set_c_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> c_minor_device</parameter>);</programlisting>
<para>Set <parameter>c_minor_device</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>c_minor_device</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>c_minor_device</parameter>
 object.</para>
<refsect3 id="idmef-inode-set-c-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>c_minor_device</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-inode-new-c-minor-device" role="function">
<title>idmef_inode_new_c_minor_device&#160;()</title>
<indexterm zone="idmef-inode-new-c-minor-device"><primary>idmef_inode_new_c_minor_device</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_new_c_minor_device (<parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new c_minor_device object, children of <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-inode-new-c-minor-device.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-new-c-minor-device.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-algorithm-to-numeric" role="function">
<title>idmef_checksum_algorithm_to_numeric&#160;()</title>
<indexterm zone="idmef-checksum-algorithm-to-numeric"><primary>idmef_checksum_algorithm_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-checksum-algorithm-t"><returnvalue>idmef_checksum_algorithm_t</returnvalue></link>
idmef_checksum_algorithm_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-checksum-algorithm-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-algorithm-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-algorithm-to-string" role="function">
<title>idmef_checksum_algorithm_to_string&#160;()</title>
<indexterm zone="idmef-checksum-algorithm-to-string"><primary>idmef_checksum_algorithm_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_checksum_algorithm_to_string (<parameter><link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> value.</para>
<refsect3 id="idmef-checksum-algorithm-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-algorithm-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-new" role="function">
<title>idmef_checksum_new&#160;()</title>
<indexterm zone="idmef-checksum-new"><primary>idmef_checksum_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_new (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<refsect3 id="idmef-checksum-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-copy" role="function">
<title>idmef_checksum_copy&#160;()</title>
<indexterm zone="idmef-checksum-copy"><primary>idmef_checksum_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_copy (<parameter>const <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-checksum-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-clone" role="function">
<title>idmef_checksum_clone&#160;()</title>
<indexterm zone="idmef-checksum-clone"><primary>idmef_checksum_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_clone (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *src</parameter>,
                      <parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-checksum-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-ref" role="function">
<title>idmef_checksum_ref&#160;()</title>
<indexterm zone="idmef-checksum-ref"><primary>idmef_checksum_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-checksum-t"><returnvalue>idmef_checksum_t</returnvalue></link>&#160;*
idmef_checksum_ref (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *checksum</parameter>);</programlisting>
<para>Increase <parameter>checksum</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-checksum-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>checksum</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>checksum</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-destroy" role="function">
<title>idmef_checksum_destroy&#160;()</title>
<indexterm zone="idmef-checksum-destroy"><primary>idmef_checksum_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_checksum_destroy (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-checksum-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-get-value" role="function">
<title>idmef_checksum_get_value&#160;()</title>
<indexterm zone="idmef-checksum-get-value"><primary>idmef_checksum_get_value</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_checksum_get_value (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>);</programlisting>
<para>Get value children of the <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<refsect3 id="idmef-checksum-get-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-get-value.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-set-value" role="function">
<title>idmef_checksum_set_value&#160;()</title>
<indexterm zone="idmef-checksum-set-value"><primary>idmef_checksum_set_value</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_checksum_set_value (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *value</parameter>);</programlisting>
<para>Set <parameter>value</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>value</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>value</parameter>
 object.</para>
<refsect3 id="idmef-checksum-set-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>value</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-new-value" role="function">
<title>idmef_checksum_new_value&#160;()</title>
<indexterm zone="idmef-checksum-new-value"><primary>idmef_checksum_new_value</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_new_value (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new value object, children of <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-checksum-new-value.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-new-value.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-get-key" role="function">
<title>idmef_checksum_get_key&#160;()</title>
<indexterm zone="idmef-checksum-get-key"><primary>idmef_checksum_get_key</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_checksum_get_key (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>);</programlisting>
<para>Get key children of the <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<refsect3 id="idmef-checksum-get-key.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-get-key.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-set-key" role="function">
<title>idmef_checksum_set_key&#160;()</title>
<indexterm zone="idmef-checksum-set-key"><primary>idmef_checksum_set_key</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_checksum_set_key (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *key</parameter>);</programlisting>
<para>Set <parameter>key</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>key</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>key</parameter>
 object.</para>
<refsect3 id="idmef-checksum-set-key.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-new-key" role="function">
<title>idmef_checksum_new_key&#160;()</title>
<indexterm zone="idmef-checksum-new-key"><primary>idmef_checksum_new_key</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_new_key (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new key object, children of <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-checksum-new-key.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-new-key.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-get-algorithm" role="function">
<title>idmef_checksum_get_algorithm&#160;()</title>
<indexterm zone="idmef-checksum-get-algorithm"><primary>idmef_checksum_get_algorithm</primary></indexterm>
<programlisting language="C"><link linkend="idmef-checksum-algorithm-t"><returnvalue>idmef_checksum_algorithm_t</returnvalue></link>
idmef_checksum_get_algorithm (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>);</programlisting>
<para>Get algorithm children of the <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<refsect3 id="idmef-checksum-get-algorithm.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-get-algorithm.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_checksum_algorithm_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-set-algorithm" role="function">
<title>idmef_checksum_set_algorithm&#160;()</title>
<indexterm zone="idmef-checksum-set-algorithm"><primary>idmef_checksum_set_algorithm</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_checksum_set_algorithm (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> algorithm</parameter>);</programlisting>
<para>Set <parameter>algorithm</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>algorithm</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>algorithm</parameter>
 object.</para>
<refsect3 id="idmef-checksum-set-algorithm.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>algorithm</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-new-algorithm" role="function">
<title>idmef_checksum_new_algorithm&#160;()</title>
<indexterm zone="idmef-checksum-new-algorithm"><primary>idmef_checksum_new_algorithm</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_new_algorithm (<parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new algorithm object, children of <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-checksum-new-algorithm.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-checksum-algorithm-t"><type>idmef_checksum_algorithm_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-new-algorithm.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-category-to-numeric" role="function">
<title>idmef_file_category_to_numeric&#160;()</title>
<indexterm zone="idmef-file-category-to-numeric"><primary>idmef_file_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-category-t"><returnvalue>idmef_file_category_t</returnvalue></link>
idmef_file_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-file-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-category-to-string" role="function">
<title>idmef_file_category_to_string&#160;()</title>
<indexterm zone="idmef-file-category-to-string"><primary>idmef_file_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_file_category_to_string (<parameter><link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> value.</para>
<refsect3 id="idmef-file-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-fstype-to-numeric" role="function">
<title>idmef_file_fstype_to_numeric&#160;()</title>
<indexterm zone="idmef-file-fstype-to-numeric"><primary>idmef_file_fstype_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-fstype-t"><returnvalue>idmef_file_fstype_t</returnvalue></link>
idmef_file_fstype_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-file-fstype-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-fstype-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-fstype-to-string" role="function">
<title>idmef_file_fstype_to_string&#160;()</title>
<indexterm zone="idmef-file-fstype-to-string"><primary>idmef_file_fstype_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_file_fstype_to_string (<parameter><link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> value.</para>
<refsect3 id="idmef-file-fstype-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-fstype-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-new" role="function">
<title>idmef_file_new&#160;()</title>
<indexterm zone="idmef-file-new"><primary>idmef_file_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-copy" role="function">
<title>idmef_file_copy&#160;()</title>
<indexterm zone="idmef-file-copy"><primary>idmef_file_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_copy (<parameter>const <link linkend="idmef-file-t"><type>idmef_file_t</type></link> *src</parameter>,
                 <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-file-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-clone" role="function">
<title>idmef_file_clone&#160;()</title>
<indexterm zone="idmef-file-clone"><primary>idmef_file_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_clone (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *src</parameter>,
                  <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-file-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-ref" role="function">
<title>idmef_file_ref&#160;()</title>
<indexterm zone="idmef-file-ref"><primary>idmef_file_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
idmef_file_ref (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file</parameter>);</programlisting>
<para>Increase <parameter>file</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-file-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>file</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-destroy" role="function">
<title>idmef_file_destroy&#160;()</title>
<indexterm zone="idmef-file-destroy"><primary>idmef_file_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_destroy (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-file-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-ident" role="function">
<title>idmef_file_get_ident&#160;()</title>
<indexterm zone="idmef-file-get-ident"><primary>idmef_file_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_file_get_ident (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-ident" role="function">
<title>idmef_file_set_ident&#160;()</title>
<indexterm zone="idmef-file-set-ident"><primary>idmef_file_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_ident (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-file-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-ident" role="function">
<title>idmef_file_new_ident&#160;()</title>
<indexterm zone="idmef-file-new-ident"><primary>idmef_file_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_ident (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-name" role="function">
<title>idmef_file_get_name&#160;()</title>
<indexterm zone="idmef-file-get-name"><primary>idmef_file_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_file_get_name (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-name" role="function">
<title>idmef_file_set_name&#160;()</title>
<indexterm zone="idmef-file-set-name"><primary>idmef_file_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_name (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-file-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-name" role="function">
<title>idmef_file_new_name&#160;()</title>
<indexterm zone="idmef-file-new-name"><primary>idmef_file_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_name (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-path" role="function">
<title>idmef_file_get_path&#160;()</title>
<indexterm zone="idmef-file-get-path"><primary>idmef_file_get_path</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_file_get_path (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get path children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-path.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-path" role="function">
<title>idmef_file_set_path&#160;()</title>
<indexterm zone="idmef-file-set-path"><primary>idmef_file_set_path</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_path (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *path</parameter>);</programlisting>
<para>Set <parameter>path</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>path</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>path</parameter>
 object.</para>
<refsect3 id="idmef-file-set-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-path" role="function">
<title>idmef_file_new_path&#160;()</title>
<indexterm zone="idmef-file-new-path"><primary>idmef_file_new_path</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_path (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                     <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new path object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-path.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-create-time" role="function">
<title>idmef_file_get_create_time&#160;()</title>
<indexterm zone="idmef-file-get-create-time"><primary>idmef_file_get_create_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_file_get_create_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get create_time children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-create-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-create-time" role="function">
<title>idmef_file_set_create_time&#160;()</title>
<indexterm zone="idmef-file-set-create-time"><primary>idmef_file_set_create_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_create_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *create_time</parameter>);</programlisting>
<para>Set <parameter>create_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>create_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>create_time</parameter>
 object.</para>
<refsect3 id="idmef-file-set-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>create_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-create-time" role="function">
<title>idmef_file_new_create_time&#160;()</title>
<indexterm zone="idmef-file-new-create-time"><primary>idmef_file_new_create_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_create_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new create_time object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-create-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-modify-time" role="function">
<title>idmef_file_get_modify_time&#160;()</title>
<indexterm zone="idmef-file-get-modify-time"><primary>idmef_file_get_modify_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_file_get_modify_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get modify_time children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-modify-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-modify-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-modify-time" role="function">
<title>idmef_file_set_modify_time&#160;()</title>
<indexterm zone="idmef-file-set-modify-time"><primary>idmef_file_set_modify_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_modify_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *modify_time</parameter>);</programlisting>
<para>Set <parameter>modify_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>modify_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>modify_time</parameter>
 object.</para>
<refsect3 id="idmef-file-set-modify-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>modify_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-modify-time" role="function">
<title>idmef_file_new_modify_time&#160;()</title>
<indexterm zone="idmef-file-new-modify-time"><primary>idmef_file_new_modify_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_modify_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new modify_time object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-modify-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-modify-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-access-time" role="function">
<title>idmef_file_get_access_time&#160;()</title>
<indexterm zone="idmef-file-get-access-time"><primary>idmef_file_get_access_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_file_get_access_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get access_time children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-access-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-access-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-access-time" role="function">
<title>idmef_file_set_access_time&#160;()</title>
<indexterm zone="idmef-file-set-access-time"><primary>idmef_file_set_access_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_access_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *access_time</parameter>);</programlisting>
<para>Set <parameter>access_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>access_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>access_time</parameter>
 object.</para>
<refsect3 id="idmef-file-set-access-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>access_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-access-time" role="function">
<title>idmef_file_new_access_time&#160;()</title>
<indexterm zone="idmef-file-new-access-time"><primary>idmef_file_new_access_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_access_time (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new access_time object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-access-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-access-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-unset-data-size" role="function">
<title>idmef_file_unset_data_size&#160;()</title>
<indexterm zone="idmef-file-unset-data-size"><primary>idmef_file_unset_data_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_unset_data_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-file-get-data-size" role="function">
<title>idmef_file_get_data_size&#160;()</title>
<indexterm zone="idmef-file-get-data-size"><primary>idmef_file_get_data_size</primary></indexterm>
<programlisting language="C"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>&#160;*
idmef_file_get_data_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get data_size children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-data-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-data-size.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint64_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-data-size" role="function">
<title>idmef_file_set_data_size&#160;()</title>
<indexterm zone="idmef-file-set-data-size"><primary>idmef_file_set_data_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_data_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint64-t"><type>uint64_t</type></link> data_size</parameter>);</programlisting>
<para>Set <parameter>data_size</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>data_size</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>data_size</parameter>
 object.</para>
<refsect3 id="idmef-file-set-data-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data_size</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint64-t"><type>uint64_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-data-size" role="function">
<title>idmef_file_new_data_size&#160;()</title>
<indexterm zone="idmef-file-new-data-size"><primary>idmef_file_new_data_size</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_data_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint64-t"><type>uint64_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new data_size object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint64-t"><type>uint64_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-data-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint64-t"><type>uint64_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-data-size.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-unset-disk-size" role="function">
<title>idmef_file_unset_disk_size&#160;()</title>
<indexterm zone="idmef-file-unset-disk-size"><primary>idmef_file_unset_disk_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_unset_disk_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-file-get-disk-size" role="function">
<title>idmef_file_get_disk_size&#160;()</title>
<indexterm zone="idmef-file-get-disk-size"><primary>idmef_file_get_disk_size</primary></indexterm>
<programlisting language="C"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>&#160;*
idmef_file_get_disk_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get disk_size children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-disk-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-disk-size.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint64_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-disk-size" role="function">
<title>idmef_file_set_disk_size&#160;()</title>
<indexterm zone="idmef-file-set-disk-size"><primary>idmef_file_set_disk_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_disk_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint64-t"><type>uint64_t</type></link> disk_size</parameter>);</programlisting>
<para>Set <parameter>disk_size</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>disk_size</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>disk_size</parameter>
 object.</para>
<refsect3 id="idmef-file-set-disk-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>disk_size</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint64-t"><type>uint64_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-disk-size" role="function">
<title>idmef_file_new_disk_size&#160;()</title>
<indexterm zone="idmef-file-new-disk-size"><primary>idmef_file_new_disk_size</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_disk_size (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="uint64-t"><type>uint64_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new disk_size object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint64-t"><type>uint64_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-disk-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint64-t"><type>uint64_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-disk-size.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-next-file-access" role="function">
<title>idmef_file_get_next_file_access&#160;()</title>
<indexterm zone="idmef-file-get-next-file-access"><primary>idmef_file_get_next_file_access</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-access-t"><returnvalue>idmef_file_access_t</returnvalue></link>&#160;*
idmef_file_get_next_file_access (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file</parameter>,
                                 <parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *file_access_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_file_access_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para>
<refsect3 id="idmef-file-get-next-file-access.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>file_access_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-next-file-access.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-file-access" role="function">
<title>idmef_file_set_file_access&#160;()</title>
<indexterm zone="idmef-file-set-file-access"><primary>idmef_file_set_file_access</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_file_access (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *object</parameter>,
                            <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-set-file-access.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-file-access" role="function">
<title>idmef_file_new_file_access&#160;()</title>
<indexterm zone="idmef-file-new-file-access"><primary>idmef_file_new_file_access</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_file_access (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> **ret</parameter>,
                            <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object. The created <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-new-file-access.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-file-access.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-next-linkage" role="function">
<title>idmef_file_get_next_linkage&#160;()</title>
<indexterm zone="idmef-file-get-next-linkage"><primary>idmef_file_get_next_linkage</primary></indexterm>
<programlisting language="C"><link linkend="idmef-linkage-t"><returnvalue>idmef_linkage_t</returnvalue></link>&#160;*
idmef_file_get_next_linkage (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file</parameter>,
                             <parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *linkage_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_linkage_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-file-get-next-linkage.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>linkage_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-next-linkage.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-linkage" role="function">
<title>idmef_file_set_linkage&#160;()</title>
<indexterm zone="idmef-file-set-linkage"><primary>idmef_file_set_linkage</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_linkage (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *object</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-set-linkage.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-linkage" role="function">
<title>idmef_file_new_linkage&#160;()</title>
<indexterm zone="idmef-file-new-linkage"><primary>idmef_file_new_linkage</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_linkage (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> **ret</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object. The created <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-new-linkage.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-linkage.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-inode" role="function">
<title>idmef_file_get_inode&#160;()</title>
<indexterm zone="idmef-file-get-inode"><primary>idmef_file_get_inode</primary></indexterm>
<programlisting language="C"><link linkend="idmef-inode-t"><returnvalue>idmef_inode_t</returnvalue></link>&#160;*
idmef_file_get_inode (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get inode children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-inode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-inode.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_inode_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-inode" role="function">
<title>idmef_file_set_inode&#160;()</title>
<indexterm zone="idmef-file-set-inode"><primary>idmef_file_set_inode</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_inode (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *inode</parameter>);</programlisting>
<para>Set <parameter>inode</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>inode</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>inode</parameter>
 object.</para>
<refsect3 id="idmef-file-set-inode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>inode</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-inode" role="function">
<title>idmef_file_new_inode&#160;()</title>
<indexterm zone="idmef-file-new-inode"><primary>idmef_file_new_inode</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_inode (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                      <parameter><link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new inode object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-inode.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-inode.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-next-checksum" role="function">
<title>idmef_file_get_next_checksum&#160;()</title>
<indexterm zone="idmef-file-get-next-checksum"><primary>idmef_file_get_next_checksum</primary></indexterm>
<programlisting language="C"><link linkend="idmef-checksum-t"><returnvalue>idmef_checksum_t</returnvalue></link>&#160;*
idmef_file_get_next_checksum (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file</parameter>,
                              <parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *checksum_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_checksum_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<refsect3 id="idmef-file-get-next-checksum.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>checksum_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-next-checksum.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-checksum" role="function">
<title>idmef_file_set_checksum&#160;()</title>
<indexterm zone="idmef-file-set-checksum"><primary>idmef_file_set_checksum</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_checksum (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *object</parameter>,
                         <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-set-checksum.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-checksum" role="function">
<title>idmef_file_new_checksum&#160;()</title>
<indexterm zone="idmef-file-new-checksum"><primary>idmef_file_new_checksum</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_checksum (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> **ret</parameter>,
                         <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object. The created <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-file-new-checksum.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-checksum.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-category" role="function">
<title>idmef_file_get_category&#160;()</title>
<indexterm zone="idmef-file-get-category"><primary>idmef_file_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-category-t"><returnvalue>idmef_file_category_t</returnvalue></link>
idmef_file_get_category (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_file_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-category" role="function">
<title>idmef_file_set_category&#160;()</title>
<indexterm zone="idmef-file-set-category"><primary>idmef_file_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_category (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-file-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-category" role="function">
<title>idmef_file_new_category&#160;()</title>
<indexterm zone="idmef-file-new-category"><primary>idmef_file_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_category (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-file-category-t"><type>idmef_file_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-unset-fstype" role="function">
<title>idmef_file_unset_fstype&#160;()</title>
<indexterm zone="idmef-file-unset-fstype"><primary>idmef_file_unset_fstype</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_unset_fstype (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-file-get-fstype" role="function">
<title>idmef_file_get_fstype&#160;()</title>
<indexterm zone="idmef-file-get-fstype"><primary>idmef_file_get_fstype</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-fstype-t"><returnvalue>idmef_file_fstype_t</returnvalue></link>&#160;*
idmef_file_get_fstype (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get fstype children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-fstype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-fstype.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_file_fstype_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-fstype" role="function">
<title>idmef_file_set_fstype&#160;()</title>
<indexterm zone="idmef-file-set-fstype"><primary>idmef_file_set_fstype</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_fstype (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> fstype</parameter>);</programlisting>
<para>Set <parameter>fstype</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>fstype</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>fstype</parameter>
 object.</para>
<refsect3 id="idmef-file-set-fstype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>fstype</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-fstype" role="function">
<title>idmef_file_new_fstype&#160;()</title>
<indexterm zone="idmef-file-new-fstype"><primary>idmef_file_new_fstype</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_fstype (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new fstype object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-fstype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-file-fstype-t"><type>idmef_file_fstype_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-fstype.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-get-file-type" role="function">
<title>idmef_file_get_file_type&#160;()</title>
<indexterm zone="idmef-file-get-file-type"><primary>idmef_file_get_file_type</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_file_get_file_type (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>);</programlisting>
<para>Get file_type children of the <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-file-get-file-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-get-file-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-set-file-type" role="function">
<title>idmef_file_set_file_type&#160;()</title>
<indexterm zone="idmef-file-set-file-type"><primary>idmef_file_set_file_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_file_set_file_type (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *file_type</parameter>);</programlisting>
<para>Set <parameter>file_type</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>file_type</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>file_type</parameter>
 object.</para>
<refsect3 id="idmef-file-set-file-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>file_type</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-new-file-type" role="function">
<title>idmef_file_new_file_type&#160;()</title>
<indexterm zone="idmef-file-new-file-type"><primary>idmef_file_new_file_type</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_new_file_type (<parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new file_type object, children of <link linkend="idmef-file-t"><type>idmef_file_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-file-new-file-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-new-file-type.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-category-to-numeric" role="function">
<title>idmef_linkage_category_to_numeric&#160;()</title>
<indexterm zone="idmef-linkage-category-to-numeric"><primary>idmef_linkage_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-linkage-category-t"><returnvalue>idmef_linkage_category_t</returnvalue></link>
idmef_linkage_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-linkage-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-category-to-string" role="function">
<title>idmef_linkage_category_to_string&#160;()</title>
<indexterm zone="idmef-linkage-category-to-string"><primary>idmef_linkage_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_linkage_category_to_string (<parameter><link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> value.</para>
<refsect3 id="idmef-linkage-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-new" role="function">
<title>idmef_linkage_new&#160;()</title>
<indexterm zone="idmef-linkage-new"><primary>idmef_linkage_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_new (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-linkage-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-copy" role="function">
<title>idmef_linkage_copy&#160;()</title>
<indexterm zone="idmef-linkage-copy"><primary>idmef_linkage_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_copy (<parameter>const <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-linkage-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-clone" role="function">
<title>idmef_linkage_clone&#160;()</title>
<indexterm zone="idmef-linkage-clone"><primary>idmef_linkage_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_clone (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-linkage-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-ref" role="function">
<title>idmef_linkage_ref&#160;()</title>
<indexterm zone="idmef-linkage-ref"><primary>idmef_linkage_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-linkage-t"><returnvalue>idmef_linkage_t</returnvalue></link>&#160;*
idmef_linkage_ref (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *linkage</parameter>);</programlisting>
<para>Increase <parameter>linkage</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-linkage-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>linkage</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>linkage</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-destroy" role="function">
<title>idmef_linkage_destroy&#160;()</title>
<indexterm zone="idmef-linkage-destroy"><primary>idmef_linkage_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_linkage_destroy (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-linkage-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-get-category" role="function">
<title>idmef_linkage_get_category&#160;()</title>
<indexterm zone="idmef-linkage-get-category"><primary>idmef_linkage_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-linkage-category-t"><returnvalue>idmef_linkage_category_t</returnvalue></link>
idmef_linkage_get_category (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-linkage-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_linkage_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-set-category" role="function">
<title>idmef_linkage_set_category&#160;()</title>
<indexterm zone="idmef-linkage-set-category"><primary>idmef_linkage_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_linkage_set_category (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-linkage-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-new-category" role="function">
<title>idmef_linkage_new_category&#160;()</title>
<indexterm zone="idmef-linkage-new-category"><primary>idmef_linkage_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_new_category (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-linkage-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-linkage-category-t"><type>idmef_linkage_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-get-name" role="function">
<title>idmef_linkage_get_name&#160;()</title>
<indexterm zone="idmef-linkage-get-name"><primary>idmef_linkage_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_linkage_get_name (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-linkage-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-set-name" role="function">
<title>idmef_linkage_set_name&#160;()</title>
<indexterm zone="idmef-linkage-set-name"><primary>idmef_linkage_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_linkage_set_name (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-linkage-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-new-name" role="function">
<title>idmef_linkage_new_name&#160;()</title>
<indexterm zone="idmef-linkage-new-name"><primary>idmef_linkage_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_new_name (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-linkage-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-get-path" role="function">
<title>idmef_linkage_get_path&#160;()</title>
<indexterm zone="idmef-linkage-get-path"><primary>idmef_linkage_get_path</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_linkage_get_path (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>);</programlisting>
<para>Get path children of the <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-linkage-get-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-get-path.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-set-path" role="function">
<title>idmef_linkage_set_path&#160;()</title>
<indexterm zone="idmef-linkage-set-path"><primary>idmef_linkage_set_path</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_linkage_set_path (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *path</parameter>);</programlisting>
<para>Set <parameter>path</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>path</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>path</parameter>
 object.</para>
<refsect3 id="idmef-linkage-set-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>path</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-new-path" role="function">
<title>idmef_linkage_new_path&#160;()</title>
<indexterm zone="idmef-linkage-new-path"><primary>idmef_linkage_new_path</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_new_path (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new path object, children of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-linkage-new-path.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-new-path.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-get-file" role="function">
<title>idmef_linkage_get_file&#160;()</title>
<indexterm zone="idmef-linkage-get-file"><primary>idmef_linkage_get_file</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
idmef_linkage_get_file (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>);</programlisting>
<para>Get file children of the <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para>
<refsect3 id="idmef-linkage-get-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-get-file.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_file_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-set-file" role="function">
<title>idmef_linkage_set_file&#160;()</title>
<indexterm zone="idmef-linkage-set-file"><primary>idmef_linkage_set_file</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_linkage_set_file (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file</parameter>);</programlisting>
<para>Set <parameter>file</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>file</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>file</parameter>
 object.</para>
<refsect3 id="idmef-linkage-set-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>file</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-new-file" role="function">
<title>idmef_linkage_new_file&#160;()</title>
<indexterm zone="idmef-linkage-new-file"><primary>idmef_linkage_new_file</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_new_file (<parameter><link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new file object, children of <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-linkage-new-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-new-file.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-decoy-to-numeric" role="function">
<title>idmef_target_decoy_to_numeric&#160;()</title>
<indexterm zone="idmef-target-decoy-to-numeric"><primary>idmef_target_decoy_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-target-decoy-t"><returnvalue>idmef_target_decoy_t</returnvalue></link>
idmef_target_decoy_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-target-decoy-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-decoy-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-decoy-to-string" role="function">
<title>idmef_target_decoy_to_string&#160;()</title>
<indexterm zone="idmef-target-decoy-to-string"><primary>idmef_target_decoy_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_target_decoy_to_string (<parameter><link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> value.</para>
<refsect3 id="idmef-target-decoy-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-decoy-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-new" role="function">
<title>idmef_target_new&#160;()</title>
<indexterm zone="idmef-target-new"><primary>idmef_target_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-copy" role="function">
<title>idmef_target_copy&#160;()</title>
<indexterm zone="idmef-target-copy"><primary>idmef_target_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_copy (<parameter>const <link linkend="idmef-target-t"><type>idmef_target_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-target-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-clone" role="function">
<title>idmef_target_clone&#160;()</title>
<indexterm zone="idmef-target-clone"><primary>idmef_target_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_clone (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-target-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-ref" role="function">
<title>idmef_target_ref&#160;()</title>
<indexterm zone="idmef-target-ref"><primary>idmef_target_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-target-t"><returnvalue>idmef_target_t</returnvalue></link>&#160;*
idmef_target_ref (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *target</parameter>);</programlisting>
<para>Increase <parameter>target</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-target-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>target</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>target</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-destroy" role="function">
<title>idmef_target_destroy&#160;()</title>
<indexterm zone="idmef-target-destroy"><primary>idmef_target_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_destroy (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-target-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-ident" role="function">
<title>idmef_target_get_ident&#160;()</title>
<indexterm zone="idmef-target-get-ident"><primary>idmef_target_get_ident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_target_get_ident (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ident children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-ident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-ident" role="function">
<title>idmef_target_set_ident&#160;()</title>
<indexterm zone="idmef-target-set-ident"><primary>idmef_target_set_ident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_ident (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ident</parameter>);</programlisting>
<para>Set <parameter>ident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ident</parameter>
 object.</para>
<refsect3 id="idmef-target-set-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-ident" role="function">
<title>idmef_target_new_ident&#160;()</title>
<indexterm zone="idmef-target-new-ident"><primary>idmef_target_new_ident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_ident (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ident object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-ident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-ident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-decoy" role="function">
<title>idmef_target_get_decoy&#160;()</title>
<indexterm zone="idmef-target-get-decoy"><primary>idmef_target_get_decoy</primary></indexterm>
<programlisting language="C"><link linkend="idmef-target-decoy-t"><returnvalue>idmef_target_decoy_t</returnvalue></link>
idmef_target_get_decoy (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get decoy children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-decoy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-decoy.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_target_decoy_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-decoy" role="function">
<title>idmef_target_set_decoy&#160;()</title>
<indexterm zone="idmef-target-set-decoy"><primary>idmef_target_set_decoy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_decoy (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> decoy</parameter>);</programlisting>
<para>Set <parameter>decoy</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>decoy</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>decoy</parameter>
 object.</para>
<refsect3 id="idmef-target-set-decoy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>decoy</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-decoy" role="function">
<title>idmef_target_new_decoy&#160;()</title>
<indexterm zone="idmef-target-new-decoy"><primary>idmef_target_new_decoy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_decoy (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new decoy object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-decoy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-target-decoy-t"><type>idmef_target_decoy_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-decoy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-interface" role="function">
<title>idmef_target_get_interface&#160;()</title>
<indexterm zone="idmef-target-get-interface"><primary>idmef_target_get_interface</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_target_get_interface (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get interface children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-interface.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-interface" role="function">
<title>idmef_target_set_interface&#160;()</title>
<indexterm zone="idmef-target-set-interface"><primary>idmef_target_set_interface</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_interface (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *interface</parameter>);</programlisting>
<para>Set <parameter>interface</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>interface</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>interface</parameter>
 object.</para>
<refsect3 id="idmef-target-set-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>interface</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-interface" role="function">
<title>idmef_target_new_interface&#160;()</title>
<indexterm zone="idmef-target-new-interface"><primary>idmef_target_new_interface</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_interface (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new interface object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-interface.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-interface.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-node" role="function">
<title>idmef_target_get_node&#160;()</title>
<indexterm zone="idmef-target-get-node"><primary>idmef_target_get_node</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
idmef_target_get_node (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get node children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-node.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_node_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-node" role="function">
<title>idmef_target_set_node&#160;()</title>
<indexterm zone="idmef-target-set-node"><primary>idmef_target_set_node</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_node (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *node</parameter>);</programlisting>
<para>Set <parameter>node</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>node</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>node</parameter>
 object.</para>
<refsect3 id="idmef-target-set-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-node" role="function">
<title>idmef_target_new_node&#160;()</title>
<indexterm zone="idmef-target-new-node"><primary>idmef_target_new_node</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_node (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new node object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-node.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-user" role="function">
<title>idmef_target_get_user&#160;()</title>
<indexterm zone="idmef-target-get-user"><primary>idmef_target_get_user</primary></indexterm>
<programlisting language="C"><link linkend="idmef-user-t"><returnvalue>idmef_user_t</returnvalue></link>&#160;*
idmef_target_get_user (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get user children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-user.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_user_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-user" role="function">
<title>idmef_target_set_user&#160;()</title>
<indexterm zone="idmef-target-set-user"><primary>idmef_target_set_user</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_user (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> *user</parameter>);</programlisting>
<para>Set <parameter>user</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>user</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>user</parameter>
 object.</para>
<refsect3 id="idmef-target-set-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>user</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-user" role="function">
<title>idmef_target_new_user&#160;()</title>
<indexterm zone="idmef-target-new-user"><primary>idmef_target_new_user</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_user (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-user-t"><type>idmef_user_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new user object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-user.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-user-t"><type>idmef_user_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-user.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-process" role="function">
<title>idmef_target_get_process&#160;()</title>
<indexterm zone="idmef-target-get-process"><primary>idmef_target_get_process</primary></indexterm>
<programlisting language="C"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
idmef_target_get_process (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get process children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-process.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_process_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-process" role="function">
<title>idmef_target_set_process&#160;()</title>
<indexterm zone="idmef-target-set-process"><primary>idmef_target_set_process</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_process (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>);</programlisting>
<para>Set <parameter>process</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>process</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>process</parameter>
 object.</para>
<refsect3 id="idmef-target-set-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-process" role="function">
<title>idmef_target_new_process&#160;()</title>
<indexterm zone="idmef-target-new-process"><primary>idmef_target_new_process</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_process (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new process object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-process.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-service" role="function">
<title>idmef_target_get_service&#160;()</title>
<indexterm zone="idmef-target-get-service"><primary>idmef_target_get_service</primary></indexterm>
<programlisting language="C"><link linkend="idmef-service-t"><returnvalue>idmef_service_t</returnvalue></link>&#160;*
idmef_target_get_service (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>);</programlisting>
<para>Get service children of the <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-target-get-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-service.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_service_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-service" role="function">
<title>idmef_target_set_service&#160;()</title>
<indexterm zone="idmef-target-set-service"><primary>idmef_target_set_service</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_service (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> *service</parameter>);</programlisting>
<para>Set <parameter>service</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>service</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>service</parameter>
 object.</para>
<refsect3 id="idmef-target-set-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>service</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-service" role="function">
<title>idmef_target_new_service&#160;()</title>
<indexterm zone="idmef-target-new-service"><primary>idmef_target_new_service</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_service (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-service-t"><type>idmef_service_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new service object, children of <link linkend="idmef-target-t"><type>idmef_target_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-target-new-service.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-service-t"><type>idmef_service_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-service.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-get-next-file" role="function">
<title>idmef_target_get_next_file&#160;()</title>
<indexterm zone="idmef-target-get-next-file"><primary>idmef_target_get_next_file</primary></indexterm>
<programlisting language="C"><link linkend="idmef-file-t"><returnvalue>idmef_file_t</returnvalue></link>&#160;*
idmef_target_get_next_file (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *target</parameter>,
                            <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *file_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_file_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<refsect3 id="idmef-target-get-next-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>target</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>file_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-get-next-file.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-file-t"><type>idmef_file_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-set-file" role="function">
<title>idmef_target_set_file&#160;()</title>
<indexterm zone="idmef-target-set-file"><primary>idmef_target_set_file</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_target_set_file (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> *object</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-target-set-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-new-file" role="function">
<title>idmef_target_new_file&#160;()</title>
<indexterm zone="idmef-target-new-file"><primary>idmef_target_new_file</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_new_file (<parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-file-t"><type>idmef_file_t</type></link> **ret</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-file-t"><type>idmef_file_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object. The created <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-target-new-file.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-file-t"><type>idmef_file_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-new-file.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new" role="function">
<title>idmef_analyzer_new&#160;()</title>
<indexterm zone="idmef-analyzer-new"><primary>idmef_analyzer_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-copy" role="function">
<title>idmef_analyzer_copy&#160;()</title>
<indexterm zone="idmef-analyzer-copy"><primary>idmef_analyzer_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_copy (<parameter>const <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-analyzer-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-clone" role="function">
<title>idmef_analyzer_clone&#160;()</title>
<indexterm zone="idmef-analyzer-clone"><primary>idmef_analyzer_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_clone (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *src</parameter>,
                      <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-analyzer-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-ref" role="function">
<title>idmef_analyzer_ref&#160;()</title>
<indexterm zone="idmef-analyzer-ref"><primary>idmef_analyzer_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
idmef_analyzer_ref (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *analyzer</parameter>);</programlisting>
<para>Increase <parameter>analyzer</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-analyzer-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>analyzer</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>analyzer</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-destroy" role="function">
<title>idmef_analyzer_destroy&#160;()</title>
<indexterm zone="idmef-analyzer-destroy"><primary>idmef_analyzer_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_destroy (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-analyzer-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-analyzerid" role="function">
<title>idmef_analyzer_get_analyzerid&#160;()</title>
<indexterm zone="idmef-analyzer-get-analyzerid"><primary>idmef_analyzer_get_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_analyzerid (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get analyzerid children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-analyzerid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-analyzerid" role="function">
<title>idmef_analyzer_set_analyzerid&#160;()</title>
<indexterm zone="idmef-analyzer-set-analyzerid"><primary>idmef_analyzer_set_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_analyzerid (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *analyzerid</parameter>);</programlisting>
<para>Set <parameter>analyzerid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>analyzerid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>analyzerid</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzerid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-analyzerid" role="function">
<title>idmef_analyzer_new_analyzerid&#160;()</title>
<indexterm zone="idmef-analyzer-new-analyzerid"><primary>idmef_analyzer_new_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_analyzerid (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new analyzerid object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-analyzerid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-name" role="function">
<title>idmef_analyzer_get_name&#160;()</title>
<indexterm zone="idmef-analyzer-get-name"><primary>idmef_analyzer_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_name (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-name" role="function">
<title>idmef_analyzer_set_name&#160;()</title>
<indexterm zone="idmef-analyzer-set-name"><primary>idmef_analyzer_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_name (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-name" role="function">
<title>idmef_analyzer_new_name&#160;()</title>
<indexterm zone="idmef-analyzer-new-name"><primary>idmef_analyzer_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_name (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-manufacturer" role="function">
<title>idmef_analyzer_get_manufacturer&#160;()</title>
<indexterm zone="idmef-analyzer-get-manufacturer"><primary>idmef_analyzer_get_manufacturer</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_manufacturer (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get manufacturer children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-manufacturer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-manufacturer.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-manufacturer" role="function">
<title>idmef_analyzer_set_manufacturer&#160;()</title>
<indexterm zone="idmef-analyzer-set-manufacturer"><primary>idmef_analyzer_set_manufacturer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_manufacturer (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *manufacturer</parameter>);</programlisting>
<para>Set <parameter>manufacturer</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>manufacturer</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>manufacturer</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-manufacturer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>manufacturer</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-manufacturer" role="function">
<title>idmef_analyzer_new_manufacturer&#160;()</title>
<indexterm zone="idmef-analyzer-new-manufacturer"><primary>idmef_analyzer_new_manufacturer</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_manufacturer (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new manufacturer object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-manufacturer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-manufacturer.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-model" role="function">
<title>idmef_analyzer_get_model&#160;()</title>
<indexterm zone="idmef-analyzer-get-model"><primary>idmef_analyzer_get_model</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_model (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get model children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-model.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-model" role="function">
<title>idmef_analyzer_set_model&#160;()</title>
<indexterm zone="idmef-analyzer-set-model"><primary>idmef_analyzer_set_model</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_model (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *model</parameter>);</programlisting>
<para>Set <parameter>model</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>model</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>model</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>model</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-model" role="function">
<title>idmef_analyzer_new_model&#160;()</title>
<indexterm zone="idmef-analyzer-new-model"><primary>idmef_analyzer_new_model</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_model (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new model object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-model.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-model.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-version" role="function">
<title>idmef_analyzer_get_version&#160;()</title>
<indexterm zone="idmef-analyzer-get-version"><primary>idmef_analyzer_get_version</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_version (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get version children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-version.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-version" role="function">
<title>idmef_analyzer_set_version&#160;()</title>
<indexterm zone="idmef-analyzer-set-version"><primary>idmef_analyzer_set_version</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_version (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *version</parameter>);</programlisting>
<para>Set <parameter>version</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>version</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>version</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>version</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-version" role="function">
<title>idmef_analyzer_new_version&#160;()</title>
<indexterm zone="idmef-analyzer-new-version"><primary>idmef_analyzer_new_version</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_version (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new version object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-version.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-class" role="function">
<title>idmef_analyzer_get_class&#160;()</title>
<indexterm zone="idmef-analyzer-get-class"><primary>idmef_analyzer_get_class</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_class (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get class children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-class.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-class.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-class" role="function">
<title>idmef_analyzer_set_class&#160;()</title>
<indexterm zone="idmef-analyzer-set-class"><primary>idmef_analyzer_set_class</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_class (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *class_str</parameter>);</programlisting>
<para>Set <parameter>class_str</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>class_str</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>class_str</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-class.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>class_str</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-class" role="function">
<title>idmef_analyzer_new_class&#160;()</title>
<indexterm zone="idmef-analyzer-new-class"><primary>idmef_analyzer_new_class</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_class (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new class object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-class.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-class.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-ostype" role="function">
<title>idmef_analyzer_get_ostype&#160;()</title>
<indexterm zone="idmef-analyzer-get-ostype"><primary>idmef_analyzer_get_ostype</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_ostype (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get ostype children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-ostype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-ostype.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-ostype" role="function">
<title>idmef_analyzer_set_ostype&#160;()</title>
<indexterm zone="idmef-analyzer-set-ostype"><primary>idmef_analyzer_set_ostype</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_ostype (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *ostype</parameter>);</programlisting>
<para>Set <parameter>ostype</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>ostype</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>ostype</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-ostype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ostype</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-ostype" role="function">
<title>idmef_analyzer_new_ostype&#160;()</title>
<indexterm zone="idmef-analyzer-new-ostype"><primary>idmef_analyzer_new_ostype</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_ostype (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new ostype object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-ostype.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-ostype.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-osversion" role="function">
<title>idmef_analyzer_get_osversion&#160;()</title>
<indexterm zone="idmef-analyzer-get-osversion"><primary>idmef_analyzer_get_osversion</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_analyzer_get_osversion (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get osversion children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-osversion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-osversion.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-osversion" role="function">
<title>idmef_analyzer_set_osversion&#160;()</title>
<indexterm zone="idmef-analyzer-set-osversion"><primary>idmef_analyzer_set_osversion</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_osversion (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *osversion</parameter>);</programlisting>
<para>Set <parameter>osversion</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>osversion</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>osversion</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-osversion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>osversion</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-osversion" role="function">
<title>idmef_analyzer_new_osversion&#160;()</title>
<indexterm zone="idmef-analyzer-new-osversion"><primary>idmef_analyzer_new_osversion</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_osversion (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new osversion object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-osversion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-osversion.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-node" role="function">
<title>idmef_analyzer_get_node&#160;()</title>
<indexterm zone="idmef-analyzer-get-node"><primary>idmef_analyzer_get_node</primary></indexterm>
<programlisting language="C"><link linkend="idmef-node-t"><returnvalue>idmef_node_t</returnvalue></link>&#160;*
idmef_analyzer_get_node (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get node children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-node.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_node_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-node" role="function">
<title>idmef_analyzer_set_node&#160;()</title>
<indexterm zone="idmef-analyzer-set-node"><primary>idmef_analyzer_set_node</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_node (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> *node</parameter>);</programlisting>
<para>Set <parameter>node</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>node</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>node</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-node" role="function">
<title>idmef_analyzer_new_node&#160;()</title>
<indexterm zone="idmef-analyzer-new-node"><primary>idmef_analyzer_new_node</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_node (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-node-t"><type>idmef_node_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new node object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-node.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-node-t"><type>idmef_node_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-node.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-get-process" role="function">
<title>idmef_analyzer_get_process&#160;()</title>
<indexterm zone="idmef-analyzer-get-process"><primary>idmef_analyzer_get_process</primary></indexterm>
<programlisting language="C"><link linkend="idmef-process-t"><returnvalue>idmef_process_t</returnvalue></link>&#160;*
idmef_analyzer_get_process (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>);</programlisting>
<para>Get process children of the <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-analyzer-get-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-get-process.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_process_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-set-process" role="function">
<title>idmef_analyzer_set_process&#160;()</title>
<indexterm zone="idmef-analyzer-set-process"><primary>idmef_analyzer_set_process</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_analyzer_set_process (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> *process</parameter>);</programlisting>
<para>Set <parameter>process</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>process</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>process</parameter>
 object.</para>
<refsect3 id="idmef-analyzer-set-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>process</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-new-process" role="function">
<title>idmef_analyzer_new_process&#160;()</title>
<indexterm zone="idmef-analyzer-new-process"><primary>idmef_analyzer_new_process</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_new_process (<parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-process-t"><type>idmef_process_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new process object, children of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-analyzer-new-process.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-process-t"><type>idmef_process_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-new-process.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-new" role="function">
<title>idmef_alertident_new&#160;()</title>
<indexterm zone="idmef-alertident-new"><primary>idmef_alertident_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_new (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<refsect3 id="idmef-alertident-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-copy" role="function">
<title>idmef_alertident_copy&#160;()</title>
<indexterm zone="idmef-alertident-copy"><primary>idmef_alertident_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_copy (<parameter>const <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-alertident-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-clone" role="function">
<title>idmef_alertident_clone&#160;()</title>
<indexterm zone="idmef-alertident-clone"><primary>idmef_alertident_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_clone (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-alertident-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-ref" role="function">
<title>idmef_alertident_ref&#160;()</title>
<indexterm zone="idmef-alertident-ref"><primary>idmef_alertident_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
idmef_alertident_ref (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *alertident</parameter>);</programlisting>
<para>Increase <parameter>alertident</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-alertident-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alertident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>alertident</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-destroy" role="function">
<title>idmef_alertident_destroy&#160;()</title>
<indexterm zone="idmef-alertident-destroy"><primary>idmef_alertident_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alertident_destroy (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-alertident-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-get-alertident" role="function">
<title>idmef_alertident_get_alertident&#160;()</title>
<indexterm zone="idmef-alertident-get-alertident"><primary>idmef_alertident_get_alertident</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_alertident_get_alertident (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>);</programlisting>
<para>Get alertident children of the <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<refsect3 id="idmef-alertident-get-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-get-alertident.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-set-alertident" role="function">
<title>idmef_alertident_set_alertident&#160;()</title>
<indexterm zone="idmef-alertident-set-alertident"><primary>idmef_alertident_set_alertident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alertident_set_alertident (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *alertident</parameter>);</programlisting>
<para>Set <parameter>alertident</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>alertident</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>alertident</parameter>
 object.</para>
<refsect3 id="idmef-alertident-set-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>alertident</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-new-alertident" role="function">
<title>idmef_alertident_new_alertident&#160;()</title>
<indexterm zone="idmef-alertident-new-alertident"><primary>idmef_alertident_new_alertident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_new_alertident (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new alertident object, children of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alertident-new-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-new-alertident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-get-analyzerid" role="function">
<title>idmef_alertident_get_analyzerid&#160;()</title>
<indexterm zone="idmef-alertident-get-analyzerid"><primary>idmef_alertident_get_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_alertident_get_analyzerid (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>);</programlisting>
<para>Get analyzerid children of the <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<refsect3 id="idmef-alertident-get-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-get-analyzerid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-set-analyzerid" role="function">
<title>idmef_alertident_set_analyzerid&#160;()</title>
<indexterm zone="idmef-alertident-set-analyzerid"><primary>idmef_alertident_set_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alertident_set_analyzerid (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *analyzerid</parameter>);</programlisting>
<para>Set <parameter>analyzerid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>analyzerid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>analyzerid</parameter>
 object.</para>
<refsect3 id="idmef-alertident-set-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzerid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-new-analyzerid" role="function">
<title>idmef_alertident_new_analyzerid&#160;()</title>
<indexterm zone="idmef-alertident-new-analyzerid"><primary>idmef_alertident_new_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_new_analyzerid (<parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new analyzerid object, children of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alertident-new-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-new-analyzerid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-severity-to-numeric" role="function">
<title>idmef_impact_severity_to_numeric&#160;()</title>
<indexterm zone="idmef-impact-severity-to-numeric"><primary>idmef_impact_severity_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-severity-t"><returnvalue>idmef_impact_severity_t</returnvalue></link>
idmef_impact_severity_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-impact-severity-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-severity-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-severity-to-string" role="function">
<title>idmef_impact_severity_to_string&#160;()</title>
<indexterm zone="idmef-impact-severity-to-string"><primary>idmef_impact_severity_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_impact_severity_to_string (<parameter><link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> value.</para>
<refsect3 id="idmef-impact-severity-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-severity-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-completion-to-numeric" role="function">
<title>idmef_impact_completion_to_numeric&#160;()</title>
<indexterm zone="idmef-impact-completion-to-numeric"><primary>idmef_impact_completion_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-completion-t"><returnvalue>idmef_impact_completion_t</returnvalue></link>
idmef_impact_completion_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-impact-completion-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-completion-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-completion-to-string" role="function">
<title>idmef_impact_completion_to_string&#160;()</title>
<indexterm zone="idmef-impact-completion-to-string"><primary>idmef_impact_completion_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_impact_completion_to_string (<parameter><link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> value.</para>
<refsect3 id="idmef-impact-completion-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-completion-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-type-to-numeric" role="function">
<title>idmef_impact_type_to_numeric&#160;()</title>
<indexterm zone="idmef-impact-type-to-numeric"><primary>idmef_impact_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-type-t"><returnvalue>idmef_impact_type_t</returnvalue></link>
idmef_impact_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-impact-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-type-to-string" role="function">
<title>idmef_impact_type_to_string&#160;()</title>
<indexterm zone="idmef-impact-type-to-string"><primary>idmef_impact_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_impact_type_to_string (<parameter><link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> value.</para>
<refsect3 id="idmef-impact-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-new" role="function">
<title>idmef_impact_new&#160;()</title>
<indexterm zone="idmef-impact-new"><primary>idmef_impact_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_new (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para>
<refsect3 id="idmef-impact-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-copy" role="function">
<title>idmef_impact_copy&#160;()</title>
<indexterm zone="idmef-impact-copy"><primary>idmef_impact_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_copy (<parameter>const <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-impact-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-clone" role="function">
<title>idmef_impact_clone&#160;()</title>
<indexterm zone="idmef-impact-clone"><primary>idmef_impact_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_clone (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-impact-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-ref" role="function">
<title>idmef_impact_ref&#160;()</title>
<indexterm zone="idmef-impact-ref"><primary>idmef_impact_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-t"><returnvalue>idmef_impact_t</returnvalue></link>&#160;*
idmef_impact_ref (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *impact</parameter>);</programlisting>
<para>Increase <parameter>impact</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-impact-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>impact</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>impact</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-destroy" role="function">
<title>idmef_impact_destroy&#160;()</title>
<indexterm zone="idmef-impact-destroy"><primary>idmef_impact_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_destroy (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-impact-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-unset-severity" role="function">
<title>idmef_impact_unset_severity&#160;()</title>
<indexterm zone="idmef-impact-unset-severity"><primary>idmef_impact_unset_severity</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_unset_severity (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-impact-get-severity" role="function">
<title>idmef_impact_get_severity&#160;()</title>
<indexterm zone="idmef-impact-get-severity"><primary>idmef_impact_get_severity</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-severity-t"><returnvalue>idmef_impact_severity_t</returnvalue></link>&#160;*
idmef_impact_get_severity (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
<para>Get severity children of the <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para>
<refsect3 id="idmef-impact-get-severity.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-get-severity.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_impact_severity_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-set-severity" role="function">
<title>idmef_impact_set_severity&#160;()</title>
<indexterm zone="idmef-impact-set-severity"><primary>idmef_impact_set_severity</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_set_severity (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> severity</parameter>);</programlisting>
<para>Set <parameter>severity</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>severity</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>severity</parameter>
 object.</para>
<refsect3 id="idmef-impact-set-severity.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>severity</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-new-severity" role="function">
<title>idmef_impact_new_severity&#160;()</title>
<indexterm zone="idmef-impact-new-severity"><primary>idmef_impact_new_severity</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_new_severity (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new severity object, children of <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-impact-new-severity.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-impact-severity-t"><type>idmef_impact_severity_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-new-severity.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-unset-completion" role="function">
<title>idmef_impact_unset_completion&#160;()</title>
<indexterm zone="idmef-impact-unset-completion"><primary>idmef_impact_unset_completion</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_unset_completion (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-impact-get-completion" role="function">
<title>idmef_impact_get_completion&#160;()</title>
<indexterm zone="idmef-impact-get-completion"><primary>idmef_impact_get_completion</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-completion-t"><returnvalue>idmef_impact_completion_t</returnvalue></link>&#160;*
idmef_impact_get_completion (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
<para>Get completion children of the <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para>
<refsect3 id="idmef-impact-get-completion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-get-completion.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_impact_completion_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-set-completion" role="function">
<title>idmef_impact_set_completion&#160;()</title>
<indexterm zone="idmef-impact-set-completion"><primary>idmef_impact_set_completion</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_set_completion (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> completion</parameter>);</programlisting>
<para>Set <parameter>completion</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>completion</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>completion</parameter>
 object.</para>
<refsect3 id="idmef-impact-set-completion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>completion</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-new-completion" role="function">
<title>idmef_impact_new_completion&#160;()</title>
<indexterm zone="idmef-impact-new-completion"><primary>idmef_impact_new_completion</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_new_completion (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new completion object, children of <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-impact-new-completion.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-impact-completion-t"><type>idmef_impact_completion_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-new-completion.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-get-type" role="function">
<title>idmef_impact_get_type&#160;()</title>
<indexterm zone="idmef-impact-get-type"><primary>idmef_impact_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-type-t"><returnvalue>idmef_impact_type_t</returnvalue></link>
idmef_impact_get_type (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
<para>Get type children of the <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para>
<refsect3 id="idmef-impact-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_impact_type_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-set-type" role="function">
<title>idmef_impact_set_type&#160;()</title>
<indexterm zone="idmef-impact-set-type"><primary>idmef_impact_set_type</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_set_type (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> type</parameter>);</programlisting>
<para>Set <parameter>type</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>type</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>type</parameter>
 object.</para>
<refsect3 id="idmef-impact-set-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-new-type" role="function">
<title>idmef_impact_new_type&#160;()</title>
<indexterm zone="idmef-impact-new-type"><primary>idmef_impact_new_type</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_new_type (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                       <parameter><link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new type object, children of <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-impact-new-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-impact-type-t"><type>idmef_impact_type_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-new-type.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-get-description" role="function">
<title>idmef_impact_get_description&#160;()</title>
<indexterm zone="idmef-impact-get-description"><primary>idmef_impact_get_description</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_impact_get_description (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>);</programlisting>
<para>Get description children of the <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para>
<refsect3 id="idmef-impact-get-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-get-description.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-set-description" role="function">
<title>idmef_impact_set_description&#160;()</title>
<indexterm zone="idmef-impact-set-description"><primary>idmef_impact_set_description</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_impact_set_description (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *description</parameter>);</programlisting>
<para>Set <parameter>description</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>description</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>description</parameter>
 object.</para>
<refsect3 id="idmef-impact-set-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>description</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-new-description" role="function">
<title>idmef_impact_new_description&#160;()</title>
<indexterm zone="idmef-impact-new-description"><primary>idmef_impact_new_description</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_new_description (<parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new description object, children of <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-impact-new-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-new-description.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-category-to-numeric" role="function">
<title>idmef_action_category_to_numeric&#160;()</title>
<indexterm zone="idmef-action-category-to-numeric"><primary>idmef_action_category_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-action-category-t"><returnvalue>idmef_action_category_t</returnvalue></link>
idmef_action_category_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-action-category-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-category-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-category-to-string" role="function">
<title>idmef_action_category_to_string&#160;()</title>
<indexterm zone="idmef-action-category-to-string"><primary>idmef_action_category_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_action_category_to_string (<parameter><link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> value.</para>
<refsect3 id="idmef-action-category-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-category-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-new" role="function">
<title>idmef_action_new&#160;()</title>
<indexterm zone="idmef-action-new"><primary>idmef_action_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_new (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para>
<refsect3 id="idmef-action-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-copy" role="function">
<title>idmef_action_copy&#160;()</title>
<indexterm zone="idmef-action-copy"><primary>idmef_action_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_copy (<parameter>const <link linkend="idmef-action-t"><type>idmef_action_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-action-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-clone" role="function">
<title>idmef_action_clone&#160;()</title>
<indexterm zone="idmef-action-clone"><primary>idmef_action_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_clone (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-action-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-ref" role="function">
<title>idmef_action_ref&#160;()</title>
<indexterm zone="idmef-action-ref"><primary>idmef_action_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-action-t"><returnvalue>idmef_action_t</returnvalue></link>&#160;*
idmef_action_ref (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *action</parameter>);</programlisting>
<para>Increase <parameter>action</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-action-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>action</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>action</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-destroy" role="function">
<title>idmef_action_destroy&#160;()</title>
<indexterm zone="idmef-action-destroy"><primary>idmef_action_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_action_destroy (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-action-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-action-get-category" role="function">
<title>idmef_action_get_category&#160;()</title>
<indexterm zone="idmef-action-get-category"><primary>idmef_action_get_category</primary></indexterm>
<programlisting language="C"><link linkend="idmef-action-category-t"><returnvalue>idmef_action_category_t</returnvalue></link>
idmef_action_get_category (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>);</programlisting>
<para>Get category children of the <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para>
<refsect3 id="idmef-action-get-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-get-category.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_action_category_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-set-category" role="function">
<title>idmef_action_set_category&#160;()</title>
<indexterm zone="idmef-action-set-category"><primary>idmef_action_set_category</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_action_set_category (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> category</parameter>);</programlisting>
<para>Set <parameter>category</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>category</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>category</parameter>
 object.</para>
<refsect3 id="idmef-action-set-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>category</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-action-new-category" role="function">
<title>idmef_action_new_category&#160;()</title>
<indexterm zone="idmef-action-new-category"><primary>idmef_action_new_category</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_new_category (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new category object, children of <link linkend="idmef-action-t"><type>idmef_action_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-action-new-category.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-action-category-t"><type>idmef_action_category_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-new-category.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-get-description" role="function">
<title>idmef_action_get_description&#160;()</title>
<indexterm zone="idmef-action-get-description"><primary>idmef_action_get_description</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_action_get_description (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>);</programlisting>
<para>Get description children of the <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para>
<refsect3 id="idmef-action-get-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-get-description.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-action-set-description" role="function">
<title>idmef_action_set_description&#160;()</title>
<indexterm zone="idmef-action-set-description"><primary>idmef_action_set_description</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_action_set_description (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *description</parameter>);</programlisting>
<para>Set <parameter>description</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>description</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>description</parameter>
 object.</para>
<refsect3 id="idmef-action-set-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>description</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-action-new-description" role="function">
<title>idmef_action_new_description&#160;()</title>
<indexterm zone="idmef-action-new-description"><primary>idmef_action_new_description</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_new_description (<parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new description object, children of <link linkend="idmef-action-t"><type>idmef_action_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-action-new-description.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-new-description.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-rating-to-numeric" role="function">
<title>idmef_confidence_rating_to_numeric&#160;()</title>
<indexterm zone="idmef-confidence-rating-to-numeric"><primary>idmef_confidence_rating_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-confidence-rating-t"><returnvalue>idmef_confidence_rating_t</returnvalue></link>
idmef_confidence_rating_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-confidence-rating-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-rating-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-rating-to-string" role="function">
<title>idmef_confidence_rating_to_string&#160;()</title>
<indexterm zone="idmef-confidence-rating-to-string"><primary>idmef_confidence_rating_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_confidence_rating_to_string (<parameter><link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> value.</para>
<refsect3 id="idmef-confidence-rating-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-rating-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-new" role="function">
<title>idmef_confidence_new&#160;()</title>
<indexterm zone="idmef-confidence-new"><primary>idmef_confidence_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_new (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para>
<refsect3 id="idmef-confidence-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-copy" role="function">
<title>idmef_confidence_copy&#160;()</title>
<indexterm zone="idmef-confidence-copy"><primary>idmef_confidence_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_copy (<parameter>const <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-confidence-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-clone" role="function">
<title>idmef_confidence_clone&#160;()</title>
<indexterm zone="idmef-confidence-clone"><primary>idmef_confidence_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_clone (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-confidence-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-ref" role="function">
<title>idmef_confidence_ref&#160;()</title>
<indexterm zone="idmef-confidence-ref"><primary>idmef_confidence_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-confidence-t"><returnvalue>idmef_confidence_t</returnvalue></link>&#160;*
idmef_confidence_ref (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *confidence</parameter>);</programlisting>
<para>Increase <parameter>confidence</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-confidence-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>confidence</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>confidence</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-destroy" role="function">
<title>idmef_confidence_destroy&#160;()</title>
<indexterm zone="idmef-confidence-destroy"><primary>idmef_confidence_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_confidence_destroy (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-confidence-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-get-rating" role="function">
<title>idmef_confidence_get_rating&#160;()</title>
<indexterm zone="idmef-confidence-get-rating"><primary>idmef_confidence_get_rating</primary></indexterm>
<programlisting language="C"><link linkend="idmef-confidence-rating-t"><returnvalue>idmef_confidence_rating_t</returnvalue></link>
idmef_confidence_get_rating (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>);</programlisting>
<para>Get rating children of the <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para>
<refsect3 id="idmef-confidence-get-rating.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-get-rating.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_confidence_rating_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-set-rating" role="function">
<title>idmef_confidence_set_rating&#160;()</title>
<indexterm zone="idmef-confidence-set-rating"><primary>idmef_confidence_set_rating</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_confidence_set_rating (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> rating</parameter>);</programlisting>
<para>Set <parameter>rating</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>rating</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>rating</parameter>
 object.</para>
<refsect3 id="idmef-confidence-set-rating.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>rating</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-new-rating" role="function">
<title>idmef_confidence_new_rating&#160;()</title>
<indexterm zone="idmef-confidence-new-rating"><primary>idmef_confidence_new_rating</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_new_rating (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new rating object, children of <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-confidence-new-rating.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-confidence-rating-t"><type>idmef_confidence_rating_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-new-rating.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-get-confidence" role="function">
<title>idmef_confidence_get_confidence&#160;()</title>
<indexterm zone="idmef-confidence-get-confidence"><primary>idmef_confidence_get_confidence</primary></indexterm>
<programlisting language="C"><link linkend="float"><returnvalue>float</returnvalue></link>
idmef_confidence_get_confidence (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>);</programlisting>
<para>Get confidence children of the <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para>
<refsect3 id="idmef-confidence-get-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-get-confidence.returns" role="returns">
<title>Returns</title>
<para> a pointer to a float object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-set-confidence" role="function">
<title>idmef_confidence_set_confidence&#160;()</title>
<indexterm zone="idmef-confidence-set-confidence"><primary>idmef_confidence_set_confidence</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_confidence_set_confidence (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="float"><type>float</type></link> confidence</parameter>);</programlisting>
<para>Set <parameter>confidence</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>confidence</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>confidence</parameter>
 object.</para>
<refsect3 id="idmef-confidence-set-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>confidence</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="float"><type>float</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-new-confidence" role="function">
<title>idmef_confidence_new_confidence&#160;()</title>
<indexterm zone="idmef-confidence-new-confidence"><primary>idmef_confidence_new_confidence</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_new_confidence (<parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="float"><type>float</type></link> **ret</parameter>);</programlisting>
<para>Create a new confidence object, children of <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="float"><type>float</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-confidence-new-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="float"><type>float</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-new-confidence.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-new" role="function">
<title>idmef_assessment_new&#160;()</title>
<indexterm zone="idmef-assessment-new"><primary>idmef_assessment_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_new (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para>
<refsect3 id="idmef-assessment-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-copy" role="function">
<title>idmef_assessment_copy&#160;()</title>
<indexterm zone="idmef-assessment-copy"><primary>idmef_assessment_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_copy (<parameter>const <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-assessment-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-clone" role="function">
<title>idmef_assessment_clone&#160;()</title>
<indexterm zone="idmef-assessment-clone"><primary>idmef_assessment_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_clone (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-assessment-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-ref" role="function">
<title>idmef_assessment_ref&#160;()</title>
<indexterm zone="idmef-assessment-ref"><primary>idmef_assessment_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-assessment-t"><returnvalue>idmef_assessment_t</returnvalue></link>&#160;*
idmef_assessment_ref (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *assessment</parameter>);</programlisting>
<para>Increase <parameter>assessment</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-assessment-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>assessment</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>assessment</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-destroy" role="function">
<title>idmef_assessment_destroy&#160;()</title>
<indexterm zone="idmef-assessment-destroy"><primary>idmef_assessment_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_assessment_destroy (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-assessment-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-get-impact" role="function">
<title>idmef_assessment_get_impact&#160;()</title>
<indexterm zone="idmef-assessment-get-impact"><primary>idmef_assessment_get_impact</primary></indexterm>
<programlisting language="C"><link linkend="idmef-impact-t"><returnvalue>idmef_impact_t</returnvalue></link>&#160;*
idmef_assessment_get_impact (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>);</programlisting>
<para>Get impact children of the <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para>
<refsect3 id="idmef-assessment-get-impact.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-get-impact.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_impact_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-set-impact" role="function">
<title>idmef_assessment_set_impact&#160;()</title>
<indexterm zone="idmef-assessment-set-impact"><primary>idmef_assessment_set_impact</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_assessment_set_impact (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *impact</parameter>);</programlisting>
<para>Set <parameter>impact</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>impact</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>impact</parameter>
 object.</para>
<refsect3 id="idmef-assessment-set-impact.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>impact</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-new-impact" role="function">
<title>idmef_assessment_new_impact&#160;()</title>
<indexterm zone="idmef-assessment-new-impact"><primary>idmef_assessment_new_impact</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_new_impact (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new impact object, children of <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-assessment-new-impact.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-new-impact.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-get-next-action" role="function">
<title>idmef_assessment_get_next_action&#160;()</title>
<indexterm zone="idmef-assessment-get-next-action"><primary>idmef_assessment_get_next_action</primary></indexterm>
<programlisting language="C"><link linkend="idmef-action-t"><returnvalue>idmef_action_t</returnvalue></link>&#160;*
idmef_assessment_get_next_action (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *assessment</parameter>,
                                  <parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *action_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_action_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para>
<refsect3 id="idmef-assessment-get-next-action.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>assessment</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>action_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-get-next-action.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-action-t"><type>idmef_action_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-set-action" role="function">
<title>idmef_assessment_set_action&#160;()</title>
<indexterm zone="idmef-assessment-set-action"><primary>idmef_assessment_set_action</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_assessment_set_action (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> *object</parameter>,
                             <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-assessment-set-action.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-new-action" role="function">
<title>idmef_assessment_new_action&#160;()</title>
<indexterm zone="idmef-assessment-new-action"><primary>idmef_assessment_new_action</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_new_action (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-action-t"><type>idmef_action_t</type></link> **ret</parameter>,
                             <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-action-t"><type>idmef_action_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object. The created <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-assessment-new-action.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-action-t"><type>idmef_action_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-new-action.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-get-confidence" role="function">
<title>idmef_assessment_get_confidence&#160;()</title>
<indexterm zone="idmef-assessment-get-confidence"><primary>idmef_assessment_get_confidence</primary></indexterm>
<programlisting language="C"><link linkend="idmef-confidence-t"><returnvalue>idmef_confidence_t</returnvalue></link>&#160;*
idmef_assessment_get_confidence (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>);</programlisting>
<para>Get confidence children of the <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para>
<refsect3 id="idmef-assessment-get-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-get-confidence.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_confidence_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-set-confidence" role="function">
<title>idmef_assessment_set_confidence&#160;()</title>
<indexterm zone="idmef-assessment-set-confidence"><primary>idmef_assessment_set_confidence</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_assessment_set_confidence (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *confidence</parameter>);</programlisting>
<para>Set <parameter>confidence</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>confidence</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>confidence</parameter>
 object.</para>
<refsect3 id="idmef-assessment-set-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>confidence</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-new-confidence" role="function">
<title>idmef_assessment_new_confidence&#160;()</title>
<indexterm zone="idmef-assessment-new-confidence"><primary>idmef_assessment_new_confidence</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_new_confidence (<parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new confidence object, children of <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-assessment-new-confidence.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-new-confidence.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-new" role="function">
<title>idmef_tool_alert_new&#160;()</title>
<indexterm zone="idmef-tool-alert-new"><primary>idmef_tool_alert_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_new (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para>
<refsect3 id="idmef-tool-alert-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-copy" role="function">
<title>idmef_tool_alert_copy&#160;()</title>
<indexterm zone="idmef-tool-alert-copy"><primary>idmef_tool_alert_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_copy (<parameter>const <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-tool-alert-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-clone" role="function">
<title>idmef_tool_alert_clone&#160;()</title>
<indexterm zone="idmef-tool-alert-clone"><primary>idmef_tool_alert_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_clone (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *src</parameter>,
                        <parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-tool-alert-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-ref" role="function">
<title>idmef_tool_alert_ref&#160;()</title>
<indexterm zone="idmef-tool-alert-ref"><primary>idmef_tool_alert_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-tool-alert-t"><returnvalue>idmef_tool_alert_t</returnvalue></link>&#160;*
idmef_tool_alert_ref (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *tool_alert</parameter>);</programlisting>
<para>Increase <parameter>tool_alert</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-tool-alert-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>tool_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>tool_alert</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-destroy" role="function">
<title>idmef_tool_alert_destroy&#160;()</title>
<indexterm zone="idmef-tool-alert-destroy"><primary>idmef_tool_alert_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_tool_alert_destroy (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-tool-alert-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-get-name" role="function">
<title>idmef_tool_alert_get_name&#160;()</title>
<indexterm zone="idmef-tool-alert-get-name"><primary>idmef_tool_alert_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_tool_alert_get_name (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para>
<refsect3 id="idmef-tool-alert-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-set-name" role="function">
<title>idmef_tool_alert_set_name&#160;()</title>
<indexterm zone="idmef-tool-alert-set-name"><primary>idmef_tool_alert_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_tool_alert_set_name (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-tool-alert-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-new-name" role="function">
<title>idmef_tool_alert_new_name&#160;()</title>
<indexterm zone="idmef-tool-alert-new-name"><primary>idmef_tool_alert_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_new_name (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-tool-alert-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-get-command" role="function">
<title>idmef_tool_alert_get_command&#160;()</title>
<indexterm zone="idmef-tool-alert-get-command"><primary>idmef_tool_alert_get_command</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_tool_alert_get_command (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get command children of the <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para>
<refsect3 id="idmef-tool-alert-get-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-get-command.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-set-command" role="function">
<title>idmef_tool_alert_set_command&#160;()</title>
<indexterm zone="idmef-tool-alert-set-command"><primary>idmef_tool_alert_set_command</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_tool_alert_set_command (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *command</parameter>);</programlisting>
<para>Set <parameter>command</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>command</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>command</parameter>
 object.</para>
<refsect3 id="idmef-tool-alert-set-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>command</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-new-command" role="function">
<title>idmef_tool_alert_new_command&#160;()</title>
<indexterm zone="idmef-tool-alert-new-command"><primary>idmef_tool_alert_new_command</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_new_command (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new command object, children of <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-tool-alert-new-command.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-new-command.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-get-next-alertident" role="function">
<title>idmef_tool_alert_get_next_alertident&#160;()</title>
<indexterm zone="idmef-tool-alert-get-next-alertident"><primary>idmef_tool_alert_get_next_alertident</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
idmef_tool_alert_get_next_alertident (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *tool_alert</parameter>,
                                      <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *alertident_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_alertident_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<refsect3 id="idmef-tool-alert-get-next-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>tool_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>alertident_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-get-next-alertident.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-set-alertident" role="function">
<title>idmef_tool_alert_set_alertident&#160;()</title>
<indexterm zone="idmef-tool-alert-set-alertident"><primary>idmef_tool_alert_set_alertident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_tool_alert_set_alertident (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *object</parameter>,
                                 <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-tool-alert-set-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-new-alertident" role="function">
<title>idmef_tool_alert_new_alertident&#160;()</title>
<indexterm zone="idmef-tool-alert-new-alertident"><primary>idmef_tool_alert_new_alertident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_new_alertident (<parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> **ret</parameter>,
                                 <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object. The created <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-tool-alert-new-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-new-alertident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-new" role="function">
<title>idmef_correlation_alert_new&#160;()</title>
<indexterm zone="idmef-correlation-alert-new"><primary>idmef_correlation_alert_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_new (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para>
<refsect3 id="idmef-correlation-alert-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-copy" role="function">
<title>idmef_correlation_alert_copy&#160;()</title>
<indexterm zone="idmef-correlation-alert-copy"><primary>idmef_correlation_alert_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_copy (<parameter>const <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *src</parameter>,
                              <parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-correlation-alert-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-clone" role="function">
<title>idmef_correlation_alert_clone&#160;()</title>
<indexterm zone="idmef-correlation-alert-clone"><primary>idmef_correlation_alert_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_clone (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *src</parameter>,
                               <parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-correlation-alert-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-ref" role="function">
<title>idmef_correlation_alert_ref&#160;()</title>
<indexterm zone="idmef-correlation-alert-ref"><primary>idmef_correlation_alert_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-correlation-alert-t"><returnvalue>idmef_correlation_alert_t</returnvalue></link>&#160;*
idmef_correlation_alert_ref (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *correlation_alert</parameter>);</programlisting>
<para>Increase <parameter>correlation_alert</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-correlation-alert-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>correlation_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>correlation_alert</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-destroy" role="function">
<title>idmef_correlation_alert_destroy&#160;()</title>
<indexterm zone="idmef-correlation-alert-destroy"><primary>idmef_correlation_alert_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_correlation_alert_destroy (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-correlation-alert-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-get-name" role="function">
<title>idmef_correlation_alert_get_name&#160;()</title>
<indexterm zone="idmef-correlation-alert-get-name"><primary>idmef_correlation_alert_get_name</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_correlation_alert_get_name (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get name children of the <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para>
<refsect3 id="idmef-correlation-alert-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-get-name.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-set-name" role="function">
<title>idmef_correlation_alert_set_name&#160;()</title>
<indexterm zone="idmef-correlation-alert-set-name"><primary>idmef_correlation_alert_set_name</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_correlation_alert_set_name (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *name</parameter>);</programlisting>
<para>Set <parameter>name</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>name</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>name</parameter>
 object.</para>
<refsect3 id="idmef-correlation-alert-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-new-name" role="function">
<title>idmef_correlation_alert_new_name&#160;()</title>
<indexterm zone="idmef-correlation-alert-new-name"><primary>idmef_correlation_alert_new_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_new_name (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new name object, children of <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-correlation-alert-new-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-new-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-get-next-alertident" role="function">
<title>idmef_correlation_alert_get_next_alertident&#160;()</title>
<indexterm zone="idmef-correlation-alert-get-next-alertident"><primary>idmef_correlation_alert_get_next_alertident</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alertident-t"><returnvalue>idmef_alertident_t</returnvalue></link>&#160;*
idmef_correlation_alert_get_next_alertident
                               (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *correlation_alert</parameter>,
                                <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *alertident_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_alertident_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<refsect3 id="idmef-correlation-alert-get-next-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>correlation_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>alertident_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-get-next-alertident.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-set-alertident" role="function">
<title>idmef_correlation_alert_set_alertident&#160;()</title>
<indexterm zone="idmef-correlation-alert-set-alertident"><primary>idmef_correlation_alert_set_alertident</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_correlation_alert_set_alertident
                               (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *object</parameter>,
                                <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-correlation-alert-set-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-new-alertident" role="function">
<title>idmef_correlation_alert_new_alertident&#160;()</title>
<indexterm zone="idmef-correlation-alert-new-alertident"><primary>idmef_correlation_alert_new_alertident</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_new_alertident
                               (<parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> **ret</parameter>,
                                <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object. The created <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-correlation-alert-new-alertident.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-new-alertident.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-new" role="function">
<title>idmef_overflow_alert_new&#160;()</title>
<indexterm zone="idmef-overflow-alert-new"><primary>idmef_overflow_alert_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_new (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para>
<refsect3 id="idmef-overflow-alert-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-copy" role="function">
<title>idmef_overflow_alert_copy&#160;()</title>
<indexterm zone="idmef-overflow-alert-copy"><primary>idmef_overflow_alert_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_copy (<parameter>const <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *src</parameter>,
                           <parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-overflow-alert-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-clone" role="function">
<title>idmef_overflow_alert_clone&#160;()</title>
<indexterm zone="idmef-overflow-alert-clone"><primary>idmef_overflow_alert_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_clone (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *src</parameter>,
                            <parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-overflow-alert-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-ref" role="function">
<title>idmef_overflow_alert_ref&#160;()</title>
<indexterm zone="idmef-overflow-alert-ref"><primary>idmef_overflow_alert_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-overflow-alert-t"><returnvalue>idmef_overflow_alert_t</returnvalue></link>&#160;*
idmef_overflow_alert_ref (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *overflow_alert</parameter>);</programlisting>
<para>Increase <parameter>overflow_alert</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-overflow-alert-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>overflow_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>overflow_alert</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-destroy" role="function">
<title>idmef_overflow_alert_destroy&#160;()</title>
<indexterm zone="idmef-overflow-alert-destroy"><primary>idmef_overflow_alert_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_overflow_alert_destroy (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-overflow-alert-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-get-program" role="function">
<title>idmef_overflow_alert_get_program&#160;()</title>
<indexterm zone="idmef-overflow-alert-get-program"><primary>idmef_overflow_alert_get_program</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_overflow_alert_get_program (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get program children of the <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para>
<refsect3 id="idmef-overflow-alert-get-program.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-get-program.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-set-program" role="function">
<title>idmef_overflow_alert_set_program&#160;()</title>
<indexterm zone="idmef-overflow-alert-set-program"><primary>idmef_overflow_alert_set_program</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_overflow_alert_set_program (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *program</parameter>);</programlisting>
<para>Set <parameter>program</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>program</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>program</parameter>
 object.</para>
<refsect3 id="idmef-overflow-alert-set-program.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>program</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-new-program" role="function">
<title>idmef_overflow_alert_new_program&#160;()</title>
<indexterm zone="idmef-overflow-alert-new-program"><primary>idmef_overflow_alert_new_program</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_new_program (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                                  <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new program object, children of <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-overflow-alert-new-program.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-new-program.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-unset-size" role="function">
<title>idmef_overflow_alert_unset_size&#160;()</title>
<indexterm zone="idmef-overflow-alert-unset-size"><primary>idmef_overflow_alert_unset_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_overflow_alert_unset_size (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-overflow-alert-get-size" role="function">
<title>idmef_overflow_alert_get_size&#160;()</title>
<indexterm zone="idmef-overflow-alert-get-size"><primary>idmef_overflow_alert_get_size</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_overflow_alert_get_size (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get size children of the <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para>
<refsect3 id="idmef-overflow-alert-get-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-get-size.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-set-size" role="function">
<title>idmef_overflow_alert_set_size&#160;()</title>
<indexterm zone="idmef-overflow-alert-set-size"><primary>idmef_overflow_alert_set_size</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_overflow_alert_set_size (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="uint32-t"><type>uint32_t</type></link> size</parameter>);</programlisting>
<para>Set <parameter>size</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>size</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>size</parameter>
 object.</para>
<refsect3 id="idmef-overflow-alert-set-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-new-size" role="function">
<title>idmef_overflow_alert_new_size&#160;()</title>
<indexterm zone="idmef-overflow-alert-new-size"><primary>idmef_overflow_alert_new_size</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_new_size (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new size object, children of <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-overflow-alert-new-size.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-new-size.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-get-buffer" role="function">
<title>idmef_overflow_alert_get_buffer&#160;()</title>
<indexterm zone="idmef-overflow-alert-get-buffer"><primary>idmef_overflow_alert_get_buffer</primary></indexterm>
<programlisting language="C"><link linkend="idmef-data-t"><returnvalue>idmef_data_t</returnvalue></link>&#160;*
idmef_overflow_alert_get_buffer (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get buffer children of the <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para>
<refsect3 id="idmef-overflow-alert-get-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-get-buffer.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_data_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-set-buffer" role="function">
<title>idmef_overflow_alert_set_buffer&#160;()</title>
<indexterm zone="idmef-overflow-alert-set-buffer"><primary>idmef_overflow_alert_set_buffer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_overflow_alert_set_buffer (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-data-t"><type>idmef_data_t</type></link> *buffer</parameter>);</programlisting>
<para>Set <parameter>buffer</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>buffer</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>buffer</parameter>
 object.</para>
<refsect3 id="idmef-overflow-alert-set-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-new-buffer" role="function">
<title>idmef_overflow_alert_new_buffer&#160;()</title>
<indexterm zone="idmef-overflow-alert-new-buffer"><primary>idmef_overflow_alert_new_buffer</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_new_buffer (<parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-data-t"><type>idmef_data_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new buffer object, children of <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-overflow-alert-new-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-data-t"><type>idmef_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-new-buffer.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-type-to-numeric" role="function">
<title>idmef_alert_type_to_numeric&#160;()</title>
<indexterm zone="idmef-alert-type-to-numeric"><primary>idmef_alert_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alert-type-t"><returnvalue>idmef_alert_type_t</returnvalue></link>
idmef_alert_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-alert-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-alert-type-t"><type>idmef_alert_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-type-to-string" role="function">
<title>idmef_alert_type_to_string&#160;()</title>
<indexterm zone="idmef-alert-type-to-string"><primary>idmef_alert_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_alert_type_to_string (<parameter><link linkend="idmef-alert-type-t"><type>idmef_alert_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-alert-type-t"><type>idmef_alert_type_t</type></link> value.</para>
<refsect3 id="idmef-alert-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-alert-type-t"><type>idmef_alert_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new" role="function">
<title>idmef_alert_new&#160;()</title>
<indexterm zone="idmef-alert-new"><primary>idmef_alert_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-copy" role="function">
<title>idmef_alert_copy&#160;()</title>
<indexterm zone="idmef-alert-copy"><primary>idmef_alert_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_copy (<parameter>const <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *src</parameter>,
                  <parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-alert-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-clone" role="function">
<title>idmef_alert_clone&#160;()</title>
<indexterm zone="idmef-alert-clone"><primary>idmef_alert_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_clone (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *src</parameter>,
                   <parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-alert-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-ref" role="function">
<title>idmef_alert_ref&#160;()</title>
<indexterm zone="idmef-alert-ref"><primary>idmef_alert_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alert-t"><returnvalue>idmef_alert_t</returnvalue></link>&#160;*
idmef_alert_ref (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>);</programlisting>
<para>Increase <parameter>alert</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-alert-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>alert</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-destroy" role="function">
<title>idmef_alert_destroy&#160;()</title>
<indexterm zone="idmef-alert-destroy"><primary>idmef_alert_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_destroy (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-alert-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-messageid" role="function">
<title>idmef_alert_get_messageid&#160;()</title>
<indexterm zone="idmef-alert-get-messageid"><primary>idmef_alert_get_messageid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_alert_get_messageid (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get messageid children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-messageid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-messageid" role="function">
<title>idmef_alert_set_messageid&#160;()</title>
<indexterm zone="idmef-alert-set-messageid"><primary>idmef_alert_set_messageid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_messageid (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *messageid</parameter>);</programlisting>
<para>Set <parameter>messageid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>messageid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>messageid</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>messageid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-messageid" role="function">
<title>idmef_alert_new_messageid&#160;()</title>
<indexterm zone="idmef-alert-new-messageid"><primary>idmef_alert_new_messageid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_messageid (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new messageid object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-messageid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-next-analyzer" role="function">
<title>idmef_alert_get_next_analyzer&#160;()</title>
<indexterm zone="idmef-alert-get-next-analyzer"><primary>idmef_alert_get_next_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
idmef_alert_get_next_analyzer (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>,
                               <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *analyzer_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_analyzer_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-next-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzer_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-next-analyzer.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-analyzer" role="function">
<title>idmef_alert_set_analyzer&#160;()</title>
<indexterm zone="idmef-alert-set-analyzer"><primary>idmef_alert_set_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_analyzer (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *object</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-set-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-analyzer" role="function">
<title>idmef_alert_new_analyzer&#160;()</title>
<indexterm zone="idmef-alert-new-analyzer"><primary>idmef_alert_new_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_analyzer (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                          <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> **ret</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object. The created <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-new-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-analyzer.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-create-time" role="function">
<title>idmef_alert_get_create_time&#160;()</title>
<indexterm zone="idmef-alert-get-create-time"><primary>idmef_alert_get_create_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_alert_get_create_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get create_time children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-create-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-create-time" role="function">
<title>idmef_alert_set_create_time&#160;()</title>
<indexterm zone="idmef-alert-set-create-time"><primary>idmef_alert_set_create_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_create_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *create_time</parameter>);</programlisting>
<para>Set <parameter>create_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>create_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>create_time</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>create_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-create-time" role="function">
<title>idmef_alert_new_create_time&#160;()</title>
<indexterm zone="idmef-alert-new-create-time"><primary>idmef_alert_new_create_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_create_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new create_time object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-create-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-classification" role="function">
<title>idmef_alert_get_classification&#160;()</title>
<indexterm zone="idmef-alert-get-classification"><primary>idmef_alert_get_classification</primary></indexterm>
<programlisting language="C"><link linkend="idmef-classification-t"><returnvalue>idmef_classification_t</returnvalue></link>&#160;*
idmef_alert_get_classification (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get classification children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-classification.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-classification.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_classification_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-classification" role="function">
<title>idmef_alert_set_classification&#160;()</title>
<indexterm zone="idmef-alert-set-classification"><primary>idmef_alert_set_classification</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_classification (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *classification</parameter>);</programlisting>
<para>Set <parameter>classification</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>classification</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>classification</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-classification.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>classification</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-classification" role="function">
<title>idmef_alert_new_classification&#160;()</title>
<indexterm zone="idmef-alert-new-classification"><primary>idmef_alert_new_classification</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_classification (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new classification object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-classification.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-classification.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-detect-time" role="function">
<title>idmef_alert_get_detect_time&#160;()</title>
<indexterm zone="idmef-alert-get-detect-time"><primary>idmef_alert_get_detect_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_alert_get_detect_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get detect_time children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-detect-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-detect-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-detect-time" role="function">
<title>idmef_alert_set_detect_time&#160;()</title>
<indexterm zone="idmef-alert-set-detect-time"><primary>idmef_alert_set_detect_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_detect_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *detect_time</parameter>);</programlisting>
<para>Set <parameter>detect_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>detect_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>detect_time</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-detect-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>detect_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-detect-time" role="function">
<title>idmef_alert_new_detect_time&#160;()</title>
<indexterm zone="idmef-alert-new-detect-time"><primary>idmef_alert_new_detect_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_detect_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new detect_time object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-detect-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-detect-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-analyzer-time" role="function">
<title>idmef_alert_get_analyzer_time&#160;()</title>
<indexterm zone="idmef-alert-get-analyzer-time"><primary>idmef_alert_get_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_alert_get_analyzer_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get analyzer_time children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-analyzer-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-analyzer-time" role="function">
<title>idmef_alert_set_analyzer_time&#160;()</title>
<indexterm zone="idmef-alert-set-analyzer-time"><primary>idmef_alert_set_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_analyzer_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *analyzer_time</parameter>);</programlisting>
<para>Set <parameter>analyzer_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>analyzer_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>analyzer_time</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzer_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-analyzer-time" role="function">
<title>idmef_alert_new_analyzer_time&#160;()</title>
<indexterm zone="idmef-alert-new-analyzer-time"><primary>idmef_alert_new_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_analyzer_time (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new analyzer_time object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-analyzer-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-next-source" role="function">
<title>idmef_alert_get_next_source&#160;()</title>
<indexterm zone="idmef-alert-get-next-source"><primary>idmef_alert_get_next_source</primary></indexterm>
<programlisting language="C"><link linkend="idmef-source-t"><returnvalue>idmef_source_t</returnvalue></link>&#160;*
idmef_alert_get_next_source (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>,
                             <parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *source_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_source_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-next-source.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>source_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-next-source.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-source-t"><type>idmef_source_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-source" role="function">
<title>idmef_alert_set_source&#160;()</title>
<indexterm zone="idmef-alert-set-source"><primary>idmef_alert_set_source</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_source (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> *object</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-set-source.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-source" role="function">
<title>idmef_alert_new_source&#160;()</title>
<indexterm zone="idmef-alert-new-source"><primary>idmef_alert_new_source</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_source (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-source-t"><type>idmef_source_t</type></link> **ret</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-source-t"><type>idmef_source_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object. The created <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-new-source.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-source-t"><type>idmef_source_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-source.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-next-target" role="function">
<title>idmef_alert_get_next_target&#160;()</title>
<indexterm zone="idmef-alert-get-next-target"><primary>idmef_alert_get_next_target</primary></indexterm>
<programlisting language="C"><link linkend="idmef-target-t"><returnvalue>idmef_target_t</returnvalue></link>&#160;*
idmef_alert_get_next_target (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>,
                             <parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *target_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_target_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-next-target.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>target_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-next-target.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-target-t"><type>idmef_target_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-target" role="function">
<title>idmef_alert_set_target&#160;()</title>
<indexterm zone="idmef-alert-set-target"><primary>idmef_alert_set_target</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_target (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> *object</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-set-target.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-target" role="function">
<title>idmef_alert_new_target&#160;()</title>
<indexterm zone="idmef-alert-new-target"><primary>idmef_alert_new_target</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_target (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                        <parameter><link linkend="idmef-target-t"><type>idmef_target_t</type></link> **ret</parameter>,
                        <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-target-t"><type>idmef_target_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object. The created <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-new-target.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-target-t"><type>idmef_target_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-target.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-assessment" role="function">
<title>idmef_alert_get_assessment&#160;()</title>
<indexterm zone="idmef-alert-get-assessment"><primary>idmef_alert_get_assessment</primary></indexterm>
<programlisting language="C"><link linkend="idmef-assessment-t"><returnvalue>idmef_assessment_t</returnvalue></link>&#160;*
idmef_alert_get_assessment (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Get assessment children of the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-assessment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-assessment.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_assessment_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-assessment" role="function">
<title>idmef_alert_set_assessment&#160;()</title>
<indexterm zone="idmef-alert-set-assessment"><primary>idmef_alert_set_assessment</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_assessment (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *assessment</parameter>);</programlisting>
<para>Set <parameter>assessment</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>assessment</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>assessment</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-assessment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>assessment</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-assessment" role="function">
<title>idmef_alert_new_assessment&#160;()</title>
<indexterm zone="idmef-alert-new-assessment"><primary>idmef_alert_new_assessment</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_assessment (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new assessment object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-assessment.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-assessment.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-next-additional-data" role="function">
<title>idmef_alert_get_next_additional_data&#160;()</title>
<indexterm zone="idmef-alert-get-next-additional-data"><primary>idmef_alert_get_next_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
idmef_alert_get_next_additional_data (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>,
                                      <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *additional_data_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_additional_data_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-alert-get-next-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>additional_data_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-next-additional-data.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-additional-data" role="function">
<title>idmef_alert_set_additional_data&#160;()</title>
<indexterm zone="idmef-alert-set-additional-data"><primary>idmef_alert_set_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_additional_data (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *object</parameter>,
                                 <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-set-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-additional-data" role="function">
<title>idmef_alert_new_additional_data&#160;()</title>
<indexterm zone="idmef-alert-new-additional-data"><primary>idmef_alert_new_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_additional_data (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> **ret</parameter>,
                                 <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object. The created <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-alert-new-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-additional-data.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-type" role="function">
<title>idmef_alert_get_type&#160;()</title>
<indexterm zone="idmef-alert-get-type"><primary>idmef_alert_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alert-type-t"><returnvalue>idmef_alert_type_t</returnvalue></link>
idmef_alert_get_type (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the type children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-alert-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-alert-type-t"><type>idmef_alert_type_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-tool-alert" role="function">
<title>idmef_alert_get_tool_alert&#160;()</title>
<indexterm zone="idmef-alert-get-tool-alert"><primary>idmef_alert_get_tool_alert</primary></indexterm>
<programlisting language="C"><link linkend="idmef-tool-alert-t"><returnvalue>idmef_tool_alert_t</returnvalue></link>&#160;*
idmef_alert_get_tool_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the tool_alert children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-alert-get-tool-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-tool-alert.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-tool-alert" role="function">
<title>idmef_alert_set_tool_alert&#160;()</title>
<indexterm zone="idmef-alert-set-tool-alert"><primary>idmef_alert_set_tool_alert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_tool_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *tool_alert</parameter>);</programlisting>
<para>Set <parameter>tool_alert</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>tool_alert</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>tool_alert</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-tool-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tool_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-tool-alert" role="function">
<title>idmef_alert_new_tool_alert&#160;()</title>
<indexterm zone="idmef-alert-new-tool-alert"><primary>idmef_alert_new_tool_alert</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_tool_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                            <parameter><link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_tool_alert_t object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-tool-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-tool-alert.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-correlation-alert" role="function">
<title>idmef_alert_get_correlation_alert&#160;()</title>
<indexterm zone="idmef-alert-get-correlation-alert"><primary>idmef_alert_get_correlation_alert</primary></indexterm>
<programlisting language="C"><link linkend="idmef-correlation-alert-t"><returnvalue>idmef_correlation_alert_t</returnvalue></link>&#160;*
idmef_alert_get_correlation_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the correlation_alert children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-alert-get-correlation-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-correlation-alert.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-correlation-alert" role="function">
<title>idmef_alert_set_correlation_alert&#160;()</title>
<indexterm zone="idmef-alert-set-correlation-alert"><primary>idmef_alert_set_correlation_alert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_correlation_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *correlation_alert</parameter>);</programlisting>
<para>Set <parameter>correlation_alert</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>correlation_alert</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>correlation_alert</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-correlation-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>correlation_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-correlation-alert" role="function">
<title>idmef_alert_new_correlation_alert&#160;()</title>
<indexterm zone="idmef-alert-new-correlation-alert"><primary>idmef_alert_new_correlation_alert</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_correlation_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_correlation_alert_t object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-correlation-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-correlation-alert.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-get-overflow-alert" role="function">
<title>idmef_alert_get_overflow_alert&#160;()</title>
<indexterm zone="idmef-alert-get-overflow-alert"><primary>idmef_alert_get_overflow_alert</primary></indexterm>
<programlisting language="C"><link linkend="idmef-overflow-alert-t"><returnvalue>idmef_overflow_alert_t</returnvalue></link>&#160;*
idmef_alert_get_overflow_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the overflow_alert children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-alert-get-overflow-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-get-overflow-alert.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-set-overflow-alert" role="function">
<title>idmef_alert_set_overflow_alert&#160;()</title>
<indexterm zone="idmef-alert-set-overflow-alert"><primary>idmef_alert_set_overflow_alert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_alert_set_overflow_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *overflow_alert</parameter>);</programlisting>
<para>Set <parameter>overflow_alert</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>overflow_alert</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>overflow_alert</parameter>
 object.</para>
<refsect3 id="idmef-alert-set-overflow-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>overflow_alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-new-overflow-alert" role="function">
<title>idmef_alert_new_overflow_alert&#160;()</title>
<indexterm zone="idmef-alert-new-overflow-alert"><primary>idmef_alert_new_overflow_alert</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_new_overflow_alert (<parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_overflow_alert_t object, children of <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-alert-new-overflow-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-new-overflow-alert.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new" role="function">
<title>idmef_heartbeat_new&#160;()</title>
<indexterm zone="idmef-heartbeat-new"><primary>idmef_heartbeat_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-copy" role="function">
<title>idmef_heartbeat_copy&#160;()</title>
<indexterm zone="idmef-heartbeat-copy"><primary>idmef_heartbeat_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_copy (<parameter>const <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *src</parameter>,
                      <parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-heartbeat-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-clone" role="function">
<title>idmef_heartbeat_clone&#160;()</title>
<indexterm zone="idmef-heartbeat-clone"><primary>idmef_heartbeat_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_clone (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *src</parameter>,
                       <parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-heartbeat-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-ref" role="function">
<title>idmef_heartbeat_ref&#160;()</title>
<indexterm zone="idmef-heartbeat-ref"><primary>idmef_heartbeat_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-heartbeat-t"><returnvalue>idmef_heartbeat_t</returnvalue></link>&#160;*
idmef_heartbeat_ref (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *heartbeat</parameter>);</programlisting>
<para>Increase <parameter>heartbeat</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-heartbeat-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>heartbeat</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>heartbeat</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-destroy" role="function">
<title>idmef_heartbeat_destroy&#160;()</title>
<indexterm zone="idmef-heartbeat-destroy"><primary>idmef_heartbeat_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_destroy (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-heartbeat-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-get-messageid" role="function">
<title>idmef_heartbeat_get_messageid&#160;()</title>
<indexterm zone="idmef-heartbeat-get-messageid"><primary>idmef_heartbeat_get_messageid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_heartbeat_get_messageid (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
<para>Get messageid children of the <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-messageid.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-messageid" role="function">
<title>idmef_heartbeat_set_messageid&#160;()</title>
<indexterm zone="idmef-heartbeat-set-messageid"><primary>idmef_heartbeat_set_messageid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_messageid (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *messageid</parameter>);</programlisting>
<para>Set <parameter>messageid</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>messageid</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>messageid</parameter>
 object.</para>
<refsect3 id="idmef-heartbeat-set-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>messageid</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-messageid" role="function">
<title>idmef_heartbeat_new_messageid&#160;()</title>
<indexterm zone="idmef-heartbeat-new-messageid"><primary>idmef_heartbeat_new_messageid</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_messageid (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                               <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new messageid object, children of <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-heartbeat-new-messageid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-messageid.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-get-next-analyzer" role="function">
<title>idmef_heartbeat_get_next_analyzer&#160;()</title>
<indexterm zone="idmef-heartbeat-get-next-analyzer"><primary>idmef_heartbeat_get_next_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="idmef-analyzer-t"><returnvalue>idmef_analyzer_t</returnvalue></link>&#160;*
idmef_heartbeat_get_next_analyzer (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *heartbeat</parameter>,
                                   <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *analyzer_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_analyzer_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-next-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>heartbeat</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzer_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-next-analyzer.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-analyzer" role="function">
<title>idmef_heartbeat_set_analyzer&#160;()</title>
<indexterm zone="idmef-heartbeat-set-analyzer"><primary>idmef_heartbeat_set_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_analyzer (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *object</parameter>,
                              <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-heartbeat-set-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-analyzer" role="function">
<title>idmef_heartbeat_new_analyzer&#160;()</title>
<indexterm zone="idmef-heartbeat-new-analyzer"><primary>idmef_heartbeat_new_analyzer</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_analyzer (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                              <parameter><link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> **ret</parameter>,
                              <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object. The created <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-heartbeat-new-analyzer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-analyzer.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-get-create-time" role="function">
<title>idmef_heartbeat_get_create_time&#160;()</title>
<indexterm zone="idmef-heartbeat-get-create-time"><primary>idmef_heartbeat_get_create_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_heartbeat_get_create_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
<para>Get create_time children of the <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-create-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-create-time" role="function">
<title>idmef_heartbeat_set_create_time&#160;()</title>
<indexterm zone="idmef-heartbeat-set-create-time"><primary>idmef_heartbeat_set_create_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_create_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *create_time</parameter>);</programlisting>
<para>Set <parameter>create_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>create_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>create_time</parameter>
 object.</para>
<refsect3 id="idmef-heartbeat-set-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>create_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-create-time" role="function">
<title>idmef_heartbeat_new_create_time&#160;()</title>
<indexterm zone="idmef-heartbeat-new-create-time"><primary>idmef_heartbeat_new_create_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_create_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                 <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new create_time object, children of <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-heartbeat-new-create-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-create-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-get-analyzer-time" role="function">
<title>idmef_heartbeat_get_analyzer_time&#160;()</title>
<indexterm zone="idmef-heartbeat-get-analyzer-time"><primary>idmef_heartbeat_get_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="idmef-time-t"><returnvalue>idmef_time_t</returnvalue></link>&#160;*
idmef_heartbeat_get_analyzer_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
<para>Get analyzer_time children of the <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-analyzer-time.returns" role="returns">
<title>Returns</title>
<para> a pointer to a idmef_time_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-analyzer-time" role="function">
<title>idmef_heartbeat_set_analyzer_time&#160;()</title>
<indexterm zone="idmef-heartbeat-set-analyzer-time"><primary>idmef_heartbeat_set_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_analyzer_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> *analyzer_time</parameter>);</programlisting>
<para>Set <parameter>analyzer_time</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>analyzer_time</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>analyzer_time</parameter>
 object.</para>
<refsect3 id="idmef-heartbeat-set-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzer_time</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-analyzer-time" role="function">
<title>idmef_heartbeat_new_analyzer_time&#160;()</title>
<indexterm zone="idmef-heartbeat-new-analyzer-time"><primary>idmef_heartbeat_new_analyzer_time</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_analyzer_time (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                   <parameter><link linkend="idmef-time-t"><type>idmef_time_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new analyzer_time object, children of <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-heartbeat-new-analyzer-time.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-analyzer-time.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-unset-heartbeat-interval" role="function">
<title>idmef_heartbeat_unset_heartbeat_interval&#160;()</title>
<indexterm zone="idmef-heartbeat-unset-heartbeat-interval"><primary>idmef_heartbeat_unset_heartbeat_interval</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_unset_heartbeat_interval
                               (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-heartbeat-get-heartbeat-interval" role="function">
<title>idmef_heartbeat_get_heartbeat_interval&#160;()</title>
<indexterm zone="idmef-heartbeat-get-heartbeat-interval"><primary>idmef_heartbeat_get_heartbeat_interval</primary></indexterm>
<programlisting language="C"><link linkend="uint32-t"><returnvalue>uint32_t</returnvalue></link>&#160;*
idmef_heartbeat_get_heartbeat_interval
                               (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>);</programlisting>
<para>Get heartbeat_interval children of the <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-heartbeat-interval.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-heartbeat-interval.returns" role="returns">
<title>Returns</title>
<para> a pointer to a uint32_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-heartbeat-interval" role="function">
<title>idmef_heartbeat_set_heartbeat_interval&#160;()</title>
<indexterm zone="idmef-heartbeat-set-heartbeat-interval"><primary>idmef_heartbeat_set_heartbeat_interval</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_heartbeat_interval
                               (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> heartbeat_interval</parameter>);</programlisting>
<para>Set <parameter>heartbeat_interval</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>heartbeat_interval</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>heartbeat_interval</parameter>
 object.</para>
<refsect3 id="idmef-heartbeat-set-heartbeat-interval.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>heartbeat_interval</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-heartbeat-interval" role="function">
<title>idmef_heartbeat_new_heartbeat_interval&#160;()</title>
<indexterm zone="idmef-heartbeat-new-heartbeat-interval"><primary>idmef_heartbeat_new_heartbeat_interval</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_heartbeat_interval
                               (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                <parameter><link linkend="uint32-t"><type>uint32_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new heartbeat_interval object, children of <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="uint32-t"><type>uint32_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-heartbeat-new-heartbeat-interval.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="uint32-t"><type>uint32_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-heartbeat-interval.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-get-next-additional-data" role="function">
<title>idmef_heartbeat_get_next_additional_data&#160;()</title>
<indexterm zone="idmef-heartbeat-get-next-additional-data"><primary>idmef_heartbeat_get_next_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="idmef-additional-data-t"><returnvalue>idmef_additional_data_t</returnvalue></link>&#160;*
idmef_heartbeat_get_next_additional_data
                               (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *heartbeat</parameter>,
                                <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *additional_data_cur</parameter>);</programlisting>
<para>Get the next <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object listed in <parameter>ptr</parameter>
.
When iterating over the idmef_additional_data_t object listed in <parameter>ptr</parameter>
,
<parameter>object</parameter>
 should be set to the latest returned <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<refsect3 id="idmef-heartbeat-get-next-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>heartbeat</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>additional_data_cur</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-get-next-additional-data.returns" role="returns">
<title>Returns</title>
<para> the next <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> in the list.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-set-additional-data" role="function">
<title>idmef_heartbeat_set_additional_data&#160;()</title>
<indexterm zone="idmef-heartbeat-set-additional-data"><primary>idmef_heartbeat_set_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_heartbeat_set_additional_data (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                     <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *object</parameter>,
                                     <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Add <parameter>object</parameter>
 to position <parameter>pos</parameter>
 of <parameter>ptr</parameter>
 list of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-heartbeat-set-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>object</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>Position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-new-additional-data" role="function">
<title>idmef_heartbeat_new_additional_data&#160;()</title>
<indexterm zone="idmef-heartbeat-new-additional-data"><primary>idmef_heartbeat_new_additional_data</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_new_additional_data (<parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *ptr</parameter>,
                                     <parameter><link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> **ret</parameter>,
                                     <parameter><link linkend="int"><type>int</type></link> pos</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> children of <parameter>ptr</parameter>
, and add it to position <parameter>pos</parameter>
 of
<parameter>ptr</parameter>
 list of <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object. The created <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object is
stored in <parameter>ret</parameter>
.</para>
<para>If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-APPEND:CAPS"><type>IDMEF_LIST_APPEND</type></link>, <parameter>object</parameter>
 will be inserted at the tail of the list.
If <parameter>pos</parameter>
 is <link linkend="IDMEF-LIST-PREPEND:CAPS"><type>IDMEF_LIST_PREPEND</type></link>, <parameter>object</parameter>
 will be inserted at the head of the list.</para>
<refsect3 id="idmef-heartbeat-new-additional-data.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pos</para></entry>
<entry role="parameter_description"><para>position in the list.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-new-additional-data.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-type-to-numeric" role="function">
<title>idmef_message_type_to_numeric&#160;()</title>
<indexterm zone="idmef-message-type-to-numeric"><primary>idmef_message_type_to_numeric</primary></indexterm>
<programlisting language="C"><link linkend="idmef-message-type-t"><returnvalue>idmef_message_type_t</returnvalue></link>
idmef_message_type_to_numeric (<parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="idmef-message-type-to-numeric.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>pointer to an IDMEF string representation of a <link linkend="idmef-message-type-t"><type>idmef_message_type_t</type></link> value.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-type-to-numeric.returns" role="returns">
<title>Returns</title>
<para> the numeric equivalent of <parameter>name</parameter>
, or -1 if <parameter>name</parameter>
is not valid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-type-to-string" role="function">
<title>idmef_message_type_to_string&#160;()</title>
<indexterm zone="idmef-message-type-to-string"><primary>idmef_message_type_to_string</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
idmef_message_type_to_string (<parameter><link linkend="idmef-message-type-t"><type>idmef_message_type_t</type></link> val</parameter>);</programlisting>
<para>Return the IDMEF string equivalent of <parameter>val</parameter>
 provided <link linkend="idmef-message-type-t"><type>idmef_message_type_t</type></link> value.</para>
<refsect3 id="idmef-message-type-to-string.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>val</para></entry>
<entry role="parameter_description"><para>an enumeration value for <link linkend="idmef-message-type-t"><type>idmef_message_type_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-type-to-string.returns" role="returns">
<title>Returns</title>
<para> a pointer to the string describing <parameter>val</parameter>
, or NULL if <parameter>val</parameter>
is invalid.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-new" role="function">
<title>idmef_message_new&#160;()</title>
<indexterm zone="idmef-message-new"><primary>idmef_message_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_new (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para>
<refsect3 id="idmef-message-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the created <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-copy" role="function">
<title>idmef_message_copy&#160;()</title>
<indexterm zone="idmef-message-copy"><primary>idmef_message_copy</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_copy (<parameter>const <link linkend="idmef-message-t"><type>idmef_message_t</type></link> *src</parameter>,
                    <parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *dst</parameter>);</programlisting>
<para>Copy a new <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object from <parameter>src</parameter>
 to <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-message-copy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Source of the copy.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Where to copy the object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-copy.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-clone" role="function">
<title>idmef_message_clone&#160;()</title>
<indexterm zone="idmef-message-clone"><primary>idmef_message_clone</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_clone (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *src</parameter>,
                     <parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> **dst</parameter>);</programlisting>
<para>Create a copy of <parameter>src</parameter>
, and store it in <parameter>dst</parameter>
.</para>
<refsect3 id="idmef-message-clone.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>Object to be cloned.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>Address where to store the pointer to the cloned object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-clone.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-ref" role="function">
<title>idmef_message_ref&#160;()</title>
<indexterm zone="idmef-message-ref"><primary>idmef_message_ref</primary></indexterm>
<programlisting language="C"><link linkend="idmef-message-t"><returnvalue>idmef_message_t</returnvalue></link>&#160;*
idmef_message_ref (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>);</programlisting>
<para>Increase <parameter>message</parameter>
 reference count, so that it can be referenced
multiple time.</para>
<refsect3 id="idmef-message-ref.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>message</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-ref.returns" role="returns">
<title>Returns</title>
<para> a pointer to <parameter>message</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-destroy" role="function">
<title>idmef_message_destroy&#160;()</title>
<indexterm zone="idmef-message-destroy"><primary>idmef_message_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_message_destroy (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>);</programlisting>
<para>Destroy <parameter>ptr</parameter>
 and all of it's children.
The objects are only destroyed if their reference count reach zero.</para>
<refsect3 id="idmef-message-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-version" role="function">
<title>idmef_message_get_version&#160;()</title>
<indexterm zone="idmef-message-get-version"><primary>idmef_message_get_version</primary></indexterm>
<programlisting language="C"><link linkend="prelude-string-t"><returnvalue>prelude_string_t</returnvalue></link>&#160;*
idmef_message_get_version (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>);</programlisting>
<para>Get version children of the <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para>
<refsect3 id="idmef-message-get-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-version.returns" role="returns">
<title>Returns</title>
<para> a pointer to a prelude_string_t object, or NULL if the children object is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-version" role="function">
<title>idmef_message_set_version&#160;()</title>
<indexterm zone="idmef-message-set-version"><primary>idmef_message_set_version</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_message_set_version (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> *version</parameter>);</programlisting>
<para>Set <parameter>version</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain an <parameter>version</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>version</parameter>
 object.</para>
<refsect3 id="idmef-message-set-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>version</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-message-new-version" role="function">
<title>idmef_message_new_version&#160;()</title>
<indexterm zone="idmef-message-new-version"><primary>idmef_message_new_version</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_new_version (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                           <parameter><link linkend="prelude-string-t"><type>prelude_string_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new version object, children of <link linkend="idmef-message-t"><type>idmef_message_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-message-new-version.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer to an address where to store the created <link linkend="prelude-string-t"><type>prelude_string_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-new-version.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-type" role="function">
<title>idmef_message_get_type&#160;()</title>
<indexterm zone="idmef-message-get-type"><primary>idmef_message_get_type</primary></indexterm>
<programlisting language="C"><link linkend="idmef-message-type-t"><returnvalue>idmef_message_type_t</returnvalue></link>
idmef_message_get_type (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the type children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-message-get-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-type.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-message-type-t"><type>idmef_message_type_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-alert" role="function">
<title>idmef_message_get_alert&#160;()</title>
<indexterm zone="idmef-message-get-alert"><primary>idmef_message_get_alert</primary></indexterm>
<programlisting language="C"><link linkend="idmef-alert-t"><returnvalue>idmef_alert_t</returnvalue></link>&#160;*
idmef_message_get_alert (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the alert children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-message-get-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-alert.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-alert" role="function">
<title>idmef_message_set_alert&#160;()</title>
<indexterm zone="idmef-message-set-alert"><primary>idmef_message_set_alert</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_message_set_alert (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *alert</parameter>);</programlisting>
<para>Set <parameter>alert</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>alert</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>alert</parameter>
 object.</para>
<refsect3 id="idmef-message-set-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>alert</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-message-new-alert" role="function">
<title>idmef_message_new_alert&#160;()</title>
<indexterm zone="idmef-message-new-alert"><primary>idmef_message_new_alert</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_new_alert (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                         <parameter><link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_alert_t object, children of <link linkend="idmef-message-t"><type>idmef_message_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-message-new-alert.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-new-alert.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-get-heartbeat" role="function">
<title>idmef_message_get_heartbeat&#160;()</title>
<indexterm zone="idmef-message-get-heartbeat"><primary>idmef_message_get_heartbeat</primary></indexterm>
<programlisting language="C"><link linkend="idmef-heartbeat-t"><returnvalue>idmef_heartbeat_t</returnvalue></link>&#160;*
idmef_message_get_heartbeat (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>);</programlisting>
<para>Access the heartbeat children of <parameter>ptr</parameter>
.</para>
<refsect3 id="idmef-message-get-heartbeat.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-get-heartbeat.returns" role="returns">
<title>Returns</title>
<para> a pointer to the <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> children, or NULL if it is not set.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-heartbeat" role="function">
<title>idmef_message_set_heartbeat&#160;()</title>
<indexterm zone="idmef-message-set-heartbeat"><primary>idmef_message_set_heartbeat</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_message_set_heartbeat (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *heartbeat</parameter>);</programlisting>
<para>Set <parameter>heartbeat</parameter>
 object as a children of <parameter>ptr</parameter>
.
if <parameter>ptr</parameter>
 already contain a <parameter>heartbeat</parameter>
 object, then it is destroyed,
and updated to point to the provided <parameter>heartbeat</parameter>
 object.</para>
<refsect3 id="idmef-message-set-heartbeat.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>heartbeat</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-message-new-heartbeat" role="function">
<title>idmef_message_new_heartbeat&#160;()</title>
<indexterm zone="idmef-message-new-heartbeat"><primary>idmef_message_new_heartbeat</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_new_heartbeat (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *ptr</parameter>,
                             <parameter><link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> **ret</parameter>);</programlisting>
<para>Create a new idmef_heartbeat_t object, children of <link linkend="idmef-message-t"><type>idmef_message_t</type></link>.
If <parameter>ptr</parameter>
 already contain a <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object, then it is destroyed.</para>
<refsect3 id="idmef-message-new-heartbeat.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ptr</para></entry>
<entry role="parameter_description"><para>pointer to a <link linkend="idmef-message-t"><type>idmef_message_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>pointer where to store the created <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-new-heartbeat.returns" role="returns">
<title>Returns</title>
<para> 0 on success, or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-set-pmsg" role="function">
<title>idmef_message_set_pmsg&#160;()</title>
<indexterm zone="idmef-message-set-pmsg"><primary>idmef_message_set_pmsg</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
idmef_message_set_pmsg (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>,
                        <parameter><link linkend="prelude-msg-t"><type>prelude_msg_t</type></link> *msg</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-message-get-pmsg" role="function">
<title>idmef_message_get_pmsg&#160;()</title>
<indexterm zone="idmef-message-get-pmsg"><primary>idmef_message_get_pmsg</primary></indexterm>
<programlisting language="C"><link linkend="prelude-msg-t"><returnvalue>prelude_msg_t</returnvalue></link>&#160;*
idmef_message_get_pmsg (<parameter><link linkend="idmef-message-t"><type>idmef_message_t</type></link> *message</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-action-compare" role="function">
<title>idmef_action_compare&#160;()</title>
<indexterm zone="idmef-action-compare"><primary>idmef_action_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_action_compare (<parameter>const <link linkend="idmef-action-t"><type>idmef_action_t</type></link> *obj1</parameter>,
                      <parameter>const <link linkend="idmef-action-t"><type>idmef_action_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-action-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-action-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-compare" role="function">
<title>idmef_additional_data_compare&#160;()</title>
<indexterm zone="idmef-additional-data-compare"><primary>idmef_additional_data_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_additional_data_compare (<parameter>const <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *obj1</parameter>,
                               <parameter>const <link linkend="idmef-additional-data-t"><type>idmef_additional_data_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-additional-data-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-additional-data-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-address-compare" role="function">
<title>idmef_address_compare&#160;()</title>
<indexterm zone="idmef-address-compare"><primary>idmef_address_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_address_compare (<parameter>const <link linkend="idmef-address-t"><type>idmef_address_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-address-t"><type>idmef_address_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-address-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-address-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alert-compare" role="function">
<title>idmef_alert_compare&#160;()</title>
<indexterm zone="idmef-alert-compare"><primary>idmef_alert_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alert_compare (<parameter>const <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *obj1</parameter>,
                     <parameter>const <link linkend="idmef-alert-t"><type>idmef_alert_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-alert-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alert-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-alertident-compare" role="function">
<title>idmef_alertident_compare&#160;()</title>
<indexterm zone="idmef-alertident-compare"><primary>idmef_alertident_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_alertident_compare (<parameter>const <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *obj1</parameter>,
                          <parameter>const <link linkend="idmef-alertident-t"><type>idmef_alertident_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-alertident-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-alertident-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-analyzer-compare" role="function">
<title>idmef_analyzer_compare&#160;()</title>
<indexterm zone="idmef-analyzer-compare"><primary>idmef_analyzer_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_analyzer_compare (<parameter>const <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *obj1</parameter>,
                        <parameter>const <link linkend="idmef-analyzer-t"><type>idmef_analyzer_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-analyzer-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-analyzer-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-assessment-compare" role="function">
<title>idmef_assessment_compare&#160;()</title>
<indexterm zone="idmef-assessment-compare"><primary>idmef_assessment_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_assessment_compare (<parameter>const <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *obj1</parameter>,
                          <parameter>const <link linkend="idmef-assessment-t"><type>idmef_assessment_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-assessment-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-assessment-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-compare" role="function">
<title>idmef_checksum_compare&#160;()</title>
<indexterm zone="idmef-checksum-compare"><primary>idmef_checksum_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_checksum_compare (<parameter>const <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *obj1</parameter>,
                        <parameter>const <link linkend="idmef-checksum-t"><type>idmef_checksum_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-checksum-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-checksum-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-classification-compare" role="function">
<title>idmef_classification_compare&#160;()</title>
<indexterm zone="idmef-classification-compare"><primary>idmef_classification_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_classification_compare (<parameter>const <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *obj1</parameter>,
                              <parameter>const <link linkend="idmef-classification-t"><type>idmef_classification_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-classification-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-classification-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-compare" role="function">
<title>idmef_confidence_compare&#160;()</title>
<indexterm zone="idmef-confidence-compare"><primary>idmef_confidence_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_confidence_compare (<parameter>const <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *obj1</parameter>,
                          <parameter>const <link linkend="idmef-confidence-t"><type>idmef_confidence_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-confidence-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-confidence-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-correlation-alert-compare" role="function">
<title>idmef_correlation_alert_compare&#160;()</title>
<indexterm zone="idmef-correlation-alert-compare"><primary>idmef_correlation_alert_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_correlation_alert_compare (<parameter>const <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *obj1</parameter>,
                                 <parameter>const <link linkend="idmef-correlation-alert-t"><type>idmef_correlation_alert_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-correlation-alert-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-correlation-alert-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-data-compare" role="function">
<title>idmef_data_compare&#160;()</title>
<indexterm zone="idmef-data-compare"><primary>idmef_data_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_data_compare (<parameter>const <link linkend="idmef-data-t"><type>idmef_data_t</type></link> *data1</parameter>,
                    <parameter>const <link linkend="idmef-data-t"><type>idmef_data_t</type></link> *data2</parameter>);</programlisting>
</refsect2>
<refsect2 id="idmef-file-access-compare" role="function">
<title>idmef_file_access_compare&#160;()</title>
<indexterm zone="idmef-file-access-compare"><primary>idmef_file_access_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_access_compare (<parameter>const <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *obj1</parameter>,
                           <parameter>const <link linkend="idmef-file-access-t"><type>idmef_file_access_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-file-access-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-access-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-file-compare" role="function">
<title>idmef_file_compare&#160;()</title>
<indexterm zone="idmef-file-compare"><primary>idmef_file_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_file_compare (<parameter>const <link linkend="idmef-file-t"><type>idmef_file_t</type></link> *obj1</parameter>,
                    <parameter>const <link linkend="idmef-file-t"><type>idmef_file_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-file-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-file-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-heartbeat-compare" role="function">
<title>idmef_heartbeat_compare&#160;()</title>
<indexterm zone="idmef-heartbeat-compare"><primary>idmef_heartbeat_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_heartbeat_compare (<parameter>const <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *obj1</parameter>,
                         <parameter>const <link linkend="idmef-heartbeat-t"><type>idmef_heartbeat_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-heartbeat-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-heartbeat-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-impact-compare" role="function">
<title>idmef_impact_compare&#160;()</title>
<indexterm zone="idmef-impact-compare"><primary>idmef_impact_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_impact_compare (<parameter>const <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *obj1</parameter>,
                      <parameter>const <link linkend="idmef-impact-t"><type>idmef_impact_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-impact-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-impact-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-inode-compare" role="function">
<title>idmef_inode_compare&#160;()</title>
<indexterm zone="idmef-inode-compare"><primary>idmef_inode_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_inode_compare (<parameter>const <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *obj1</parameter>,
                     <parameter>const <link linkend="idmef-inode-t"><type>idmef_inode_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-inode-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-inode-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-linkage-compare" role="function">
<title>idmef_linkage_compare&#160;()</title>
<indexterm zone="idmef-linkage-compare"><primary>idmef_linkage_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_linkage_compare (<parameter>const <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-linkage-t"><type>idmef_linkage_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-linkage-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-linkage-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-message-compare" role="function">
<title>idmef_message_compare&#160;()</title>
<indexterm zone="idmef-message-compare"><primary>idmef_message_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_message_compare (<parameter>const <link linkend="idmef-message-t"><type>idmef_message_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-message-t"><type>idmef_message_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-message-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-message-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-node-compare" role="function">
<title>idmef_node_compare&#160;()</title>
<indexterm zone="idmef-node-compare"><primary>idmef_node_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_node_compare (<parameter>const <link linkend="idmef-node-t"><type>idmef_node_t</type></link> *obj1</parameter>,
                    <parameter>const <link linkend="idmef-node-t"><type>idmef_node_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-node-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-node-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-overflow-alert-compare" role="function">
<title>idmef_overflow_alert_compare&#160;()</title>
<indexterm zone="idmef-overflow-alert-compare"><primary>idmef_overflow_alert_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_overflow_alert_compare (<parameter>const <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *obj1</parameter>,
                              <parameter>const <link linkend="idmef-overflow-alert-t"><type>idmef_overflow_alert_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-overflow-alert-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-overflow-alert-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-process-compare" role="function">
<title>idmef_process_compare&#160;()</title>
<indexterm zone="idmef-process-compare"><primary>idmef_process_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_process_compare (<parameter>const <link linkend="idmef-process-t"><type>idmef_process_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-process-t"><type>idmef_process_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-process-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-process-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-reference-compare" role="function">
<title>idmef_reference_compare&#160;()</title>
<indexterm zone="idmef-reference-compare"><primary>idmef_reference_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_reference_compare (<parameter>const <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *obj1</parameter>,
                         <parameter>const <link linkend="idmef-reference-t"><type>idmef_reference_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-reference-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-reference-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-service-compare" role="function">
<title>idmef_service_compare&#160;()</title>
<indexterm zone="idmef-service-compare"><primary>idmef_service_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_service_compare (<parameter>const <link linkend="idmef-service-t"><type>idmef_service_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-service-t"><type>idmef_service_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-service-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-service-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-snmp-service-compare" role="function">
<title>idmef_snmp_service_compare&#160;()</title>
<indexterm zone="idmef-snmp-service-compare"><primary>idmef_snmp_service_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_snmp_service_compare (<parameter>const <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *obj1</parameter>,
                            <parameter>const <link linkend="idmef-snmp-service-t"><type>idmef_snmp_service_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-snmp-service-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-snmp-service-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-source-compare" role="function">
<title>idmef_source_compare&#160;()</title>
<indexterm zone="idmef-source-compare"><primary>idmef_source_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_source_compare (<parameter>const <link linkend="idmef-source-t"><type>idmef_source_t</type></link> *obj1</parameter>,
                      <parameter>const <link linkend="idmef-source-t"><type>idmef_source_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-source-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-source-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-target-compare" role="function">
<title>idmef_target_compare&#160;()</title>
<indexterm zone="idmef-target-compare"><primary>idmef_target_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_target_compare (<parameter>const <link linkend="idmef-target-t"><type>idmef_target_t</type></link> *obj1</parameter>,
                      <parameter>const <link linkend="idmef-target-t"><type>idmef_target_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-target-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-target-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-time-compare" role="function">
<title>idmef_time_compare&#160;()</title>
<indexterm zone="idmef-time-compare"><primary>idmef_time_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_time_compare (<parameter>const <link linkend="idmef-time-t"><type>idmef_time_t</type></link> *time1</parameter>,
                    <parameter>const <link linkend="idmef-time-t"><type>idmef_time_t</type></link> *time2</parameter>);</programlisting>
<refsect3 id="idmef-time-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>time1</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object to compare with <parameter>time2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>time2</para></entry>
<entry role="parameter_description"><para>Pointer to an <link linkend="idmef-time-t"><type>idmef_time_t</type></link> object to compare with <parameter>time1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-time-compare.returns" role="returns">
<title>Returns</title>
<para> 0 if <parameter>time1</parameter>
and <parameter>time2</parameter>
match, 1 if <parameter>time1</parameter>
is greater than
<parameter>time2</parameter>
, -1 if <parameter>time1</parameter>
is lesser than <parameter>time2</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="idmef-tool-alert-compare" role="function">
<title>idmef_tool_alert_compare&#160;()</title>
<indexterm zone="idmef-tool-alert-compare"><primary>idmef_tool_alert_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_tool_alert_compare (<parameter>const <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *obj1</parameter>,
                          <parameter>const <link linkend="idmef-tool-alert-t"><type>idmef_tool_alert_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-tool-alert-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-tool-alert-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-compare" role="function">
<title>idmef_user_compare&#160;()</title>
<indexterm zone="idmef-user-compare"><primary>idmef_user_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_compare (<parameter>const <link linkend="idmef-user-t"><type>idmef_user_t</type></link> *obj1</parameter>,
                    <parameter>const <link linkend="idmef-user-t"><type>idmef_user_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-user-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-compare" role="function">
<title>idmef_user_id_compare&#160;()</title>
<indexterm zone="idmef-user-id-compare"><primary>idmef_user_id_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_user_id_compare (<parameter>const <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *obj1</parameter>,
                       <parameter>const <link linkend="idmef-user-id-t"><type>idmef_user_id_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-user-id-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-user-id-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>
<refsect2 id="idmef-web-service-compare" role="function">
<title>idmef_web_service_compare&#160;()</title>
<indexterm zone="idmef-web-service-compare"><primary>idmef_web_service_compare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
idmef_web_service_compare (<parameter>const <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *obj1</parameter>,
                           <parameter>const <link linkend="idmef-web-service-t"><type>idmef_web_service_t</type></link> *obj2</parameter>);</programlisting>
<para>Compare <parameter>obj1</parameter>
 with <parameter>obj2</parameter>
.</para>
<refsect3 id="idmef-web-service-compare.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>obj1</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj2</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>obj2</para></entry>
<entry role="parameter_description"><para>Object to compare with <parameter>obj1</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="idmef-web-service-compare.returns" role="returns">
<title>Returns</title>
<para> 0 on match, a negative value on comparison failure.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="libprelude-idmef-tree-wrap.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="IDMEF-LIST-APPEND:CAPS" role="macro">
<title>IDMEF_LIST_APPEND</title>
<indexterm zone="IDMEF-LIST-APPEND:CAPS"><primary>IDMEF_LIST_APPEND</primary></indexterm>
<programlisting language="C">#define IDMEF_LIST_APPEND  INT_MAX
</programlisting>
</refsect2>
<refsect2 id="IDMEF-LIST-PREPEND:CAPS" role="macro">
<title>IDMEF_LIST_PREPEND</title>
<indexterm zone="IDMEF-LIST-PREPEND:CAPS"><primary>IDMEF_LIST_PREPEND</primary></indexterm>
<programlisting language="C">#define IDMEF_LIST_PREPEND (INT_MAX - 1)
</programlisting>
</refsect2>
<refsect2 id="idmef-additional-data-type-t" role="enum">
<title>enum idmef_additional_data_type_t</title>
<indexterm zone="idmef-additional-data-type-t"><primary>idmef_additional_data_type_t</primary></indexterm>
<refsect3 id="idmef-additional-data-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-ERROR:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-STRING:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_STRING</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-BYTE:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_BYTE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-CHARACTER:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_CHARACTER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-DATE-TIME:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_DATE_TIME</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-INTEGER:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_INTEGER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-NTPSTAMP:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_NTPSTAMP</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-PORTLIST:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_PORTLIST</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-REAL:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_REAL</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-BOOLEAN:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_BOOLEAN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-BYTE-STRING:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_BYTE_STRING</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDITIONAL-DATA-TYPE-XML:CAPS">IDMEF_ADDITIONAL_DATA_TYPE_XML</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-additional-data-t" role="typedef">
<title>idmef_additional_data_t</title>
<indexterm zone="idmef-additional-data-t"><primary>idmef_additional_data_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_additional_data idmef_additional_data_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-reference-origin-t" role="enum">
<title>enum idmef_reference_origin_t</title>
<indexterm zone="idmef-reference-origin-t"><primary>idmef_reference_origin_t</primary></indexterm>
<refsect3 id="idmef-reference-origin-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-ERROR:CAPS">IDMEF_REFERENCE_ORIGIN_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-UNKNOWN:CAPS">IDMEF_REFERENCE_ORIGIN_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-VENDOR-SPECIFIC:CAPS">IDMEF_REFERENCE_ORIGIN_VENDOR_SPECIFIC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-USER-SPECIFIC:CAPS">IDMEF_REFERENCE_ORIGIN_USER_SPECIFIC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-BUGTRAQID:CAPS">IDMEF_REFERENCE_ORIGIN_BUGTRAQID</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-CVE:CAPS">IDMEF_REFERENCE_ORIGIN_CVE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-REFERENCE-ORIGIN-OSVDB:CAPS">IDMEF_REFERENCE_ORIGIN_OSVDB</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-reference-t" role="typedef">
<title>idmef_reference_t</title>
<indexterm zone="idmef-reference-t"><primary>idmef_reference_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_reference idmef_reference_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-classification-t" role="typedef">
<title>idmef_classification_t</title>
<indexterm zone="idmef-classification-t"><primary>idmef_classification_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_classification idmef_classification_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-user-id-type-t" role="enum">
<title>enum idmef_user_id_type_t</title>
<indexterm zone="idmef-user-id-type-t"><primary>idmef_user_id_type_t</primary></indexterm>
<refsect3 id="idmef-user-id-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-ORIGINAL-ERROR:CAPS">IDMEF_USER_ID_TYPE_ORIGINAL_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-ORIGINAL-USER:CAPS">IDMEF_USER_ID_TYPE_ORIGINAL_USER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-CURRENT-USER:CAPS">IDMEF_USER_ID_TYPE_CURRENT_USER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-TARGET-USER:CAPS">IDMEF_USER_ID_TYPE_TARGET_USER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-USER-PRIVS:CAPS">IDMEF_USER_ID_TYPE_USER_PRIVS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-CURRENT-GROUP:CAPS">IDMEF_USER_ID_TYPE_CURRENT_GROUP</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-GROUP-PRIVS:CAPS">IDMEF_USER_ID_TYPE_GROUP_PRIVS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-ID-TYPE-OTHER-PRIVS:CAPS">IDMEF_USER_ID_TYPE_OTHER_PRIVS</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-id-t" role="typedef">
<title>idmef_user_id_t</title>
<indexterm zone="idmef-user-id-t"><primary>idmef_user_id_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_user_id idmef_user_id_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-user-category-t" role="enum">
<title>enum idmef_user_category_t</title>
<indexterm zone="idmef-user-category-t"><primary>idmef_user_category_t</primary></indexterm>
<refsect3 id="idmef-user-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-CATEGORY-ERROR:CAPS">IDMEF_USER_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-CATEGORY-UNKNOWN:CAPS">IDMEF_USER_CATEGORY_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-CATEGORY-APPLICATION:CAPS">IDMEF_USER_CATEGORY_APPLICATION</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-USER-CATEGORY-OS-DEVICE:CAPS">IDMEF_USER_CATEGORY_OS_DEVICE</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-user-t" role="typedef">
<title>idmef_user_t</title>
<indexterm zone="idmef-user-t"><primary>idmef_user_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_user idmef_user_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-address-category-t" role="enum">
<title>enum idmef_address_category_t</title>
<indexterm zone="idmef-address-category-t"><primary>idmef_address_category_t</primary></indexterm>
<refsect3 id="idmef-address-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-ERROR:CAPS">IDMEF_ADDRESS_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-UNKNOWN:CAPS">IDMEF_ADDRESS_CATEGORY_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-ATM:CAPS">IDMEF_ADDRESS_CATEGORY_ATM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-E-MAIL:CAPS">IDMEF_ADDRESS_CATEGORY_E_MAIL</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-LOTUS-NOTES:CAPS">IDMEF_ADDRESS_CATEGORY_LOTUS_NOTES</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-MAC:CAPS">IDMEF_ADDRESS_CATEGORY_MAC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-SNA:CAPS">IDMEF_ADDRESS_CATEGORY_SNA</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-VM:CAPS">IDMEF_ADDRESS_CATEGORY_VM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV4-ADDR:CAPS">IDMEF_ADDRESS_CATEGORY_IPV4_ADDR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV4-ADDR-HEX:CAPS">IDMEF_ADDRESS_CATEGORY_IPV4_ADDR_HEX</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV4-NET:CAPS">IDMEF_ADDRESS_CATEGORY_IPV4_NET</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV4-NET-MASK:CAPS">IDMEF_ADDRESS_CATEGORY_IPV4_NET_MASK</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV6-ADDR:CAPS">IDMEF_ADDRESS_CATEGORY_IPV6_ADDR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV6-ADDR-HEX:CAPS">IDMEF_ADDRESS_CATEGORY_IPV6_ADDR_HEX</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV6-NET:CAPS">IDMEF_ADDRESS_CATEGORY_IPV6_NET</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ADDRESS-CATEGORY-IPV6-NET-MASK:CAPS">IDMEF_ADDRESS_CATEGORY_IPV6_NET_MASK</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-address-t" role="typedef">
<title>idmef_address_t</title>
<indexterm zone="idmef-address-t"><primary>idmef_address_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_address idmef_address_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-process-t" role="typedef">
<title>idmef_process_t</title>
<indexterm zone="idmef-process-t"><primary>idmef_process_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_process idmef_process_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-web-service-t" role="typedef">
<title>idmef_web_service_t</title>
<indexterm zone="idmef-web-service-t"><primary>idmef_web_service_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_web_service idmef_web_service_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-snmp-service-t" role="typedef">
<title>idmef_snmp_service_t</title>
<indexterm zone="idmef-snmp-service-t"><primary>idmef_snmp_service_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_snmp_service idmef_snmp_service_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-service-type-t" role="enum">
<title>enum idmef_service_type_t</title>
<indexterm zone="idmef-service-type-t"><primary>idmef_service_type_t</primary></indexterm>
<refsect3 id="idmef-service-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SERVICE-TYPE-ERROR:CAPS">IDMEF_SERVICE_TYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SERVICE-TYPE-DEFAULT:CAPS">IDMEF_SERVICE_TYPE_DEFAULT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SERVICE-TYPE-WEB:CAPS">IDMEF_SERVICE_TYPE_WEB</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SERVICE-TYPE-SNMP:CAPS">IDMEF_SERVICE_TYPE_SNMP</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-service-t" role="typedef">
<title>idmef_service_t</title>
<indexterm zone="idmef-service-t"><primary>idmef_service_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_service idmef_service_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-node-category-t" role="enum">
<title>enum idmef_node_category_t</title>
<indexterm zone="idmef-node-category-t"><primary>idmef_node_category_t</primary></indexterm>
<refsect3 id="idmef-node-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-ERROR:CAPS">IDMEF_NODE_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-UNKNOWN:CAPS">IDMEF_NODE_CATEGORY_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-ADS:CAPS">IDMEF_NODE_CATEGORY_ADS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-AFS:CAPS">IDMEF_NODE_CATEGORY_AFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-CODA:CAPS">IDMEF_NODE_CATEGORY_CODA</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-DFS:CAPS">IDMEF_NODE_CATEGORY_DFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-DNS:CAPS">IDMEF_NODE_CATEGORY_DNS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-HOSTS:CAPS">IDMEF_NODE_CATEGORY_HOSTS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-KERBEROS:CAPS">IDMEF_NODE_CATEGORY_KERBEROS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-NDS:CAPS">IDMEF_NODE_CATEGORY_NDS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-NIS:CAPS">IDMEF_NODE_CATEGORY_NIS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-NISPLUS:CAPS">IDMEF_NODE_CATEGORY_NISPLUS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-NT:CAPS">IDMEF_NODE_CATEGORY_NT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-NODE-CATEGORY-WFW:CAPS">IDMEF_NODE_CATEGORY_WFW</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-node-t" role="typedef">
<title>idmef_node_t</title>
<indexterm zone="idmef-node-t"><primary>idmef_node_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_node idmef_node_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-source-spoofed-t" role="enum">
<title>enum idmef_source_spoofed_t</title>
<indexterm zone="idmef-source-spoofed-t"><primary>idmef_source_spoofed_t</primary></indexterm>
<refsect3 id="idmef-source-spoofed-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SOURCE-SPOOFED-ERROR:CAPS">IDMEF_SOURCE_SPOOFED_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SOURCE-SPOOFED-UNKNOWN:CAPS">IDMEF_SOURCE_SPOOFED_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SOURCE-SPOOFED-YES:CAPS">IDMEF_SOURCE_SPOOFED_YES</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-SOURCE-SPOOFED-NO:CAPS">IDMEF_SOURCE_SPOOFED_NO</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-source-t" role="typedef">
<title>idmef_source_t</title>
<indexterm zone="idmef-source-t"><primary>idmef_source_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_source idmef_source_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-file-access-t" role="typedef">
<title>idmef_file_access_t</title>
<indexterm zone="idmef-file-access-t"><primary>idmef_file_access_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_file_access idmef_file_access_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-inode-t" role="typedef">
<title>idmef_inode_t</title>
<indexterm zone="idmef-inode-t"><primary>idmef_inode_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_inode idmef_inode_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-linkage-t" role="typedef">
<title>idmef_linkage_t</title>
<indexterm zone="idmef-linkage-t"><primary>idmef_linkage_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_linkage idmef_linkage_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-checksum-algorithm-t" role="enum">
<title>enum idmef_checksum_algorithm_t</title>
<indexterm zone="idmef-checksum-algorithm-t"><primary>idmef_checksum_algorithm_t</primary></indexterm>
<refsect3 id="idmef-checksum-algorithm-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-ERROR:CAPS">IDMEF_CHECKSUM_ALGORITHM_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-MD4:CAPS">IDMEF_CHECKSUM_ALGORITHM_MD4</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-MD5:CAPS">IDMEF_CHECKSUM_ALGORITHM_MD5</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-SHA1:CAPS">IDMEF_CHECKSUM_ALGORITHM_SHA1</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-SHA2-256:CAPS">IDMEF_CHECKSUM_ALGORITHM_SHA2_256</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-SHA2-384:CAPS">IDMEF_CHECKSUM_ALGORITHM_SHA2_384</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-SHA2-512:CAPS">IDMEF_CHECKSUM_ALGORITHM_SHA2_512</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-CRC-32:CAPS">IDMEF_CHECKSUM_ALGORITHM_CRC_32</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-HAVAL:CAPS">IDMEF_CHECKSUM_ALGORITHM_HAVAL</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-TIGER:CAPS">IDMEF_CHECKSUM_ALGORITHM_TIGER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CHECKSUM-ALGORITHM-GOST:CAPS">IDMEF_CHECKSUM_ALGORITHM_GOST</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-checksum-t" role="typedef">
<title>idmef_checksum_t</title>
<indexterm zone="idmef-checksum-t"><primary>idmef_checksum_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_checksum idmef_checksum_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-file-category-t" role="enum">
<title>enum idmef_file_category_t</title>
<indexterm zone="idmef-file-category-t"><primary>idmef_file_category_t</primary></indexterm>
<refsect3 id="idmef-file-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-CATEGORY-ERROR:CAPS">IDMEF_FILE_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-CATEGORY-CURRENT:CAPS">IDMEF_FILE_CATEGORY_CURRENT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-CATEGORY-ORIGINAL:CAPS">IDMEF_FILE_CATEGORY_ORIGINAL</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-fstype-t" role="enum">
<title>enum idmef_file_fstype_t</title>
<indexterm zone="idmef-file-fstype-t"><primary>idmef_file_fstype_t</primary></indexterm>
<refsect3 id="idmef-file-fstype-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-ERROR:CAPS">IDMEF_FILE_FSTYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-UFS:CAPS">IDMEF_FILE_FSTYPE_UFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-EFS:CAPS">IDMEF_FILE_FSTYPE_EFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-NFS:CAPS">IDMEF_FILE_FSTYPE_NFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-AFS:CAPS">IDMEF_FILE_FSTYPE_AFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-NTFS:CAPS">IDMEF_FILE_FSTYPE_NTFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-FAT16:CAPS">IDMEF_FILE_FSTYPE_FAT16</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-FAT32:CAPS">IDMEF_FILE_FSTYPE_FAT32</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-PCFS:CAPS">IDMEF_FILE_FSTYPE_PCFS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-JOLIET:CAPS">IDMEF_FILE_FSTYPE_JOLIET</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-FILE-FSTYPE-ISO9660:CAPS">IDMEF_FILE_FSTYPE_ISO9660</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-file-t" role="typedef">
<title>idmef_file_t</title>
<indexterm zone="idmef-file-t"><primary>idmef_file_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_file idmef_file_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-linkage-category-t" role="enum">
<title>enum idmef_linkage_category_t</title>
<indexterm zone="idmef-linkage-category-t"><primary>idmef_linkage_category_t</primary></indexterm>
<refsect3 id="idmef-linkage-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-ERROR:CAPS">IDMEF_LINKAGE_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-HARD-LINK:CAPS">IDMEF_LINKAGE_CATEGORY_HARD_LINK</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-MOUNT-POINT:CAPS">IDMEF_LINKAGE_CATEGORY_MOUNT_POINT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-REPARSE-POINT:CAPS">IDMEF_LINKAGE_CATEGORY_REPARSE_POINT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-SHORTCUT:CAPS">IDMEF_LINKAGE_CATEGORY_SHORTCUT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-STREAM:CAPS">IDMEF_LINKAGE_CATEGORY_STREAM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-LINKAGE-CATEGORY-SYMBOLIC-LINK:CAPS">IDMEF_LINKAGE_CATEGORY_SYMBOLIC_LINK</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-decoy-t" role="enum">
<title>enum idmef_target_decoy_t</title>
<indexterm zone="idmef-target-decoy-t"><primary>idmef_target_decoy_t</primary></indexterm>
<refsect3 id="idmef-target-decoy-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-TARGET-DECOY-ERROR:CAPS">IDMEF_TARGET_DECOY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-TARGET-DECOY-UNKNOWN:CAPS">IDMEF_TARGET_DECOY_UNKNOWN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-TARGET-DECOY-YES:CAPS">IDMEF_TARGET_DECOY_YES</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-TARGET-DECOY-NO:CAPS">IDMEF_TARGET_DECOY_NO</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-target-t" role="typedef">
<title>idmef_target_t</title>
<indexterm zone="idmef-target-t"><primary>idmef_target_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_target idmef_target_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-analyzer-t" role="typedef">
<title>idmef_analyzer_t</title>
<indexterm zone="idmef-analyzer-t"><primary>idmef_analyzer_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_analyzer idmef_analyzer_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-alertident-t" role="typedef">
<title>idmef_alertident_t</title>
<indexterm zone="idmef-alertident-t"><primary>idmef_alertident_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_alertident idmef_alertident_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-impact-severity-t" role="enum">
<title>enum idmef_impact_severity_t</title>
<indexterm zone="idmef-impact-severity-t"><primary>idmef_impact_severity_t</primary></indexterm>
<refsect3 id="idmef-impact-severity-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-SEVERITY-ERROR:CAPS">IDMEF_IMPACT_SEVERITY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-SEVERITY-INFO:CAPS">IDMEF_IMPACT_SEVERITY_INFO</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-SEVERITY-LOW:CAPS">IDMEF_IMPACT_SEVERITY_LOW</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-SEVERITY-MEDIUM:CAPS">IDMEF_IMPACT_SEVERITY_MEDIUM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-SEVERITY-HIGH:CAPS">IDMEF_IMPACT_SEVERITY_HIGH</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-completion-t" role="enum">
<title>enum idmef_impact_completion_t</title>
<indexterm zone="idmef-impact-completion-t"><primary>idmef_impact_completion_t</primary></indexterm>
<refsect3 id="idmef-impact-completion-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-COMPLETION-ERROR:CAPS">IDMEF_IMPACT_COMPLETION_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-COMPLETION-FAILED:CAPS">IDMEF_IMPACT_COMPLETION_FAILED</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-COMPLETION-SUCCEEDED:CAPS">IDMEF_IMPACT_COMPLETION_SUCCEEDED</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-type-t" role="enum">
<title>enum idmef_impact_type_t</title>
<indexterm zone="idmef-impact-type-t"><primary>idmef_impact_type_t</primary></indexterm>
<refsect3 id="idmef-impact-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-ERROR:CAPS">IDMEF_IMPACT_TYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-OTHER:CAPS">IDMEF_IMPACT_TYPE_OTHER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-ADMIN:CAPS">IDMEF_IMPACT_TYPE_ADMIN</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-DOS:CAPS">IDMEF_IMPACT_TYPE_DOS</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-FILE:CAPS">IDMEF_IMPACT_TYPE_FILE</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-RECON:CAPS">IDMEF_IMPACT_TYPE_RECON</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-IMPACT-TYPE-USER:CAPS">IDMEF_IMPACT_TYPE_USER</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-impact-t" role="typedef">
<title>idmef_impact_t</title>
<indexterm zone="idmef-impact-t"><primary>idmef_impact_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_impact idmef_impact_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-action-category-t" role="enum">
<title>enum idmef_action_category_t</title>
<indexterm zone="idmef-action-category-t"><primary>idmef_action_category_t</primary></indexterm>
<refsect3 id="idmef-action-category-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ACTION-CATEGORY-ERROR:CAPS">IDMEF_ACTION_CATEGORY_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ACTION-CATEGORY-OTHER:CAPS">IDMEF_ACTION_CATEGORY_OTHER</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ACTION-CATEGORY-BLOCK-INSTALLED:CAPS">IDMEF_ACTION_CATEGORY_BLOCK_INSTALLED</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ACTION-CATEGORY-NOTIFICATION-SENT:CAPS">IDMEF_ACTION_CATEGORY_NOTIFICATION_SENT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ACTION-CATEGORY-TAKEN-OFFLINE:CAPS">IDMEF_ACTION_CATEGORY_TAKEN_OFFLINE</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-action-t" role="typedef">
<title>idmef_action_t</title>
<indexterm zone="idmef-action-t"><primary>idmef_action_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_action idmef_action_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-confidence-rating-t" role="enum">
<title>enum idmef_confidence_rating_t</title>
<indexterm zone="idmef-confidence-rating-t"><primary>idmef_confidence_rating_t</primary></indexterm>
<refsect3 id="idmef-confidence-rating-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CONFIDENCE-RATING-ERROR:CAPS">IDMEF_CONFIDENCE_RATING_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CONFIDENCE-RATING-NUMERIC:CAPS">IDMEF_CONFIDENCE_RATING_NUMERIC</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CONFIDENCE-RATING-LOW:CAPS">IDMEF_CONFIDENCE_RATING_LOW</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CONFIDENCE-RATING-MEDIUM:CAPS">IDMEF_CONFIDENCE_RATING_MEDIUM</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-CONFIDENCE-RATING-HIGH:CAPS">IDMEF_CONFIDENCE_RATING_HIGH</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-confidence-t" role="typedef">
<title>idmef_confidence_t</title>
<indexterm zone="idmef-confidence-t"><primary>idmef_confidence_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_confidence idmef_confidence_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-assessment-t" role="typedef">
<title>idmef_assessment_t</title>
<indexterm zone="idmef-assessment-t"><primary>idmef_assessment_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_assessment idmef_assessment_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-tool-alert-t" role="typedef">
<title>idmef_tool_alert_t</title>
<indexterm zone="idmef-tool-alert-t"><primary>idmef_tool_alert_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_tool_alert idmef_tool_alert_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-correlation-alert-t" role="typedef">
<title>idmef_correlation_alert_t</title>
<indexterm zone="idmef-correlation-alert-t"><primary>idmef_correlation_alert_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_correlation_alert idmef_correlation_alert_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-overflow-alert-t" role="typedef">
<title>idmef_overflow_alert_t</title>
<indexterm zone="idmef-overflow-alert-t"><primary>idmef_overflow_alert_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_overflow_alert idmef_overflow_alert_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-alert-type-t" role="enum">
<title>enum idmef_alert_type_t</title>
<indexterm zone="idmef-alert-type-t"><primary>idmef_alert_type_t</primary></indexterm>
<refsect3 id="idmef-alert-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ALERT-TYPE-ERROR:CAPS">IDMEF_ALERT_TYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ALERT-TYPE-DEFAULT:CAPS">IDMEF_ALERT_TYPE_DEFAULT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ALERT-TYPE-TOOL:CAPS">IDMEF_ALERT_TYPE_TOOL</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ALERT-TYPE-CORRELATION:CAPS">IDMEF_ALERT_TYPE_CORRELATION</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-ALERT-TYPE-OVERFLOW:CAPS">IDMEF_ALERT_TYPE_OVERFLOW</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-alert-t" role="typedef">
<title>idmef_alert_t</title>
<indexterm zone="idmef-alert-t"><primary>idmef_alert_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_alert idmef_alert_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-heartbeat-t" role="typedef">
<title>idmef_heartbeat_t</title>
<indexterm zone="idmef-heartbeat-t"><primary>idmef_heartbeat_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_heartbeat idmef_heartbeat_t;
</programlisting>
</refsect2>
<refsect2 id="idmef-message-type-t" role="enum">
<title>enum idmef_message_type_t</title>
<indexterm zone="idmef-message-type-t"><primary>idmef_message_type_t</primary></indexterm>
<refsect3 id="idmef-message-type-t.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-MESSAGE-TYPE-ERROR:CAPS">IDMEF_MESSAGE_TYPE_ERROR</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-MESSAGE-TYPE-ALERT:CAPS">IDMEF_MESSAGE_TYPE_ALERT</para></entry>
<entry /><entry />
</row>
<row role="constant"><entry role="enum_member_name"><para id="IDMEF-MESSAGE-TYPE-HEARTBEAT:CAPS">IDMEF_MESSAGE_TYPE_HEARTBEAT</para></entry>
<entry /><entry />
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="idmef-message-t" role="typedef">
<title>idmef_message_t</title>
<indexterm zone="idmef-message-t"><primary>idmef_message_t</primary></indexterm>
<programlisting language="C">typedef struct idmef_message idmef_message_t;
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ADDITIONAL-DATA-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ADDITIONAL_DATA_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-ADDITIONAL-DATA-TYPE:CAPS"><primary>IDMEF_CLASS_ID_ADDITIONAL_DATA_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ADDITIONAL_DATA_TYPE 3
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ADDITIONAL-DATA:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ADDITIONAL_DATA</title>
<indexterm zone="IDMEF-CLASS-ID-ADDITIONAL-DATA:CAPS"><primary>IDMEF_CLASS_ID_ADDITIONAL_DATA</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ADDITIONAL_DATA 4
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-REFERENCE-ORIGIN:CAPS" role="macro">
<title>IDMEF_CLASS_ID_REFERENCE_ORIGIN</title>
<indexterm zone="IDMEF-CLASS-ID-REFERENCE-ORIGIN:CAPS"><primary>IDMEF_CLASS_ID_REFERENCE_ORIGIN</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_REFERENCE_ORIGIN 5
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-REFERENCE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_REFERENCE</title>
<indexterm zone="IDMEF-CLASS-ID-REFERENCE:CAPS"><primary>IDMEF_CLASS_ID_REFERENCE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_REFERENCE 50
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CLASSIFICATION:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CLASSIFICATION</title>
<indexterm zone="IDMEF-CLASS-ID-CLASSIFICATION:CAPS"><primary>IDMEF_CLASS_ID_CLASSIFICATION</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CLASSIFICATION 6
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-USER-ID-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_USER_ID_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-USER-ID-TYPE:CAPS"><primary>IDMEF_CLASS_ID_USER_ID_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_USER_ID_TYPE 7
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-USER-ID:CAPS" role="macro">
<title>IDMEF_CLASS_ID_USER_ID</title>
<indexterm zone="IDMEF-CLASS-ID-USER-ID:CAPS"><primary>IDMEF_CLASS_ID_USER_ID</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_USER_ID 8
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-USER-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_USER_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-USER-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_USER_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_USER_CATEGORY 9
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-USER:CAPS" role="macro">
<title>IDMEF_CLASS_ID_USER</title>
<indexterm zone="IDMEF-CLASS-ID-USER:CAPS"><primary>IDMEF_CLASS_ID_USER</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_USER 10
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ADDRESS-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ADDRESS_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-ADDRESS-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_ADDRESS_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ADDRESS_CATEGORY 11
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ADDRESS:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ADDRESS</title>
<indexterm zone="IDMEF-CLASS-ID-ADDRESS:CAPS"><primary>IDMEF_CLASS_ID_ADDRESS</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ADDRESS 12
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-PROCESS:CAPS" role="macro">
<title>IDMEF_CLASS_ID_PROCESS</title>
<indexterm zone="IDMEF-CLASS-ID-PROCESS:CAPS"><primary>IDMEF_CLASS_ID_PROCESS</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_PROCESS 13
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-WEB-SERVICE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_WEB_SERVICE</title>
<indexterm zone="IDMEF-CLASS-ID-WEB-SERVICE:CAPS"><primary>IDMEF_CLASS_ID_WEB_SERVICE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_WEB_SERVICE 14
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-SNMP-SERVICE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_SNMP_SERVICE</title>
<indexterm zone="IDMEF-CLASS-ID-SNMP-SERVICE:CAPS"><primary>IDMEF_CLASS_ID_SNMP_SERVICE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_SNMP_SERVICE 15
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-SERVICE-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_SERVICE_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-SERVICE-TYPE:CAPS"><primary>IDMEF_CLASS_ID_SERVICE_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_SERVICE_TYPE 16
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-SERVICE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_SERVICE</title>
<indexterm zone="IDMEF-CLASS-ID-SERVICE:CAPS"><primary>IDMEF_CLASS_ID_SERVICE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_SERVICE 17
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-NODE-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_NODE_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-NODE-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_NODE_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_NODE_CATEGORY 18
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-NODE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_NODE</title>
<indexterm zone="IDMEF-CLASS-ID-NODE:CAPS"><primary>IDMEF_CLASS_ID_NODE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_NODE 19
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-SOURCE-SPOOFED:CAPS" role="macro">
<title>IDMEF_CLASS_ID_SOURCE_SPOOFED</title>
<indexterm zone="IDMEF-CLASS-ID-SOURCE-SPOOFED:CAPS"><primary>IDMEF_CLASS_ID_SOURCE_SPOOFED</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_SOURCE_SPOOFED 20
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-SOURCE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_SOURCE</title>
<indexterm zone="IDMEF-CLASS-ID-SOURCE:CAPS"><primary>IDMEF_CLASS_ID_SOURCE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_SOURCE 21
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-FILE-ACCESS:CAPS" role="macro">
<title>IDMEF_CLASS_ID_FILE_ACCESS</title>
<indexterm zone="IDMEF-CLASS-ID-FILE-ACCESS:CAPS"><primary>IDMEF_CLASS_ID_FILE_ACCESS</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_FILE_ACCESS 22
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-INODE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_INODE</title>
<indexterm zone="IDMEF-CLASS-ID-INODE:CAPS"><primary>IDMEF_CLASS_ID_INODE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_INODE 23
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CHECKSUM-ALGORITHM:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CHECKSUM_ALGORITHM</title>
<indexterm zone="IDMEF-CLASS-ID-CHECKSUM-ALGORITHM:CAPS"><primary>IDMEF_CLASS_ID_CHECKSUM_ALGORITHM</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CHECKSUM_ALGORITHM 53
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CHECKSUM:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CHECKSUM</title>
<indexterm zone="IDMEF-CLASS-ID-CHECKSUM:CAPS"><primary>IDMEF_CLASS_ID_CHECKSUM</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CHECKSUM 52
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-FILE-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_FILE_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-FILE-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_FILE_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_FILE_CATEGORY 24
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-FILE-FSTYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_FILE_FSTYPE</title>
<indexterm zone="IDMEF-CLASS-ID-FILE-FSTYPE:CAPS"><primary>IDMEF_CLASS_ID_FILE_FSTYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_FILE_FSTYPE 25
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-FILE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_FILE</title>
<indexterm zone="IDMEF-CLASS-ID-FILE:CAPS"><primary>IDMEF_CLASS_ID_FILE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_FILE 26
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-LINKAGE-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_LINKAGE_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-LINKAGE-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_LINKAGE_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_LINKAGE_CATEGORY 27
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-LINKAGE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_LINKAGE</title>
<indexterm zone="IDMEF-CLASS-ID-LINKAGE:CAPS"><primary>IDMEF_CLASS_ID_LINKAGE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_LINKAGE 28
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-TARGET-DECOY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_TARGET_DECOY</title>
<indexterm zone="IDMEF-CLASS-ID-TARGET-DECOY:CAPS"><primary>IDMEF_CLASS_ID_TARGET_DECOY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_TARGET_DECOY 29
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-TARGET:CAPS" role="macro">
<title>IDMEF_CLASS_ID_TARGET</title>
<indexterm zone="IDMEF-CLASS-ID-TARGET:CAPS"><primary>IDMEF_CLASS_ID_TARGET</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_TARGET 30
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ANALYZER:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ANALYZER</title>
<indexterm zone="IDMEF-CLASS-ID-ANALYZER:CAPS"><primary>IDMEF_CLASS_ID_ANALYZER</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ANALYZER 31
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ALERTIDENT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ALERTIDENT</title>
<indexterm zone="IDMEF-CLASS-ID-ALERTIDENT:CAPS"><primary>IDMEF_CLASS_ID_ALERTIDENT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ALERTIDENT 32
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-IMPACT-SEVERITY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_IMPACT_SEVERITY</title>
<indexterm zone="IDMEF-CLASS-ID-IMPACT-SEVERITY:CAPS"><primary>IDMEF_CLASS_ID_IMPACT_SEVERITY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_IMPACT_SEVERITY 33
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-IMPACT-COMPLETION:CAPS" role="macro">
<title>IDMEF_CLASS_ID_IMPACT_COMPLETION</title>
<indexterm zone="IDMEF-CLASS-ID-IMPACT-COMPLETION:CAPS"><primary>IDMEF_CLASS_ID_IMPACT_COMPLETION</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_IMPACT_COMPLETION 34
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-IMPACT-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_IMPACT_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-IMPACT-TYPE:CAPS"><primary>IDMEF_CLASS_ID_IMPACT_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_IMPACT_TYPE 35
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-IMPACT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_IMPACT</title>
<indexterm zone="IDMEF-CLASS-ID-IMPACT:CAPS"><primary>IDMEF_CLASS_ID_IMPACT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_IMPACT 36
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ACTION-CATEGORY:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ACTION_CATEGORY</title>
<indexterm zone="IDMEF-CLASS-ID-ACTION-CATEGORY:CAPS"><primary>IDMEF_CLASS_ID_ACTION_CATEGORY</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ACTION_CATEGORY 37
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ACTION:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ACTION</title>
<indexterm zone="IDMEF-CLASS-ID-ACTION:CAPS"><primary>IDMEF_CLASS_ID_ACTION</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ACTION 38
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CONFIDENCE-RATING:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CONFIDENCE_RATING</title>
<indexterm zone="IDMEF-CLASS-ID-CONFIDENCE-RATING:CAPS"><primary>IDMEF_CLASS_ID_CONFIDENCE_RATING</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CONFIDENCE_RATING 39
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CONFIDENCE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CONFIDENCE</title>
<indexterm zone="IDMEF-CLASS-ID-CONFIDENCE:CAPS"><primary>IDMEF_CLASS_ID_CONFIDENCE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CONFIDENCE 40
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ASSESSMENT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ASSESSMENT</title>
<indexterm zone="IDMEF-CLASS-ID-ASSESSMENT:CAPS"><primary>IDMEF_CLASS_ID_ASSESSMENT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ASSESSMENT 41
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-TOOL-ALERT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_TOOL_ALERT</title>
<indexterm zone="IDMEF-CLASS-ID-TOOL-ALERT:CAPS"><primary>IDMEF_CLASS_ID_TOOL_ALERT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_TOOL_ALERT 42
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-CORRELATION-ALERT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_CORRELATION_ALERT</title>
<indexterm zone="IDMEF-CLASS-ID-CORRELATION-ALERT:CAPS"><primary>IDMEF_CLASS_ID_CORRELATION_ALERT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_CORRELATION_ALERT 43
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-OVERFLOW-ALERT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_OVERFLOW_ALERT</title>
<indexterm zone="IDMEF-CLASS-ID-OVERFLOW-ALERT:CAPS"><primary>IDMEF_CLASS_ID_OVERFLOW_ALERT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_OVERFLOW_ALERT 44
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ALERT-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ALERT_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-ALERT-TYPE:CAPS"><primary>IDMEF_CLASS_ID_ALERT_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ALERT_TYPE 45
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-ALERT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_ALERT</title>
<indexterm zone="IDMEF-CLASS-ID-ALERT:CAPS"><primary>IDMEF_CLASS_ID_ALERT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_ALERT 46
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-HEARTBEAT:CAPS" role="macro">
<title>IDMEF_CLASS_ID_HEARTBEAT</title>
<indexterm zone="IDMEF-CLASS-ID-HEARTBEAT:CAPS"><primary>IDMEF_CLASS_ID_HEARTBEAT</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_HEARTBEAT 47
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-MESSAGE-TYPE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_MESSAGE_TYPE</title>
<indexterm zone="IDMEF-CLASS-ID-MESSAGE-TYPE:CAPS"><primary>IDMEF_CLASS_ID_MESSAGE_TYPE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_MESSAGE_TYPE 48
</programlisting>
</refsect2>
<refsect2 id="IDMEF-CLASS-ID-MESSAGE:CAPS" role="macro">
<title>IDMEF_CLASS_ID_MESSAGE</title>
<indexterm zone="IDMEF-CLASS-ID-MESSAGE:CAPS"><primary>IDMEF_CLASS_ID_MESSAGE</primary></indexterm>
<programlisting language="C">#define IDMEF_CLASS_ID_MESSAGE 49
</programlisting>
</refsect2>

</refsect1>

</refentry>
