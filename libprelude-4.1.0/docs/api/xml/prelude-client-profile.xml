<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
]>
<refentry id="libprelude-prelude-client-profile">
<refmeta>
<refentrytitle role="top_of_page" id="libprelude-prelude-client-profile.top_of_page">prelude-client-profile</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBPRELUDE Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>prelude-client-profile</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsect1 id="libprelude-prelude-client-profile.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-new">prelude_client_profile_new</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-client-profile-t"><returnvalue>prelude_client_profile_t</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-client-profile-ref">prelude_client_profile_ref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-destroy">prelude_client_profile_destroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-config-filename">prelude_client_profile_get_config_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-analyzerid-filename">prelude_client_profile_get_analyzerid_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-key-filename">prelude_client_profile_get_tls_key_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-server-ca-cert-filename">prelude_client_profile_get_tls_server_ca_cert_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-server-keycert-filename">prelude_client_profile_get_tls_server_keycert_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-server-crl-filename">prelude_client_profile_get_tls_server_crl_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-client-keycert-filename">prelude_client_profile_get_tls_client_keycert_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-tls-client-trusted-cert-filename">prelude_client_profile_get_tls_client_trusted_cert_filename</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-backup-dirname">prelude_client_profile_get_backup_dirname</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-profile-dirname">prelude_client_profile_get_profile_dirname</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-default-config-dirname">prelude_client_profile_get_default_config_dirname</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-set-prefix">prelude_client_profile_set_prefix</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-prefix">prelude_client_profile_get_prefix</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-set-uid">prelude_client_profile_set_uid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-uid-t"><returnvalue>prelude_uid_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-uid">prelude_client_profile_get_uid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-set-gid">prelude_client_profile_set_gid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="prelude-gid-t"><returnvalue>prelude_gid_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-gid">prelude_client_profile_get_gid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-set-name">prelude_client_profile_set_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-name">prelude_client_profile_get_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-analyzerid">prelude_client_profile_get_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-set-analyzerid">prelude_client_profile_set_analyzerid</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="prelude-client-profile-get-credentials">prelude_client_profile_get_credentials</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="libprelude-prelude-client-profile.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="prelude-gid-t">prelude_gid_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="prelude-uid-t">prelude_uid_t</link></entry></row>
<row><entry role="typedef_keyword">typedef</entry><entry role="function_name"><link linkend="prelude-client-profile-t">prelude_client_profile_t</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="libprelude-prelude-client-profile.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="libprelude-prelude-client-profile.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="prelude-client-profile-new" role="function">
<title>prelude_client_profile_new&#160;()</title>
<indexterm zone="prelude-client-profile-new"><primary>prelude_client_profile_new</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_client_profile_new (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> **ret</parameter>,
                            <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>Creates a new <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object and store its
address into <parameter>ret</parameter>
.</para>
<refsect3 id="prelude-client-profile-new.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ret</para></entry>
<entry role="parameter_description"><para>Pointer where to store the address of the created object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>Name for this profile.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-new.returns" role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-ref" role="function">
<title>prelude_client_profile_ref&#160;()</title>
<indexterm zone="prelude-client-profile-ref"><primary>prelude_client_profile_ref</primary></indexterm>
<programlisting language="C"><link linkend="prelude-client-profile-t"><returnvalue>prelude_client_profile_t</returnvalue></link>&#160;*
prelude_client_profile_ref (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-client-profile-destroy" role="function">
<title>prelude_client_profile_destroy&#160;()</title>
<indexterm zone="prelude-client-profile-destroy"><primary>prelude_client_profile_destroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_destroy (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
<para>Destroys <parameter>cp</parameter>
.</para>
<refsect3 id="prelude-client-profile-destroy.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link>.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-config-filename" role="function">
<title>prelude_client_profile_get_config_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-config-filename"><primary>prelude_client_profile_get_config_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_config_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store <parameter>cp</parameter>
 configuration template.</para>
<refsect3 id="prelude-client-profile-get-config-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-analyzerid-filename" role="function">
<title>prelude_client_profile_get_analyzerid_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-analyzerid-filename"><primary>prelude_client_profile_get_analyzerid_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_analyzerid_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store <parameter>cp</parameter>
 unique and permanent analyzer ident.</para>
<refsect3 id="prelude-client-profile-get-analyzerid-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-key-filename" role="function">
<title>prelude_client_profile_get_tls_key_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-key-filename"><primary>prelude_client_profile_get_tls_key_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_key_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store <parameter>cp</parameter>
 private key.</para>
<refsect3 id="prelude-client-profile-get-tls-key-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-server-ca-cert-filename" role="function">
<title>prelude_client_profile_get_tls_server_ca_cert_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-server-ca-cert-filename"><primary>prelude_client_profile_get_tls_server_ca_cert_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_server_ca_cert_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store <parameter>cp</parameter>
 related CA certificate.
This only apply to <parameter>cp</parameter>
 receiving connection from analyzer (server).</para>
<refsect3 id="prelude-client-profile-get-tls-server-ca-cert-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-server-keycert-filename" role="function">
<title>prelude_client_profile_get_tls_server_keycert_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-server-keycert-filename"><primary>prelude_client_profile_get_tls_server_keycert_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_server_keycert_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store certificate for <parameter>cp</parameter>
 server.
This only apply to <parameter>cp</parameter>
 receiving connection from analyzer (server).</para>
<refsect3 id="prelude-client-profile-get-tls-server-keycert-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-server-crl-filename" role="function">
<title>prelude_client_profile_get_tls_server_crl_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-server-crl-filename"><primary>prelude_client_profile_get_tls_server_crl_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_server_crl_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store CRL for <parameter>cp</parameter>
 server.
This only apply to <parameter>cp</parameter>
 receiving connection from analyzer (server).</para>
<refsect3 id="prelude-client-profile-get-tls-server-crl-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-client-keycert-filename" role="function">
<title>prelude_client_profile_get_tls_client_keycert_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-client-keycert-filename"><primary>prelude_client_profile_get_tls_client_keycert_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_client_keycert_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store public certificate for <parameter>cp</parameter>
 private key.
This only apply to client connecting to a peer.</para>
<refsect3 id="prelude-client-profile-get-tls-client-keycert-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-tls-client-trusted-cert-filename" role="function">
<title>prelude_client_profile_get_tls_client_trusted_cert_filename&#160;()</title>
<indexterm zone="prelude-client-profile-get-tls-client-trusted-cert-filename"><primary>prelude_client_profile_get_tls_client_trusted_cert_filename</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_tls_client_trusted_cert_filename
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the filename used to store peers public certificates that <parameter>cp</parameter>
 trust.
This only apply to client connecting to a peer.</para>
<refsect3 id="prelude-client-profile-get-tls-client-trusted-cert-filename.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-backup-dirname" role="function">
<title>prelude_client_profile_get_backup_dirname&#160;()</title>
<indexterm zone="prelude-client-profile-get-backup-dirname"><primary>prelude_client_profile_get_backup_dirname</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_backup_dirname
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Writes the directory name where the profile for <parameter>cp</parameter>
 is stored. If
<parameter>cp</parameter>
 is NULL or has no name, then this function will provide the main
profile directory.</para>
<refsect3 id="prelude-client-profile-get-backup-dirname.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-profile-dirname" role="function">
<title>prelude_client_profile_get_profile_dirname&#160;()</title>
<indexterm zone="prelude-client-profile-get-profile-dirname"><primary>prelude_client_profile_get_profile_dirname</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_profile_dirname
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-client-profile-get-default-config-dirname" role="function">
<title>prelude_client_profile_get_default_config_dirname&#160;()</title>
<indexterm zone="prelude-client-profile-get-default-config-dirname"><primary>prelude_client_profile_get_default_config_dirname</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_default_config_dirname
                               (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
</refsect2>
<refsect2 id="prelude-client-profile-set-prefix" role="function">
<title>prelude_client_profile_set_prefix&#160;()</title>
<indexterm zone="prelude-client-profile-set-prefix"><primary>prelude_client_profile_set_prefix</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_client_profile_set_prefix (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                   <parameter>const <link linkend="char"><type>char</type></link> *prefix</parameter>);</programlisting>
<para>This function allow to dynamically change the prefix used to acess
libprelude related file. This is particularly usefull in case of
application running under certain condition (chroot).</para>
<refsect3 id="prelude-client-profile-set-prefix.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prefix</para></entry>
<entry role="parameter_description"><para>Prefix to use for various libprelude files.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-set-prefix.returns" role="returns">
<title>Returns</title>
<para> 0 on success, a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-prefix" role="function">
<title>prelude_client_profile_get_prefix&#160;()</title>
<indexterm zone="prelude-client-profile-get-prefix"><primary>prelude_client_profile_get_prefix</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_get_prefix (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                   <parameter><link linkend="char"><type>char</type></link> *buf</parameter>,
                                   <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>Retrieve current prefix used with this profile.</para>
<refsect3 id="prelude-client-profile-get-prefix.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>pointer on a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>buffer to write the returned filename to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>size of <parameter>buf</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-set-uid" role="function">
<title>prelude_client_profile_set_uid&#160;()</title>
<indexterm zone="prelude-client-profile-set-uid"><primary>prelude_client_profile_set_uid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_set_uid (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="prelude-uid-t"><type>prelude_uid_t</type></link> uid</parameter>);</programlisting>
<para>Sets the UID used by <parameter>cp</parameter>
 to <parameter>uid</parameter>
.</para>
<refsect3 id="prelude-client-profile-set-uid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uid</para></entry>
<entry role="parameter_description"><para>UID to be used by <parameter>cp</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-uid" role="function">
<title>prelude_client_profile_get_uid&#160;()</title>
<indexterm zone="prelude-client-profile-get-uid"><primary>prelude_client_profile_get_uid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-uid-t"><returnvalue>prelude_uid_t</returnvalue></link>
prelude_client_profile_get_uid (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
<para>Gets the UID associated with <parameter>cp</parameter>
.</para>
<refsect3 id="prelude-client-profile-get-uid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-get-uid.returns" role="returns">
<title>Returns</title>
<para> the UID associated used by <parameter>cp</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-set-gid" role="function">
<title>prelude_client_profile_set_gid&#160;()</title>
<indexterm zone="prelude-client-profile-set-gid"><primary>prelude_client_profile_set_gid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_set_gid (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="prelude-uid-t"><type>prelude_uid_t</type></link> gid</parameter>);</programlisting>
<para>Sets the GID used by <parameter>cp</parameter>
 to <parameter>gid</parameter>
.</para>
<refsect3 id="prelude-client-profile-set-gid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>gid</para></entry>
<entry role="parameter_description"><para>GID to be used by <parameter>cp</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-gid" role="function">
<title>prelude_client_profile_get_gid&#160;()</title>
<indexterm zone="prelude-client-profile-get-gid"><primary>prelude_client_profile_get_gid</primary></indexterm>
<programlisting language="C"><link linkend="prelude-gid-t"><returnvalue>prelude_gid_t</returnvalue></link>
prelude_client_profile_get_gid (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
<para>Gets the GID associated with <parameter>cp</parameter>
.</para>
<refsect3 id="prelude-client-profile-get-gid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-get-gid.returns" role="returns">
<title>Returns</title>
<para> the GID associated used by <parameter>cp</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-set-name" role="function">
<title>prelude_client_profile_set_name&#160;()</title>
<indexterm zone="prelude-client-profile-set-name"><primary>prelude_client_profile_set_name</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_client_profile_set_name (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<para>Sets the prelude client profile name.</para>
<refsect3 id="prelude-client-profile-set-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>Name to associate the profile with.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-set-name.returns" role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occured.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-name" role="function">
<title>prelude_client_profile_get_name&#160;()</title>
<indexterm zone="prelude-client-profile-get-name"><primary>prelude_client_profile_get_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
prelude_client_profile_get_name (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
<para>Gets the name of <parameter>cp</parameter>
 client profile.</para>
<refsect3 id="prelude-client-profile-get-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-get-name.returns" role="returns">
<title>Returns</title>
<para> the name used by <parameter>cp</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-analyzerid" role="function">
<title>prelude_client_profile_get_analyzerid&#160;()</title>
<indexterm zone="prelude-client-profile-get-analyzerid"><primary>prelude_client_profile_get_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="uint64-t"><returnvalue>uint64_t</returnvalue></link>
prelude_client_profile_get_analyzerid (<parameter>const <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>);</programlisting>
<para>Gets the unique and permanent analyzer ident associated with <parameter>cp</parameter>
.</para>
<refsect3 id="prelude-client-profile-get-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="prelude-client-profile-get-analyzerid.returns" role="returns">
<title>Returns</title>
<para> the analyzer ident used by <parameter>cp</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-set-analyzerid" role="function">
<title>prelude_client_profile_set_analyzerid&#160;()</title>
<indexterm zone="prelude-client-profile-set-analyzerid"><primary>prelude_client_profile_set_analyzerid</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
prelude_client_profile_set_analyzerid (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                       <parameter><link linkend="uint64-t"><type>uint64_t</type></link> analyzerid</parameter>);</programlisting>
<para>Sets the Analyzer ID used by <parameter>cp</parameter>
 to <parameter>analyzerid</parameter>
.</para>
<refsect3 id="prelude-client-profile-set-analyzerid.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cp</para></entry>
<entry role="parameter_description"><para>Pointer to a <link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> object.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>analyzerid</para></entry>
<entry role="parameter_description"><para>Analyzer ID to be used by <parameter>cp</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="prelude-client-profile-get-credentials" role="function">
<title>prelude_client_profile_get_credentials&#160;()</title>
<indexterm zone="prelude-client-profile-get-credentials"><primary>prelude_client_profile_get_credentials</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
prelude_client_profile_get_credentials
                               (<parameter><link linkend="prelude-client-profile-t"><type>prelude_client_profile_t</type></link> *cp</parameter>,
                                <parameter><link linkend="void"><type>void</type></link> **credentials</parameter>);</programlisting>
</refsect2>

</refsect1>
<refsect1 id="libprelude-prelude-client-profile.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="prelude-gid-t" role="typedef">
<title>prelude_gid_t</title>
<indexterm zone="prelude-gid-t"><primary>prelude_gid_t</primary></indexterm>
<programlisting language="C">typedef gid_t prelude_gid_t;
</programlisting>
</refsect2>
<refsect2 id="prelude-uid-t" role="typedef">
<title>prelude_uid_t</title>
<indexterm zone="prelude-uid-t"><primary>prelude_uid_t</primary></indexterm>
<programlisting language="C">typedef uid_t prelude_uid_t;
</programlisting>
</refsect2>
<refsect2 id="prelude-client-profile-t" role="typedef">
<title>prelude_client_profile_t</title>
<indexterm zone="prelude-client-profile-t"><primary>prelude_client_profile_t</primary></indexterm>
<programlisting language="C">typedef struct prelude_client_profile prelude_client_profile_t;
</programlisting>
</refsect2>

</refsect1>

</refentry>
